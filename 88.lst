

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Jul 21 01:04:52 2023

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F883
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	text962,local,class=CODE,delta=2
    16                           	psect	text978,local,class=CODE,delta=2
    17                           	psect	text979,local,class=CODE,delta=2
    18                           	psect	text980,local,class=CODE,delta=2
    19                           	psect	text981,local,class=CODE,delta=2
    20                           	psect	text985,local,class=CODE,delta=2
    21                           	psect	text986,local,class=CODE,delta=2
    22                           	psect	text989,local,class=CODE,delta=2
    23                           	psect	text990,local,class=CODE,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text991,local,class=CODE,delta=2
    26                           	psect	pa_nodes,global,class=CODE,delta=2
    27                           	dabs	1,0x7E,2
    28  000A                     	;#
    29                           
    30                           	psect	config
    31  2007  23A2               	dw	9122	;#
    32  2008  3FFF               	dw	16383	;#
    33                           
    34                           	psect	strings
    35  0800                     __pstrings:	
    36  0800                     stringtab:	
    37                           ;	global	stringdir,stringtab,__stringbase
    38                           
    39  0800                     stringcode:	
    40                           ;	String table - string pointers are 1 byte each
    41                           
    42  0800                     stringdir:	
    43  0800  3008               	movlw	high stringdir
    44  0801  008A               	movwf	10
    45  0802  0804               	movf	4,w
    46  0803  0A84               	incf	4,f
    47  0804  0782               	addwf	2,f
    48  0805                     __stringbase:	
    49  0805  3400               	retlw	0
    50  0806                     _GREWORDS:	
    51  0806  34FC               	retlw	252
    52  0807  343F               	retlw	63
    53  0808  3400               	retlw	0
    54  0809  340F               	retlw	15
    55  080A  34F3               	retlw	243
    56  080B  343C               	retlw	60
    57  080C  34C3               	retlw	195
    58  080D  343F               	retlw	63
    59  080E  340F               	retlw	15
    60  080F  340F               	retlw	15
    61  0810  34CF               	retlw	207
    62  0811  3433               	retlw	51
    63  0812  34FF               	retlw	255
    64  0813  3433               	retlw	51
    65  0814  3400               	retlw	0
    66  0815  343F               	retlw	63
    67  0816  34FF               	retlw	255
    68  0817  343F               	retlw	63
    69  0818  34CF               	retlw	207
    70  0819  343F               	retlw	63
    71  081A  3400               	retlw	0
    72  081B  3400               	retlw	0
    73  081C  3403               	retlw	3
    74  081D  3400               	retlw	0
    75  081E                     _REDWORDS:	
    76  081E  34FC               	retlw	252
    77  081F  343F               	retlw	63
    78  0820  3400               	retlw	0
    79  0821  340F               	retlw	15
    80  0822  34F3               	retlw	243
    81  0823  343C               	retlw	60
    82  0824  34C3               	retlw	195
    83  0825  343F               	retlw	63
    84  0826  340F               	retlw	15
    85  0827  340F               	retlw	15
    86  0828  34CF               	retlw	207
    87  0829  3433               	retlw	51
    88  082A  34FF               	retlw	255
    89  082B  3433               	retlw	51
    90  082C  3400               	retlw	0
    91  082D  343F               	retlw	63
    92  082E  34FF               	retlw	255
    93  082F  343F               	retlw	63
    94  0830  34CF               	retlw	207
    95  0831  343F               	retlw	63
    96  0832  3400               	retlw	0
    97  0833  3400               	retlw	0
    98  0834  3403               	retlw	3
    99  0835  3400               	retlw	0
   100  0836                     _YELWORDS:	
   101  0836  34FC               	retlw	252
   102  0837  343F               	retlw	63
   103  0838  3400               	retlw	0
   104  0839  340F               	retlw	15
   105  083A  34F3               	retlw	243
   106  083B  343C               	retlw	60
   107  083C  34C3               	retlw	195
   108  083D  343F               	retlw	63
   109  083E  340F               	retlw	15
   110  083F  340F               	retlw	15
   111  0840  34CF               	retlw	207
   112  0841  3433               	retlw	51
   113  0842  34FF               	retlw	255
   114  0843  3433               	retlw	51
   115  0844  3400               	retlw	0
   116  0845  343F               	retlw	63
   117  0846  34FF               	retlw	255
   118  0847  343F               	retlw	63
   119  0848  34CF               	retlw	207
   120  0849  343F               	retlw	63
   121  084A  3400               	retlw	0
   122  084B  3400               	retlw	0
   123  084C  3403               	retlw	3
   124  084D  3400               	retlw	0
   125  000C                     _PIR1	set	12
   126  0006                     _PORTB	set	6
   127  0007                     _PORTC	set	7
   128  001A                     _RCREG	set	26
   129  0010                     _T1CON	set	16
   130  000F                     _TMR1H	set	15
   131  000E                     _TMR1L	set	14
   132  00C4                     _CREN	set	196
   133  005F                     _GIE	set	95
   134  00C1                     _OERR	set	193
   135  005E                     _PEIE	set	94
   136  0030                     _RB0	set	48
   137  0031                     _RB1	set	49
   138  0032                     _RB2	set	50
   139  0033                     _RB3	set	51
   140  0034                     _RB4	set	52
   141  0035                     _RB5	set	53
   142  0036                     _RB6	set	54
   143  003D                     _RC5	set	61
   144  0065                     _RCIF	set	101
   145  00C6                     _RX9	set	198
   146  00C7                     _SPEN	set	199
   147  0060                     _TMR1IF	set	96
   148  008F                     _OSCCON	set	143
   149  0099                     _SPBRG	set	153
   150  009A                     _SPBRGH	set	154
   151  0086                     _TRISB	set	134
   152  0087                     _TRISC	set	135
   153  04C2                     _BRGH	set	1218
   154  040B                     _PSA	set	1035
   155  0465                     _RCIE	set	1125
   156  04C4                     _SYNC	set	1220
   157  0460                     _TMR1IE	set	1120
   158  043E                     _TRISC6	set	1086
   159  043F                     _TRISC7	set	1087
   160  04C6                     _TX9	set	1222
   161  04C5                     _TXEN	set	1221
   162  0464                     _TXIE	set	1124
   163  040F                     _nRBPU	set	1039
   164  010D                     _EEADR	set	269
   165  010C                     _EEDATA	set	268
   166  0105                     _WDTCON	set	261
   167  0188                     _ANSEL	set	392
   168  0189                     _ANSELH	set	393
   169  018D                     _EECON2	set	397
   170  0C3B                     _BRG16	set	3131
   171  0C67                     _EEPGD	set	3175
   172  0C60                     _RD	set	3168
   173  0C61                     _WR	set	3169
   174  0C62                     _WREN	set	3170
   175                           
   176                           	psect	cinit
   177  0D5E                     start_initialization:	
   178  0D5E  3020               	movlw	low __pbssBANK0
   179                           
   180                           ; Clear objects allocated to COMMON
   181  0D5F  01F8               	clrf	__pbssCOMMON& (0+127)
   182  0D60  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   183  0D61  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   184                           
   185                           ; Clear objects allocated to BANK0
   186  0D62  1383               	bcf	3,7	;select IRP bank0
   187  0D63  0084               	movwf	4
   188  0D64  305F               	movlw	low (__pbssBANK0+63)
   189  0D65  118A  27F8  158A   	fcall	clear_ram
   190                           
   191                           ; Clear objects allocated to BANK1
   192  0D68  30A0               	movlw	low __pbssBANK1
   193  0D69  0084               	movwf	4
   194  0D6A  30D9               	movlw	low (__pbssBANK1+57)
   195  0D6B  118A  27F8         	fcall	clear_ram
   196  0D6D                     end_of_initialization:	
   197                           ;End of C runtime variable initialization code
   198                           
   199  0D6D  0183               	clrf	3
   200  0D6E  158A  2E81         	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	bssCOMMON
   203  0078                     __pbssCOMMON:	
   204  0078                     _g_segment_afresh_number:	
   205  0078                     	ds	1
   206  0079                     _g_segment_afresh_state:	
   207  0079                     	ds	1
   208  007A                     _study_lamp_stab_state:	
   209  007A                     	ds	1
   210                           
   211                           	psect	bssBANK0
   212  0020                     __pbssBANK0:	
   213  0020                     _current_study_counter:	
   214  0020                     	ds	6
   215  0026                     _display_data:	
   216  0026                     	ds	6
   217  002C                     _previous_study_counter:	
   218  002C                     	ds	6
   219  0032                     _lamp_chge_counter:	
   220  0032                     	ds	3
   221  0035                     _study_chge_counter:	
   222  0035                     	ds	3
   223  0038                     _TFG:	
   224  0038                     	ds	1
   225  0039                     _address_of_lamp:	
   226  0039                     	ds	1
   227  003A                     _communication_counter:	
   228  003A                     	ds	1
   229  003B                     _communication_flag:	
   230  003B                     	ds	1
   231  003C                     _displaying_second_counter:	
   232  003C                     	ds	1
   233  003D                     _every_second_update_counter:	
   234  003D                     	ds	1
   235  003E                     _every_second_update_delay:	
   236  003E                     	ds	1
   237  003F                     _every_second_update_flag:	
   238  003F                     	ds	1
   239  0040                     _g_segment_100ms_counter:	
   240  0040                     	ds	1
   241  0041                     _g_segment_afresh_counter:	
   242  0041                     	ds	1
   243  0042                     _g_segment_wink_display_flag:	
   244  0042                     	ds	1
   245  0043                     _g_segment_wink_state_flag:	
   246  0043                     	ds	1
   247  0044                     _g_segment_wink_time_counter:	
   248  0044                     	ds	1
   249  0045                     _gre_displaying_flag:	
   250  0045                     	ds	1
   251  0046                     _lamp_counter_valid_flag:	
   252  0046                     	ds	1
   253  0047                     _lamp_stab_state:	
   254  0047                     	ds	1
   255  0048                     _lamp_temp_state:	
   256  0048                     	ds	1
   257  0049                     _ledstate:	
   258  0049                     	ds	1
   259  004A                     _no_lamp_on_counter:	
   260  004A                     	ds	1
   261  004B                     _pulse_study_time_flag:	
   262  004B                     	ds	1
   263  004C                     _red_displaying_flag:	
   264  004C                     	ds	1
   265  004D                     _restart_flag:	
   266  004D                     	ds	1
   267  004E                     _sametime_on_counter:	
   268  004E                     	ds	1
   269  004F                     _study_time_flag:	
   270  004F                     	ds	1
   271  0050                     _study_time_valid_flag:	
   272  0050                     	ds	1
   273  0051                     _syn_wink_display_state:	
   274  0051                     	ds	1
   275  0052                     _syn_wink_display_updata:	
   276  0052                     	ds	1
   277  0053                     _ten_mm_counter:	
   278  0053                     	ds	1
   279  0054                     _usart_rx_read:	
   280  0054                     	ds	1
   281  0055                     _usart_rx_write:	
   282  0055                     	ds	1
   283  0056                     _wdtcounter:	
   284  0056                     	ds	1
   285  0057                     _yel_displaying_flag:	
   286  0057                     	ds	1
   287  0058                     _usart_temp_buffer:	
   288  0058                     	ds	7
   289                           
   290                           	psect	bssBANK1
   291  00A0                     __pbssBANK1:	
   292  00A0                     _usart_rx_buffer:	
   293  00A0                     	ds	30
   294  00BE                     _lamp_off_counter:	
   295  00BE                     	ds	6
   296  00C4                     _lamp_on_counter:	
   297  00C4                     	ds	6
   298  00CA                     _pulse_down_times:	
   299  00CA                     	ds	6
   300  00D0                     _pulse_study_time_counter:	
   301  00D0                     	ds	6
   302  00D6                     _lamp_off_time:	
   303  00D6                     	ds	3
   304                           
   305                           	psect	clrtext
   306  07F8                     clear_ram:	
   307                           ;	Called with FSR containing the base address, and
   308                           ;	W with the last address+1
   309                           
   310  07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   311  07F9                     clrloop:	
   312  07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   313  07FA  0A84               	incf	4,f	;increment pointer
   314  07FB  0604               	xorwf	4,w	;XOR with final address
   315  07FC  1903               	btfsc	3,2	;have we reached the end yet?
   316  07FD  3400               	retlw	0	;all done for this memory range, return
   317  07FE  0604               	xorwf	4,w	;XOR again to restore value
   318  07FF  2FF9               	goto	clrloop	;do the next byte
   319                           
   320                           	psect	cstackBANK1
   321  00D9                     __pcstackBANK1:	
   322  00D9                     main@i:	
   323                           
   324                           ; 2 bytes @ 0x0
   325  00D9                     	ds	2
   326  00DB                     main@k:	
   327                           
   328                           ; 1 bytes @ 0x2
   329  00DB                     	ds	1
   330                           
   331                           	psect	cstackCOMMON
   332  0070                     __pcstackCOMMON:	
   333  0070                     ?_change_DM13H:	
   334  0070                     ?_ioinit:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_addr_write:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_usartinit:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ?_timer1init:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_red_displaying_end:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_yel_displaying_end:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_gre_displaying_end:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ?_g_segment_displaying:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ?_syn_wink_manage:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?_down_time_display:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ?_filterAC_DC:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ?_study_mode_filterAC_DC:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0070                     ?_study_mode_time_calculation:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0070                     ?_lamp_err_state_check:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0070                     ?_G_Segment_Wink:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0070                     ?_g_segment_afresh_analyse:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0070                     ?_ISR:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0070                     ??_ISR:	
   386                           ; 0 bytes @ 0x0
   387                           
   388  0070                     ?_usart_data_analyse:	
   389                           ; 0 bytes @ 0x0
   390                           
   391  0070                     ?_communication_err:	
   392                           ; 0 bytes @ 0x0
   393                           
   394  0070                     ?_main:	
   395                           ; 0 bytes @ 0x0
   396                           
   397  0070                     ?_addr_read:	
   398                           ; 0 bytes @ 0x0
   399                           
   400                           
   401                           ; 1 bytes @ 0x0
   402  0070                     	ds	3
   403  0073                     ??_change_DM13H:	
   404  0073                     ??_ioinit:	
   405                           ; 0 bytes @ 0x3
   406                           
   407  0073                     ??_addr_read:	
   408                           ; 0 bytes @ 0x3
   409                           
   410  0073                     ??_addr_write:	
   411                           ; 0 bytes @ 0x3
   412                           
   413  0073                     ??_usartinit:	
   414                           ; 0 bytes @ 0x3
   415                           
   416  0073                     ??_timer1init:	
   417                           ; 0 bytes @ 0x3
   418                           
   419  0073                     ?_red_displaydrv:	
   420                           ; 0 bytes @ 0x3
   421                           
   422  0073                     ?_yel_displaydrv:	
   423                           ; 0 bytes @ 0x3
   424                           
   425  0073                     ?_gre_displaydrv:	
   426                           ; 0 bytes @ 0x3
   427                           
   428  0073                     ??_filterAC_DC:	
   429                           ; 0 bytes @ 0x3
   430                           
   431  0073                     ??_study_mode_filterAC_DC:	
   432                           ; 0 bytes @ 0x3
   433                           
   434  0073                     ??_lamp_err_state_check:	
   435                           ; 0 bytes @ 0x3
   436                           
   437  0073                     ?___lbdiv:	
   438                           ; 0 bytes @ 0x3
   439                           
   440  0073                     ?___lbmod:	
   441                           ; 1 bytes @ 0x3
   442                           
   443  0073                     ?___wmul:	
   444                           ; 1 bytes @ 0x3
   445                           
   446  0073                     ?___lwdiv:	
   447                           ; 2 bytes @ 0x3
   448                           
   449  0073                     change_DM13H@ss:	
   450                           ; 2 bytes @ 0x3
   451                           
   452  0073                     ioinit@i:	
   453                           ; 1 bytes @ 0x3
   454                           
   455  0073                     addr_write@indata:	
   456                           ; 1 bytes @ 0x3
   457                           
   458  0073                     study_mode_filterAC_DC@temp_var2:	
   459                           ; 1 bytes @ 0x3
   460                           
   461  0073                     ___lbdiv@divisor:	
   462                           ; 1 bytes @ 0x3
   463                           
   464  0073                     ___lbmod@divisor:	
   465                           ; 1 bytes @ 0x3
   466                           
   467  0073                     red_displaydrv@drvword:	
   468                           ; 1 bytes @ 0x3
   469                           
   470  0073                     yel_displaydrv@drvword:	
   471                           ; 2 bytes @ 0x3
   472                           
   473  0073                     gre_displaydrv@drvword:	
   474                           ; 2 bytes @ 0x3
   475                           
   476  0073                     ___wmul@multiplier:	
   477                           ; 2 bytes @ 0x3
   478                           
   479  0073                     ___lwdiv@divisor:	
   480                           ; 2 bytes @ 0x3
   481                           
   482                           
   483                           ; 2 bytes @ 0x3
   484  0073                     	ds	1
   485  0074                     ??___lbdiv:	
   486  0074                     ??___lbmod:	
   487                           ; 0 bytes @ 0x4
   488                           
   489  0074                     change_DM13H@temp:	
   490                           ; 0 bytes @ 0x4
   491                           
   492  0074                     filterAC_DC@temp_var1:	
   493                           ; 1 bytes @ 0x4
   494                           
   495  0074                     study_mode_filterAC_DC@temp_var3:	
   496                           ; 1 bytes @ 0x4
   497                           
   498  0074                     ___lbdiv@dividend:	
   499                           ; 1 bytes @ 0x4
   500                           
   501                           
   502                           ; 1 bytes @ 0x4
   503  0074                     	ds	1
   504  0075                     ??_red_displaydrv:	
   505  0075                     ??_yel_displaydrv:	
   506                           ; 0 bytes @ 0x5
   507                           
   508  0075                     ??_gre_displaydrv:	
   509                           ; 0 bytes @ 0x5
   510                           
   511  0075                     change_DM13H@i:	
   512                           ; 0 bytes @ 0x5
   513                           
   514  0075                     filterAC_DC@temp_var2:	
   515                           ; 1 bytes @ 0x5
   516                           
   517  0075                     study_mode_filterAC_DC@temp_var1:	
   518                           ; 1 bytes @ 0x5
   519                           
   520  0075                     ___lbdiv@counter:	
   521                           ; 1 bytes @ 0x5
   522                           
   523  0075                     ___lbmod@dividend:	
   524                           ; 1 bytes @ 0x5
   525                           
   526  0075                     ___wmul@multiplicand:	
   527                           ; 1 bytes @ 0x5
   528                           
   529  0075                     ___lwdiv@dividend:	
   530                           ; 2 bytes @ 0x5
   531                           
   532                           
   533                           ; 2 bytes @ 0x5
   534  0075                     	ds	1
   535  0076                     change_DM13H@k:	
   536  0076                     filterAC_DC@i:	
   537                           ; 1 bytes @ 0x6
   538                           
   539  0076                     study_mode_filterAC_DC@i:	
   540                           ; 1 bytes @ 0x6
   541                           
   542  0076                     ___lbdiv@quotient:	
   543                           ; 1 bytes @ 0x6
   544                           
   545  0076                     ___lbmod@counter:	
   546                           ; 1 bytes @ 0x6
   547                           
   548                           
   549                           ; 1 bytes @ 0x6
   550  0076                     	ds	1
   551  0077                     ??_red_displaying_end:	
   552  0077                     ??_yel_displaying_end:	
   553                           ; 0 bytes @ 0x7
   554                           
   555  0077                     ??_gre_displaying_end:	
   556                           ; 0 bytes @ 0x7
   557                           
   558  0077                     ??___wmul:	
   559                           ; 0 bytes @ 0x7
   560                           
   561  0077                     ??___lwdiv:	
   562                           ; 0 bytes @ 0x7
   563                           
   564  0077                     red_displaying_end@k:	
   565                           ; 0 bytes @ 0x7
   566                           
   567  0077                     yel_displaying_end@k:	
   568                           ; 1 bytes @ 0x7
   569                           
   570  0077                     gre_displaying_end@k:	
   571                           ; 1 bytes @ 0x7
   572                           
   573  0077                     ___lbmod@rem:	
   574                           ; 1 bytes @ 0x7
   575                           
   576                           
   577                           ; 1 bytes @ 0x7
   578  0077                     	ds	1
   579  0078                     ??_red_displaying:	
   580  0078                     ??_yel_displaying:	
   581                           ; 0 bytes @ 0x8
   582                           
   583  0078                     ??_gre_displaying:	
   584                           ; 0 bytes @ 0x8
   585                           
   586  0078                     ??_g_segment_displaying:	
   587                           ; 0 bytes @ 0x8
   588                           
   589  0078                     ??_down_time_display:	
   590                           ; 0 bytes @ 0x8
   591                           
   592  0078                     ??_G_Segment_Wink:	
   593                           ; 0 bytes @ 0x8
   594                           
   595  0078                     ??_communication_err:	
   596                           ; 0 bytes @ 0x8
   597                           
   598  0078                     ??_main:	
   599                           ; 0 bytes @ 0x8
   600                           
   601                           
   602                           	psect	cstackBANK0
   603  005F                     __pcstackBANK0:	
   604                           ; 0 bytes @ 0x8
   605                           
   606  005F                     ??_g_segment_afresh_analyse:	
   607  005F                     ___lwdiv@counter:	
   608                           ; 0 bytes @ 0x0
   609                           
   610  005F                     red_displaydrv@tempdata:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  005F                     yel_displaydrv@tempdata:	
   614                           ; 2 bytes @ 0x0
   615                           
   616  005F                     gre_displaydrv@tempdata:	
   617                           ; 2 bytes @ 0x0
   618                           
   619  005F                     ___wmul@product:	
   620                           ; 2 bytes @ 0x0
   621                           
   622                           
   623                           ; 2 bytes @ 0x0
   624  005F                     	ds	1
   625  0060                     ___lwdiv@quotient:	
   626                           
   627                           ; 2 bytes @ 0x1
   628  0060                     	ds	1
   629  0061                     red_displaydrv@i:	
   630  0061                     yel_displaydrv@i:	
   631                           ; 1 bytes @ 0x2
   632                           
   633  0061                     gre_displaydrv@i:	
   634                           ; 1 bytes @ 0x2
   635                           
   636                           
   637                           ; 1 bytes @ 0x2
   638  0061                     	ds	1
   639  0062                     red_displaydrv@k:	
   640  0062                     yel_displaydrv@k:	
   641                           ; 1 bytes @ 0x3
   642                           
   643  0062                     gre_displaydrv@k:	
   644                           ; 1 bytes @ 0x3
   645                           
   646                           
   647                           ; 1 bytes @ 0x3
   648  0062                     	ds	1
   649  0063                     ?_red_displaying:	
   650  0063                     ?_yel_displaying:	
   651                           ; 0 bytes @ 0x4
   652                           
   653  0063                     ?_gre_displaying:	
   654                           ; 0 bytes @ 0x4
   655                           
   656  0063                     ??_study_mode_time_calculation:	
   657                           ; 0 bytes @ 0x4
   658                           
   659  0063                     g_segment_displaying@number:	
   660                           ; 0 bytes @ 0x4
   661                           
   662  0063                     red_displaying@number:	
   663                           ; 1 bytes @ 0x4
   664                           
   665  0063                     yel_displaying@number:	
   666                           ; 2 bytes @ 0x4
   667                           
   668  0063                     gre_displaying@number:	
   669                           ; 2 bytes @ 0x4
   670                           
   671                           
   672                           ; 2 bytes @ 0x4
   673  0063                     	ds	1
   674  0064                     g_segment_displaying@k:	
   675                           
   676                           ; 1 bytes @ 0x5
   677  0064                     	ds	1
   678  0065                     red_displaying@temp_red_var1:	
   679  0065                     yel_displaying@temp_yel_var1:	
   680                           ; 1 bytes @ 0x6
   681                           
   682  0065                     gre_displaying@temp_gre_var1:	
   683                           ; 1 bytes @ 0x6
   684                           
   685  0065                     G_Segment_Wink@temp_data2:	
   686                           ; 1 bytes @ 0x6
   687                           
   688                           
   689                           ; 1 bytes @ 0x6
   690  0065                     	ds	1
   691  0066                     red_displaying@temp_red_var0:	
   692  0066                     yel_displaying@temp_yel_var0:	
   693                           ; 1 bytes @ 0x7
   694                           
   695  0066                     gre_displaying@temp_gre_var0:	
   696                           ; 1 bytes @ 0x7
   697                           
   698  0066                     G_Segment_Wink@i:	
   699                           ; 1 bytes @ 0x7
   700                           
   701                           
   702                           ; 1 bytes @ 0x7
   703  0066                     	ds	1
   704  0067                     red_displaying@temp_red_var2:	
   705  0067                     yel_displaying@temp_yel_var2:	
   706                           ; 1 bytes @ 0x8
   707                           
   708  0067                     gre_displaying@temp_gre_var2:	
   709                           ; 1 bytes @ 0x8
   710                           
   711  0067                     G_Segment_Wink@temp_data1:	
   712                           ; 1 bytes @ 0x8
   713                           
   714  0067                     study_mode_time_calculation@temp_var2:	
   715                           ; 1 bytes @ 0x8
   716                           
   717                           
   718                           ; 2 bytes @ 0x8
   719  0067                     	ds	1
   720  0068                     ??_syn_wink_manage:	
   721  0068                     ??_usart_data_analyse:	
   722                           ; 0 bytes @ 0x9
   723                           
   724                           
   725                           ; 0 bytes @ 0x9
   726  0068                     	ds	1
   727  0069                     syn_wink_manage@tempdata:	
   728  0069                     study_mode_time_calculation@temp_var1:	
   729                           ; 1 bytes @ 0xA
   730                           
   731                           
   732                           ; 1 bytes @ 0xA
   733  0069                     	ds	1
   734  006A                     syn_wink_manage@channel:	
   735  006A                     study_mode_time_calculation@i:	
   736                           ; 1 bytes @ 0xB
   737                           
   738  006A                     usart_data_analyse@CheckSum:	
   739                           ; 1 bytes @ 0xB
   740                           
   741                           
   742                           ; 1 bytes @ 0xB
   743  006A                     	ds	1
   744  006B                     usart_data_analyse@TableLength:	
   745                           
   746                           ; 1 bytes @ 0xC
   747  006B                     	ds	1
   748  006C                     usart_data_analyse@temp_pointer:	
   749                           
   750                           ; 1 bytes @ 0xD
   751  006C                     	ds	1
   752  006D                     usart_data_analyse@down_time:	
   753                           
   754                           ; 2 bytes @ 0xE
   755  006D                     	ds	2
   756  006F                     usart_data_analyse@k:	
   757                           
   758                           ; 1 bytes @ 0x10
   759  006F                     	ds	1
   760                           
   761                           	psect	maintext
   762  0E81                     __pmaintext:	
   763 ;;Data sizes: Strings 0, constant 72, data 0, bss 123, persistent 0 stack 0
   764 ;;Auto spaces:   Size  Autos    Used
   765 ;; COMMON          14      8      11
   766 ;; BANK0           80     17      80
   767 ;; BANK1           80      3      60
   768 ;; BANK2           80      0       0
   769 ;;
   770 ;; Pointer list with targets:
   771 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   772 ;;
   773 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   774 ;;
   775 ;;
   776 ;; Critical Paths under _main in COMMON
   777 ;;
   778 ;;   _main->_red_displaying_end
   779 ;;   _main->_gre_displaying_end
   780 ;;   _main->_yel_displaying_end
   781 ;;   _G_Segment_Wink->_gre_displaying_end
   782 ;;   _down_time_display->_red_displaying_end
   783 ;;   _down_time_display->_yel_displaying_end
   784 ;;   _down_time_display->_gre_displaying_end
   785 ;;   _communication_err->_red_displaying_end
   786 ;;   _usart_data_analyse->_red_displaying_end
   787 ;;   _usart_data_analyse->_gre_displaying_end
   788 ;;   _usart_data_analyse->_yel_displaying_end
   789 ;;   _study_mode_time_calculation->_red_displaying_end
   790 ;;   _study_mode_time_calculation->_yel_displaying_end
   791 ;;   _study_mode_time_calculation->_gre_displaying_end
   792 ;;   _syn_wink_manage->_red_displaying_end
   793 ;;   _g_segment_displaying->_gre_displaying_end
   794 ;;   _gre_displaying_end->_gre_displaydrv
   795 ;;   _gre_displaying->___lbmod
   796 ;;   _yel_displaying_end->_yel_displaydrv
   797 ;;   _yel_displaying->___lbmod
   798 ;;   _red_displaying_end->_red_displaydrv
   799 ;;   _red_displaying->___lbmod
   800 ;;
   801 ;; Critical Paths under _ISR in COMMON
   802 ;;
   803 ;;   None.
   804 ;;
   805 ;; Critical Paths under _main in BANK0
   806 ;;
   807 ;;   _main->_usart_data_analyse
   808 ;;   _G_Segment_Wink->_g_segment_displaying
   809 ;;   _down_time_display->_syn_wink_manage
   810 ;;   _usart_data_analyse->_yel_displaying
   811 ;;   _usart_data_analyse->_gre_displaying
   812 ;;   _usart_data_analyse->_red_displaying
   813 ;;   _syn_wink_manage->_red_displaying
   814 ;;   _syn_wink_manage->_yel_displaying
   815 ;;   _syn_wink_manage->_gre_displaying
   816 ;;   _g_segment_displaying->_red_displaydrv
   817 ;;   _g_segment_displaying->_yel_displaydrv
   818 ;;   _g_segment_displaying->_gre_displaydrv
   819 ;;   _gre_displaying_end->_gre_displaydrv
   820 ;;   _gre_displaying->_gre_displaydrv
   821 ;;   _yel_displaying_end->_yel_displaydrv
   822 ;;   _yel_displaying->_yel_displaydrv
   823 ;;   _red_displaying_end->_red_displaydrv
   824 ;;   _red_displaying->_red_displaydrv
   825 ;;
   826 ;; Critical Paths under _ISR in BANK0
   827 ;;
   828 ;;   None.
   829 ;;
   830 ;; Critical Paths under _main in BANK1
   831 ;;
   832 ;;   None.
   833 ;;
   834 ;; Critical Paths under _ISR in BANK1
   835 ;;
   836 ;;   None.
   837 ;;
   838 ;; Critical Paths under _main in BANK2
   839 ;;
   840 ;;   None.
   841 ;;
   842 ;; Critical Paths under _ISR in BANK2
   843 ;;
   844 ;;   None.
   845 ;;
   846 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   847 ;;
   848 ;;
   849 ;;Call Graph Tables:
   850 ;;
   851 ;; ---------------------------------------------------------------------------------
   852 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   853 ;; ---------------------------------------------------------------------------------
   854 ;; (0) _main                                                 3     3      0   20910
   855 ;;                                              0 BANK1      3     3      0
   856 ;;                             _ioinit
   857 ;;                       _change_DM13H
   858 ;;                 _red_displaying_end
   859 ;;                 _gre_displaying_end
   860 ;;                 _yel_displaying_end
   861 ;;                         _timer1init
   862 ;;                          _usartinit
   863 ;;                          _addr_read
   864 ;;                        _filterAC_DC
   865 ;;             _study_mode_filterAC_DC
   866 ;;        _study_mode_time_calculation
   867 ;;                  _down_time_display
   868 ;;               _lamp_err_state_check
   869 ;;                  _communication_err
   870 ;;           _g_segment_afresh_analyse
   871 ;;                 _usart_data_analyse
   872 ;;                     _G_Segment_Wink
   873 ;; ---------------------------------------------------------------------------------
   874 ;; (1) _G_Segment_Wink                                       3     3      0    2062
   875 ;;                                              6 BANK0      3     3      0
   876 ;;               _g_segment_displaying
   877 ;;                 _gre_displaying_end
   878 ;; ---------------------------------------------------------------------------------
   879 ;; (1) _down_time_display                                    0     0      0    4808
   880 ;;                 _red_displaying_end
   881 ;;                    _syn_wink_manage
   882 ;;                 _yel_displaying_end
   883 ;;                 _gre_displaying_end
   884 ;; ---------------------------------------------------------------------------------
   885 ;; (1) _communication_err                                    0     0      0     340
   886 ;;                 _red_displaying_end
   887 ;; ---------------------------------------------------------------------------------
   888 ;; (1) _usart_data_analyse                                   8     8      0    5036
   889 ;;                                              9 BANK0      8     8      0
   890 ;;                             ___wmul
   891 ;;                 _red_displaying_end
   892 ;;                 _gre_displaying_end
   893 ;;                 _yel_displaying_end
   894 ;;                     _yel_displaying
   895 ;;                     _gre_displaying
   896 ;;                     _red_displaying
   897 ;;                         _addr_write
   898 ;;                          _addr_read
   899 ;; ---------------------------------------------------------------------------------
   900 ;; (1) _study_mode_time_calculation                          8     8      0    3530
   901 ;;                                              4 BANK0      8     8      0
   902 ;;                            ___lwdiv
   903 ;;                 _red_displaying_end
   904 ;;                 _yel_displaying_end
   905 ;;                 _gre_displaying_end
   906 ;; ---------------------------------------------------------------------------------
   907 ;; (2) _syn_wink_manage                                      3     3      0    3788
   908 ;;                                              9 BANK0      3     3      0
   909 ;;                     _red_displaying
   910 ;;                     _yel_displaying
   911 ;;                     _gre_displaying
   912 ;;                 _red_displaying_end
   913 ;; ---------------------------------------------------------------------------------
   914 ;; (2) _g_segment_displaying                                 2     2      0    1391
   915 ;;                                              4 BANK0      2     2      0
   916 ;;                     _red_displaydrv
   917 ;;                     _yel_displaydrv
   918 ;;                     _gre_displaydrv
   919 ;;                 _gre_displaying_end
   920 ;; ---------------------------------------------------------------------------------
   921 ;; (2) _gre_displaying_end                                   1     1      0     340
   922 ;;                                              7 COMMON     1     1      0
   923 ;;                     _gre_displaydrv
   924 ;; ---------------------------------------------------------------------------------
   925 ;; (2) _gre_displaying                                       5     3      2    1045
   926 ;;                                              4 BANK0      5     3      2
   927 ;;                            ___lbdiv
   928 ;;                            ___lbmod
   929 ;;                     _gre_displaydrv
   930 ;; ---------------------------------------------------------------------------------
   931 ;; (2) _yel_displaying_end                                   1     1      0     340
   932 ;;                                              7 COMMON     1     1      0
   933 ;;                     _yel_displaydrv
   934 ;; ---------------------------------------------------------------------------------
   935 ;; (2) _yel_displaying                                       5     3      2    1045
   936 ;;                                              4 BANK0      5     3      2
   937 ;;                            ___lbdiv
   938 ;;                            ___lbmod
   939 ;;                     _yel_displaydrv
   940 ;; ---------------------------------------------------------------------------------
   941 ;; (2) _red_displaying_end                                   1     1      0     340
   942 ;;                                              7 COMMON     1     1      0
   943 ;;                     _red_displaydrv
   944 ;; ---------------------------------------------------------------------------------
   945 ;; (2) _red_displaying                                       5     3      2    1045
   946 ;;                                              4 BANK0      5     3      2
   947 ;;                            ___lbdiv
   948 ;;                            ___lbmod
   949 ;;                     _red_displaydrv
   950 ;; ---------------------------------------------------------------------------------
   951 ;; (2) _addr_read                                            0     0      0       0
   952 ;; ---------------------------------------------------------------------------------
   953 ;; (3) ___lbmod                                              5     4      1     232
   954 ;;                                              3 COMMON     5     4      1
   955 ;; ---------------------------------------------------------------------------------
   956 ;; (3) ___lbdiv                                              4     3      1     241
   957 ;;                                              3 COMMON     4     3      1
   958 ;; ---------------------------------------------------------------------------------
   959 ;; (2) ___lwdiv                                              7     3      4     241
   960 ;;                                              3 COMMON     4     0      4
   961 ;;                                              0 BANK0      3     3      0
   962 ;; ---------------------------------------------------------------------------------
   963 ;; (2) ___wmul                                               6     2      4     136
   964 ;;                                              3 COMMON     4     0      4
   965 ;;                                              0 BANK0      2     2      0
   966 ;; ---------------------------------------------------------------------------------
   967 ;; (1) _g_segment_afresh_analyse                             6     6      0       0
   968 ;;                                              0 BANK0      6     6      0
   969 ;; ---------------------------------------------------------------------------------
   970 ;; (1) _lamp_err_state_check                                 2     2      0       0
   971 ;;                                              3 COMMON     2     2      0
   972 ;; ---------------------------------------------------------------------------------
   973 ;; (1) _study_mode_filterAC_DC                               4     4      0     672
   974 ;;                                              3 COMMON     4     4      0
   975 ;; ---------------------------------------------------------------------------------
   976 ;; (1) _filterAC_DC                                          4     4      0     542
   977 ;;                                              3 COMMON     4     4      0
   978 ;; ---------------------------------------------------------------------------------
   979 ;; (3) _gre_displaydrv                                       8     6      2     272
   980 ;;                                              3 COMMON     4     2      2
   981 ;;                                              0 BANK0      4     4      0
   982 ;; ---------------------------------------------------------------------------------
   983 ;; (3) _yel_displaydrv                                       8     6      2     272
   984 ;;                                              3 COMMON     4     2      2
   985 ;;                                              0 BANK0      4     4      0
   986 ;; ---------------------------------------------------------------------------------
   987 ;; (3) _red_displaydrv                                       8     6      2     272
   988 ;;                                              3 COMMON     4     2      2
   989 ;;                                              0 BANK0      4     4      0
   990 ;; ---------------------------------------------------------------------------------
   991 ;; (1) _timer1init                                           0     0      0       0
   992 ;; ---------------------------------------------------------------------------------
   993 ;; (1) _usartinit                                            0     0      0       0
   994 ;; ---------------------------------------------------------------------------------
   995 ;; (2) _addr_write                                           1     1      0      31
   996 ;;                                              3 COMMON     1     1      0
   997 ;; ---------------------------------------------------------------------------------
   998 ;; (1) _ioinit                                               1     1      0     378
   999 ;;                                              3 COMMON     1     1      0
  1000 ;; ---------------------------------------------------------------------------------
  1001 ;; (1) _change_DM13H                                         4     4      0    2386
  1002 ;;                                              3 COMMON     4     4      0
  1003 ;; ---------------------------------------------------------------------------------
  1004 ;; Estimated maximum stack depth 3
  1005 ;; ---------------------------------------------------------------------------------
  1006 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1007 ;; ---------------------------------------------------------------------------------
  1008 ;; (5) _ISR                                                  3     3      0       0
  1009 ;;                                              0 COMMON     3     3      0
  1010 ;; ---------------------------------------------------------------------------------
  1011 ;; Estimated maximum stack depth 5
  1012 ;; ---------------------------------------------------------------------------------
  1013 ;; Call Graph Graphs:
  1014 ;; _main (ROOT)
  1015 ;;   _ioinit
  1016 ;;   _change_DM13H
  1017 ;;   _red_displaying_end
  1018 ;;     _red_displaydrv
  1019 ;;   _gre_displaying_end
  1020 ;;     _gre_displaydrv
  1021 ;;   _yel_displaying_end
  1022 ;;     _yel_displaydrv
  1023 ;;   _timer1init
  1024 ;;   _usartinit
  1025 ;;   _addr_read
  1026 ;;   _filterAC_DC
  1027 ;;   _study_mode_filterAC_DC
  1028 ;;   _study_mode_time_calculation
  1029 ;;     ___lwdiv
  1030 ;;     _red_displaying_end
  1031 ;;       _red_displaydrv
  1032 ;;     _yel_displaying_end
  1033 ;;       _yel_displaydrv
  1034 ;;     _gre_displaying_end
  1035 ;;       _gre_displaydrv
  1036 ;;   _down_time_display
  1037 ;;     _red_displaying_end
  1038 ;;       _red_displaydrv
  1039 ;;     _syn_wink_manage
  1040 ;;       _red_displaying
  1041 ;;         ___lbdiv
  1042 ;;         ___lbmod
  1043 ;;         _red_displaydrv
  1044 ;;       _yel_displaying
  1045 ;;         ___lbdiv
  1046 ;;         ___lbmod
  1047 ;;         _yel_displaydrv
  1048 ;;       _gre_displaying
  1049 ;;         ___lbdiv
  1050 ;;         ___lbmod
  1051 ;;         _gre_displaydrv
  1052 ;;       _red_displaying_end
  1053 ;;         _red_displaydrv
  1054 ;;     _yel_displaying_end
  1055 ;;       _yel_displaydrv
  1056 ;;     _gre_displaying_end
  1057 ;;       _gre_displaydrv
  1058 ;;   _lamp_err_state_check
  1059 ;;   _communication_err
  1060 ;;     _red_displaying_end
  1061 ;;       _red_displaydrv
  1062 ;;   _g_segment_afresh_analyse
  1063 ;;   _usart_data_analyse
  1064 ;;     ___wmul
  1065 ;;     _red_displaying_end
  1066 ;;       _red_displaydrv
  1067 ;;     _gre_displaying_end
  1068 ;;       _gre_displaydrv
  1069 ;;     _yel_displaying_end
  1070 ;;       _yel_displaydrv
  1071 ;;     _yel_displaying
  1072 ;;       ___lbdiv
  1073 ;;       ___lbmod
  1074 ;;       _yel_displaydrv
  1075 ;;     _gre_displaying
  1076 ;;       ___lbdiv
  1077 ;;       ___lbmod
  1078 ;;       _gre_displaydrv
  1079 ;;     _red_displaying
  1080 ;;       ___lbdiv
  1081 ;;       ___lbmod
  1082 ;;       _red_displaydrv
  1083 ;;     _addr_write
  1084 ;;     _addr_read
  1085 ;;   _G_Segment_Wink
  1086 ;;     _g_segment_displaying
  1087 ;;       _red_displaydrv
  1088 ;;       _yel_displaydrv
  1089 ;;       _gre_displaydrv
  1090 ;;       _gre_displaying_end
  1091 ;;         _gre_displaydrv
  1092 ;;     _gre_displaying_end
  1093 ;;       _gre_displaydrv
  1094 ;;
  1095 ;; _ISR (ROOT)
  1096 ;;
  1097 ;; Address spaces:
  1098 ;;Name               Size   Autos  Total    Cost      Usage
  1099 ;;BITCOMMON            E      0       0       0        0.0%
  1100 ;;EEDATA             100      0       0       0        0.0%
  1101 ;;NULL                 0      0       0       0        0.0%
  1102 ;;CODE                 0      0       0       0        0.0%
  1103 ;;COMMON               E      8       B       1       78.6%
  1104 ;;BITSFR0              0      0       0       1        0.0%
  1105 ;;SFR0                 0      0       0       1        0.0%
  1106 ;;BITSFR1              0      0       0       2        0.0%
  1107 ;;SFR1                 0      0       0       2        0.0%
  1108 ;;STACK                0      0       4       2        0.0%
  1109 ;;BANK0               50     11      50       3      100.0%
  1110 ;;BITBANK1            50      0       0       4        0.0%
  1111 ;;BITSFR3              0      0       0       4        0.0%
  1112 ;;SFR3                 0      0       0       4        0.0%
  1113 ;;BANK1               50      3      3C       5       75.0%
  1114 ;;BITSFR2              0      0       0       5        0.0%
  1115 ;;SFR2                 0      0       0       5        0.0%
  1116 ;;BITBANK2            50      0       0       6        0.0%
  1117 ;;BANK2               50      0       0       7        0.0%
  1118 ;;ABS                  0      0      97       8        0.0%
  1119 ;;BITBANK0            50      0       0       9        0.0%
  1120 ;;DATA                 0      0      9B      10        0.0%
  1121                           
  1122                           
  1123 ;; *************** function _main *****************
  1124 ;; Defined at:
  1125 ;;		line 1417 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  i               2    0[BANK1 ] unsigned int 
  1130 ;;  k               1    2[BANK1 ] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;		None               void
  1133 ;; Registers used:
  1134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 17F/0
  1137 ;;		On exit  : 60/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1140 ;;      Params:         0       0       0       0
  1141 ;;      Locals:         0       0       3       0
  1142 ;;      Temps:          0       0       0       0
  1143 ;;      Totals:         0       0       3       0
  1144 ;;Total ram usage:        3 bytes
  1145 ;; Hardware stack levels required when called:    5
  1146 ;; This function calls:
  1147 ;;		_ioinit
  1148 ;;		_change_DM13H
  1149 ;;		_red_displaying_end
  1150 ;;		_gre_displaying_end
  1151 ;;		_yel_displaying_end
  1152 ;;		_timer1init
  1153 ;;		_usartinit
  1154 ;;		_addr_read
  1155 ;;		_filterAC_DC
  1156 ;;		_study_mode_filterAC_DC
  1157 ;;		_study_mode_time_calculation
  1158 ;;		_down_time_display
  1159 ;;		_lamp_err_state_check
  1160 ;;		_communication_err
  1161 ;;		_g_segment_afresh_analyse
  1162 ;;		_usart_data_analyse
  1163 ;;		_G_Segment_Wink
  1164 ;; This function is called by:
  1165 ;;		Startup code after reset
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168  0E81                     _main:	
  1169                           
  1170                           ;led.c: 1418: unsigned char k;
  1171                           ;led.c: 1419: unsigned int i;
  1172                           ;led.c: 1421: for(k=0;k<2;k++)
  1173                           
  1174                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1175  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  1176  0E82  01DB               	clrf	main@k^(0+128)
  1177  0E83                     l8615:	
  1178                           
  1179                           ;led.c: 1422: {
  1180                           ;led.c: 1423: ioinit();
  1181  0E83  118A  2719  158A   	fcall	_ioinit
  1182                           
  1183                           ;led.c: 1424: change_DM13H();
  1184  0E86  158A  26F4  158A   	fcall	_change_DM13H
  1185                           
  1186                           ;led.c: 1425: RB4=0;
  1187  0E89  1206               	bcf	6,4
  1188                           
  1189                           ;led.c: 1426: red_displaying_end();
  1190  0E8A  118A  2461  158A   	fcall	_red_displaying_end
  1191                           
  1192                           ;led.c: 1427: gre_displaying_end();
  1193  0E8D  118A  2558  158A   	fcall	_gre_displaying_end
  1194                           
  1195                           ;led.c: 1428: yel_displaying_end();
  1196  0E90  118A  25BF  158A   	fcall	_yel_displaying_end
  1197                           
  1198                           ;led.c: 1429: for(i=0;i<6000;i++);
  1199  0E93  1683               	bsf	3,5	;RP0=1, select bank1
  1200  0E94  01D9               	clrf	main@i^(0+128)
  1201  0E95  01DA               	clrf	(main@i+1)^(0+128)
  1202  0E96                     l8633:	
  1203  0E96  0AD9               	incf	main@i^(0+128),f
  1204  0E97  1903               	skipnz
  1205  0E98  0ADA               	incf	(main@i+1)^(0+128),f
  1206  0E99  3017               	movlw	23
  1207  0E9A  025A               	subwf	(main@i+1)^(0+128),w
  1208  0E9B  3070               	movlw	112
  1209  0E9C  1903               	skipnz
  1210  0E9D  0259               	subwf	main@i^(0+128),w
  1211  0E9E  1C03               	skipc
  1212  0E9F  2E96               	goto	l8633
  1213  0EA0  3002               	movlw	2
  1214  0EA1  0ADB               	incf	main@k^(0+128),f
  1215  0EA2  025B               	subwf	main@k^(0+128),w
  1216  0EA3  1C03               	skipc
  1217  0EA4  2E83               	goto	l8615
  1218                           
  1219                           ;led.c: 1430: }
  1220                           ;led.c: 1431: timer1init();
  1221  0EA5  158A  254F  158A   	fcall	_timer1init
  1222                           
  1223                           ;led.c: 1432: usartinit();
  1224  0EA8  158A  2570  158A   	fcall	_usartinit
  1225                           
  1226                           ;led.c: 1433: address_of_lamp = addr_read();
  1227  0EAB  118A  261B  158A   	fcall	_addr_read
  1228  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  1229  0EAF  00B9               	movwf	_address_of_lamp
  1230                           
  1231                           ;led.c: 1434: PSA = 0;WDTCON = 0X15;;
  1232  0EB0  1683               	bsf	3,5	;RP0=1, select bank1
  1233  0EB1  3015               	movlw	21
  1234  0EB2  1181               	bcf	1,3
  1235  0EB3  1283               	bcf	3,5	;RP0=0, select bank2
  1236  0EB4  1703               	bsf	3,6	;RP1=1, select bank2
  1237  0EB5  0085               	movwf	5	;volatile
  1238  0EB6                     l8649:	
  1239                           
  1240                           ;led.c: 1437: {
  1241                           ;led.c: 1438: if(TFG==1)
  1242  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  1243  0EB7  0B38               	decfsz	_TFG,w
  1244  0EB8  2EDC               	goto	l8681
  1245                           
  1246                           ;led.c: 1439: {
  1247                           ;led.c: 1440: TFG = 0;
  1248  0EB9  01B8               	clrf	_TFG
  1249                           
  1250                           ;led.c: 1441: wdtcounter++;
  1251  0EBA  0AD6               	incf	_wdtcounter,f
  1252                           
  1253                           ;led.c: 1442: g_segment_100ms_counter++;
  1254  0EBB  0AC0               	incf	_g_segment_100ms_counter,f
  1255                           
  1256                           ;led.c: 1443: filterAC_DC();
  1257  0EBC  158A  2632  158A   	fcall	_filterAC_DC
  1258  0EBF  300A               	movlw	10
  1259                           
  1260                           ;led.c: 1445: ten_mm_counter++;
  1261  0EC0  0AD3               	incf	_ten_mm_counter,f
  1262                           
  1263                           ;led.c: 1446: if(ten_mm_counter >= 10)
  1264  0EC1  0253               	subwf	_ten_mm_counter,w
  1265  0EC2  1C03               	skipc
  1266  0EC3  2ED9               	goto	l8679
  1267                           
  1268                           ;led.c: 1447: {
  1269                           ;led.c: 1448: ten_mm_counter = 0;
  1270  0EC4  01D3               	clrf	_ten_mm_counter
  1271                           
  1272                           ;led.c: 1449: study_mode_filterAC_DC();
  1273  0EC5  158A  25EB  158A   	fcall	_study_mode_filterAC_DC
  1274                           
  1275                           ;led.c: 1450: study_mode_time_calculation();
  1276  0EC8  118A  215B  158A   	fcall	_study_mode_time_calculation
  1277                           
  1278                           ;led.c: 1451: down_time_display();
  1279  0ECB  118A  2060  158A   	fcall	_down_time_display
  1280                           
  1281                           ;led.c: 1452: lamp_err_state_check();
  1282  0ECE  158A  25AE  158A   	fcall	_lamp_err_state_check
  1283                           
  1284                           ;led.c: 1453: if(every_second_update_flag == 1)
  1285  0ED1  0B3F               	decfsz	_every_second_update_flag,w
  1286  0ED2  2ED6               	goto	l8677
  1287                           
  1288                           ;led.c: 1454: {
  1289                           ;led.c: 1455: communication_err();
  1290  0ED3  118A  200F  158A   	fcall	_communication_err
  1291  0ED6                     l8677:	
  1292                           
  1293                           ;led.c: 1456: }
  1294                           ;led.c: 1457: g_segment_afresh_analyse();
  1295  0ED6  118A  2792  158A   	fcall	_g_segment_afresh_analyse
  1296  0ED9                     l8679:	
  1297                           
  1298                           ;led.c: 1458: }
  1299                           ;led.c: 1459: usart_data_analyse();
  1300  0ED9  118A  22F4  158A   	fcall	_usart_data_analyse
  1301  0EDC                     l8681:	
  1302                           
  1303                           ;led.c: 1460: }
  1304                           ;led.c: 1462: if(wdtcounter >= 240)
  1305  0EDC  30F0               	movlw	240
  1306  0EDD  0256               	subwf	_wdtcounter,w
  1307  0EDE  1C03               	skipc
  1308  0EDF  2EEE               	goto	l8695
  1309                           
  1310                           ;led.c: 1463: {
  1311                           ;led.c: 1464: wdtcounter = 0;
  1312  0EE0  01D6               	clrf	_wdtcounter
  1313  0EE1  0064               	clrwdt	;#
  1314                           
  1315                           ;led.c: 1467: if(ledstate == 0)
  1316  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0EE4  08C9               	movf	_ledstate,f
  1319  0EE5  1D03               	skipz
  1320  0EE6  2EEB               	goto	l1517
  1321                           
  1322                           ;led.c: 1468: {
  1323                           ;led.c: 1469: RB6 = 0;
  1324  0EE7  1306               	bcf	6,6
  1325                           
  1326                           ;led.c: 1470: ledstate=1;
  1327  0EE8  01C9               	clrf	_ledstate
  1328  0EE9  0AC9               	incf	_ledstate,f
  1329                           
  1330                           ;led.c: 1471: }
  1331  0EEA  2EEE               	goto	l8695
  1332  0EEB                     l1517:	
  1333                           
  1334                           ;led.c: 1472: else
  1335                           ;led.c: 1473: {
  1336                           ;led.c: 1474: RB6 = 1;
  1337  0EEB  1706               	bsf	6,6
  1338                           
  1339                           ;led.c: 1475: ledstate = 0;
  1340  0EEC  01C9               	clrf	_ledstate
  1341                           
  1342                           ;led.c: 1476: RC5=1;
  1343  0EED  1687               	bsf	7,5
  1344  0EEE                     l8695:	
  1345                           
  1346                           ;led.c: 1477: }
  1347                           ;led.c: 1479: }
  1348                           ;led.c: 1481: if(g_segment_100ms_counter >= 50)
  1349  0EEE  3032               	movlw	50
  1350  0EEF  0240               	subwf	_g_segment_100ms_counter,w
  1351  0EF0  1C03               	skipc
  1352  0EF1  2EB6               	goto	l8649
  1353                           
  1354                           ;led.c: 1482: {
  1355                           ;led.c: 1483: g_segment_100ms_counter = 0;
  1356  0EF2  01C0               	clrf	_g_segment_100ms_counter
  1357  0EF3  2EB6               	goto	l8649
  1358  0EF4                     __end_of_main:	
  1359                           
  1360                           	psect	text962
  1361  000F                     __ptext962:	
  1362 ;; =============== function _down_time_display ends ============
  1363                           
  1364                           
  1365 ;; *************** function _communication_err *****************
  1366 ;; Defined at:
  1367 ;;		line 1392 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;		None               void
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0, pclath, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 160/0
  1378 ;;		On exit  : 160/0
  1379 ;;		Unchanged: FFE9F/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1381 ;;      Params:         0       0       0       0
  1382 ;;      Locals:         0       0       0       0
  1383 ;;      Temps:          0       0       0       0
  1384 ;;      Totals:         0       0       0       0
  1385 ;;Total ram usage:        0 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:    3
  1388 ;; This function calls:
  1389 ;;		_red_displaying_end
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394  000F                     _communication_err:	
  1395  000F  3064               	movlw	100
  1396                           
  1397                           ;led.c: 1393: every_second_update_counter++;
  1398                           
  1399                           ; Regs used in _communication_err: [wreg+status,2+status,0+pclath+cstack]
  1400  0010  0ABD               	incf	_every_second_update_counter,f
  1401                           
  1402                           ;led.c: 1394: if(every_second_update_counter >= 100)
  1403  0011  023D               	subwf	_every_second_update_counter,w
  1404  0012  1C03               	skipc
  1405  0013  0008               	return
  1406  0014  3003               	movlw	3
  1407                           
  1408                           ;led.c: 1395: {
  1409                           ;led.c: 1396: every_second_update_counter = 0;
  1410  0015  01BD               	clrf	_every_second_update_counter
  1411                           
  1412                           ;led.c: 1397: every_second_update_delay++;
  1413  0016  0ABE               	incf	_every_second_update_delay,f
  1414                           
  1415                           ;led.c: 1398: if(every_second_update_delay >= 3)
  1416  0017  023E               	subwf	_every_second_update_delay,w
  1417  0018  1C03               	skipc
  1418  0019  0008               	return
  1419                           
  1420                           ;led.c: 1399: {
  1421                           ;led.c: 1400: every_second_update_flag = 0;
  1422  001A  01BF               	clrf	_every_second_update_flag
  1423                           
  1424                           ;led.c: 1401: every_second_update_counter = 0;
  1425  001B  01BD               	clrf	_every_second_update_counter
  1426                           
  1427                           ;led.c: 1402: every_second_update_delay = 0;
  1428  001C  01BE               	clrf	_every_second_update_delay
  1429                           
  1430                           ;led.c: 1403: red_displaying_end();
  1431  001D  2C61               	ljmp	l7797
  1432  001E                     __end_of_communication_err:	
  1433  001E                     __ptext960:	
  1434 ;; =============== function _main ends ============
  1435                           
  1436                           
  1437 ;; *************** function _G_Segment_Wink *****************
  1438 ;; Defined at:
  1439 ;;		line 1068 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  temp_data1      1    8[BANK0 ] unsigned char 
  1444 ;;  i               1    7[BANK0 ] unsigned char 
  1445 ;;  temp_data2      1    6[BANK0 ] unsigned char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;		None               void
  1448 ;; Registers used:
  1449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 60/0
  1453 ;;		Unchanged: FFF9F/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1455 ;;      Params:         0       0       0       0
  1456 ;;      Locals:         0       3       0       0
  1457 ;;      Temps:          0       0       0       0
  1458 ;;      Totals:         0       3       0       0
  1459 ;;Total ram usage:        3 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    4
  1462 ;; This function calls:
  1463 ;;		_g_segment_displaying
  1464 ;;		_gre_displaying_end
  1465 ;; This function is called by:
  1466 ;;		_main
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469  001E                     _G_Segment_Wink:	
  1470                           
  1471                           ;led.c: 1069: unsigned char i;
  1472                           ;led.c: 1070: unsigned char temp_data1;
  1473                           ;led.c: 1071: unsigned char temp_data2;
  1474                           ;led.c: 1072: if(communication_flag == 0)
  1475                           
  1476                           ; Regs used in _G_Segment_Wink: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1477  001E  1283               	bcf	3,5	;RP0=0, select bank0
  1478  001F  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0020  08BB               	movf	_communication_flag,f
  1480  0021  1D03               	skipz
  1481  0022  285E               	goto	l8607
  1482                           
  1483                           ;led.c: 1073: {
  1484                           ;led.c: 1074: temp_data1 = 0x01;
  1485  0023  01E7               	clrf	G_Segment_Wink@temp_data1
  1486  0024  0AE7               	incf	G_Segment_Wink@temp_data1,f
  1487                           
  1488                           ;led.c: 1075: for(i=0;i<3;i++)
  1489  0025  01E6               	clrf	G_Segment_Wink@i
  1490  0026                     l8567:	
  1491                           
  1492                           ;led.c: 1076: {
  1493                           ;led.c: 1077: temp_data2 = 0;
  1494  0026  01E5               	clrf	G_Segment_Wink@temp_data2
  1495                           
  1496                           ;led.c: 1078: if(study_lamp_stab_state == ((~temp_data1)&0x07))
  1497  0027  0967               	comf	G_Segment_Wink@temp_data1,w
  1498  0028  3907               	andlw	7
  1499  0029  067A               	xorwf	_study_lamp_stab_state,w
  1500  002A  1D03               	skipz
  1501  002B  2832               	goto	l8575
  1502                           
  1503                           ;led.c: 1079: {
  1504                           ;led.c: 1080: if((study_time_valid_flag&temp_data1)==0) temp_data2 = 1;
  1505  002C  0850               	movf	_study_time_valid_flag,w
  1506  002D  0567               	andwf	G_Segment_Wink@temp_data1,w
  1507  002E  1D03               	btfss	3,2
  1508  002F  2832               	goto	l8575
  1509  0030  01E5               	clrf	G_Segment_Wink@temp_data2
  1510  0031  0AE5               	incf	G_Segment_Wink@temp_data2,f
  1511  0032                     l8575:	
  1512                           
  1513                           ;led.c: 1081: }
  1514                           ;led.c: 1083: if(temp_data2 == 1)
  1515  0032  0B65               	decfsz	G_Segment_Wink@temp_data2,w
  1516  0033  2848               	goto	l8591
  1517                           
  1518                           ;led.c: 1086: if(g_segment_wink_state_flag != temp_data1)
  1519  0034  0843               	movf	_g_segment_wink_state_flag,w
  1520  0035  0667               	xorwf	G_Segment_Wink@temp_data1,w
  1521  0036  1903               	skipnz
  1522  0037  283E               	goto	l8585
  1523                           
  1524                           ;led.c: 1087: {
  1525                           ;led.c: 1088: g_segment_wink_time_counter = 9;
  1526  0038  3009               	movlw	9
  1527  0039  00C4               	movwf	_g_segment_wink_time_counter
  1528                           
  1529                           ;led.c: 1089: g_segment_wink_state_flag = temp_data1;
  1530  003A  0867               	movf	G_Segment_Wink@temp_data1,w
  1531  003B  00C3               	movwf	_g_segment_wink_state_flag
  1532  003C                     l8583:	
  1533                           
  1534                           ;led.c: 1090: g_segment_wink_display_flag = 0;
  1535  003C  01C2               	clrf	_g_segment_wink_display_flag
  1536                           
  1537                           ;led.c: 1091: }
  1538  003D  284A               	goto	l8593
  1539  003E                     l8585:	
  1540                           
  1541                           ;led.c: 1092: else
  1542                           ;led.c: 1093: {
  1543                           ;led.c: 1094: g_segment_wink_time_counter--;
  1544  003E  0BC4               	decfsz	_g_segment_wink_time_counter,f
  1545                           
  1546                           ;led.c: 1095: if(g_segment_wink_time_counter == 0)
  1547  003F  284A               	goto	l8593
  1548                           
  1549                           ;led.c: 1096: {
  1550                           ;led.c: 1097: g_segment_wink_time_counter = 10;
  1551  0040  300A               	movlw	10
  1552  0041  00C4               	movwf	_g_segment_wink_time_counter
  1553                           
  1554                           ;led.c: 1098: if(g_segment_wink_display_flag == 1) g_segment_wink_display_flag = 0;
  1555  0042  0B42               	decfsz	_g_segment_wink_display_flag,w
  1556  0043  2845               	goto	l1413
  1557  0044  283C               	goto	l8583
  1558  0045                     l1413:	
  1559                           
  1560                           ;led.c: 1099: else g_segment_wink_display_flag = 1;
  1561  0045  01C2               	clrf	_g_segment_wink_display_flag
  1562  0046  0AC2               	incf	_g_segment_wink_display_flag,f
  1563  0047  284A               	goto	l8593
  1564  0048                     l8591:	
  1565                           
  1566                           ;led.c: 1103: else
  1567                           ;led.c: 1104: {
  1568                           ;led.c: 1105: g_segment_wink_state_flag &= (~temp_data1);
  1569  0048  0967               	comf	G_Segment_Wink@temp_data1,w
  1570  0049  05C3               	andwf	_g_segment_wink_state_flag,f
  1571  004A                     l8593:	
  1572                           
  1573                           ;led.c: 1106: }
  1574                           ;led.c: 1108: if(g_segment_wink_state_flag == temp_data1)
  1575  004A  0843               	movf	_g_segment_wink_state_flag,w
  1576  004B  0667               	xorwf	G_Segment_Wink@temp_data1,w
  1577  004C  1D03               	skipz
  1578  004D  2856               	goto	l8601
  1579                           
  1580                           ;led.c: 1109: {
  1581                           ;led.c: 1110: if(g_segment_wink_display_flag == 1) g_segment_displaying(i);
  1582  004E  0B42               	decfsz	_g_segment_wink_display_flag,w
  1583  004F  2854               	goto	l8599
  1584  0050  0866               	movf	G_Segment_Wink@i,w
  1585  0051  2472  118A         	fcall	_g_segment_displaying
  1586  0053  2856               	goto	l8601
  1587  0054                     l8599:	
  1588                           
  1589                           ;led.c: 1111: else gre_displaying_end();
  1590  0054  2558  118A         	fcall	_gre_displaying_end
  1591  0056                     l8601:	
  1592  0056  3003               	movlw	3
  1593                           
  1594                           ;led.c: 1112: }
  1595                           ;led.c: 1113: temp_data1 <<= 1;
  1596  0057  1003               	clrc
  1597  0058  0DE7               	rlf	G_Segment_Wink@temp_data1,f
  1598  0059  0AE6               	incf	G_Segment_Wink@i,f
  1599  005A  0266               	subwf	G_Segment_Wink@i,w
  1600  005B  1803               	btfsc	3,0
  1601  005C  0008               	return
  1602  005D  2826               	goto	l8567
  1603  005E                     l8607:	
  1604                           
  1605                           ;led.c: 1116: else g_segment_wink_state_flag = 0;
  1606  005E  01C3               	clrf	_g_segment_wink_state_flag
  1607  005F  0008               	return
  1608  0060                     __end_of_G_Segment_Wink:	
  1609  0060                     __ptext961:	
  1610 ;; =============== function _G_Segment_Wink ends ============
  1611                           
  1612                           
  1613 ;; *************** function _down_time_display *****************
  1614 ;; Defined at:
  1615 ;;		line 619 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;		None               void
  1622 ;; Registers used:
  1623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 60/0
  1626 ;;		On exit  : 160/0
  1627 ;;		Unchanged: FFE9F/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1629 ;;      Params:         0       0       0       0
  1630 ;;      Locals:         0       0       0       0
  1631 ;;      Temps:          0       0       0       0
  1632 ;;      Totals:         0       0       0       0
  1633 ;;Total ram usage:        0 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    4
  1636 ;; This function calls:
  1637 ;;		_red_displaying_end
  1638 ;;		_syn_wink_manage
  1639 ;;		_yel_displaying_end
  1640 ;;		_gre_displaying_end
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645  0060                     _down_time_display:	
  1646                           
  1647                           ;led.c: 620: if(display_data[0] != 0)
  1648                           
  1649                           ; Regs used in _down_time_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1650  0060  0827               	movf	_display_data+1,w
  1651  0061  0426               	iorwf	_display_data,w
  1652  0062  1903               	skipnz
  1653  0063  286F               	goto	l8465
  1654                           
  1655                           ;led.c: 621: {
  1656                           ;led.c: 622: if(red_displaying_flag == 0)
  1657  0064  08CC               	movf	_red_displaying_flag,f
  1658  0065  1D03               	skipz
  1659  0066  286F               	goto	l8465
  1660                           
  1661                           ;led.c: 623: {
  1662                           ;led.c: 624: red_displaying_flag = 1;
  1663  0067  01CC               	clrf	_red_displaying_flag
  1664  0068  0ACC               	incf	_red_displaying_flag,f
  1665                           
  1666                           ;led.c: 625: gre_displaying_flag = 0;
  1667  0069  01C5               	clrf	_gre_displaying_flag
  1668                           
  1669                           ;led.c: 626: yel_displaying_flag = 0;
  1670  006A  01D7               	clrf	_yel_displaying_flag
  1671                           
  1672                           ;led.c: 627: display_data[2] = 0;
  1673  006B  01AA               	clrf	_display_data+4
  1674  006C  01AB               	clrf	_display_data+5
  1675                           
  1676                           ;led.c: 628: display_data[1] = 0;
  1677                           
  1678                           ;led.c: 629: syn_wink_display_updata = 1;
  1679                           
  1680                           ;led.c: 630: displaying_second_counter = 0;
  1681  006D  2703  118A         	fcall	PL19	;call to abstracted procedure
  1682  006F                     l8465:	
  1683                           
  1684                           ;led.c: 631: }
  1685                           ;led.c: 632: }
  1686                           ;led.c: 634: if(display_data[1] != 0)
  1687  006F  3028               	movlw	(_display_data& (0+255)+2)
  1688  0070  0084               	movwf	4
  1689  0071  1383               	bcf	3,7	;select IRP bank0
  1690  0072  0800               	movf	0,w
  1691  0073  0A84               	incf	4,f
  1692  0074  0400               	iorwf	0,w
  1693  0075  1903               	skipnz
  1694  0076  2885               	goto	l8475
  1695                           
  1696                           ;led.c: 635: {
  1697                           ;led.c: 636: if(yel_displaying_flag == 0)
  1698  0077  08D7               	movf	_yel_displaying_flag,f
  1699  0078  1D03               	skipz
  1700  0079  2885               	goto	l8475
  1701                           
  1702                           ;led.c: 637: {
  1703                           ;led.c: 638: yel_displaying_flag = 1;
  1704  007A  01D7               	clrf	_yel_displaying_flag
  1705  007B  0AD7               	incf	_yel_displaying_flag,f
  1706                           
  1707                           ;led.c: 639: displaying_second_counter = 0;
  1708  007C  01BC               	clrf	_displaying_second_counter
  1709                           
  1710                           ;led.c: 640: red_displaying_flag = 0;
  1711  007D  01CC               	clrf	_red_displaying_flag
  1712                           
  1713                           ;led.c: 641: gre_displaying_flag = 0;
  1714  007E  01C5               	clrf	_gre_displaying_flag
  1715                           
  1716                           ;led.c: 642: display_data[0] = 0;
  1717  007F  01A6               	clrf	_display_data
  1718  0080  01A7               	clrf	_display_data+1
  1719                           
  1720                           ;led.c: 643: display_data[2] = 0;
  1721  0081  01AA               	clrf	_display_data+4
  1722  0082  01AB               	clrf	_display_data+5
  1723                           
  1724                           ;led.c: 644: syn_wink_display_updata = 1;
  1725  0083  01D2               	clrf	_syn_wink_display_updata
  1726  0084  0AD2               	incf	_syn_wink_display_updata,f
  1727  0085                     l8475:	
  1728                           
  1729                           ;led.c: 645: }
  1730                           ;led.c: 646: }
  1731                           ;led.c: 648: if(display_data[2] != 0)
  1732  0085  3004               	movlw	4
  1733  0086  3E26               	addlw	_display_data& (0+255)
  1734  0087  270F  118A         	fcall	PL21	;call to abstracted procedure
  1735  0089  1903               	skipnz
  1736  008A  2896               	goto	l8485
  1737                           
  1738                           ;led.c: 649: {
  1739                           ;led.c: 650: if(gre_displaying_flag == 0)
  1740  008B  08C5               	movf	_gre_displaying_flag,f
  1741  008C  1D03               	skipz
  1742  008D  2896               	goto	l8485
  1743                           
  1744                           ;led.c: 651: {
  1745                           ;led.c: 652: gre_displaying_flag = 1;
  1746  008E  01C5               	clrf	_gre_displaying_flag
  1747  008F  0AC5               	incf	_gre_displaying_flag,f
  1748                           
  1749                           ;led.c: 653: red_displaying_flag = 0;
  1750  0090  01CC               	clrf	_red_displaying_flag
  1751                           
  1752                           ;led.c: 654: yel_displaying_flag = 0;
  1753  0091  01D7               	clrf	_yel_displaying_flag
  1754                           
  1755                           ;led.c: 655: display_data[0] = 0;
  1756  0092  01A6               	clrf	_display_data
  1757  0093  01A7               	clrf	_display_data+1
  1758                           
  1759                           ;led.c: 656: display_data[1] = 0;
  1760                           
  1761                           ;led.c: 657: syn_wink_display_updata = 1;
  1762                           
  1763                           ;led.c: 658: displaying_second_counter = 0;
  1764  0094  2703  118A         	fcall	PL19	;call to abstracted procedure
  1765  0096                     l8485:	
  1766                           
  1767                           ;led.c: 659: }
  1768                           ;led.c: 660: }
  1769                           ;led.c: 662: if(red_displaying_flag == 1)
  1770  0096  0B4C               	decfsz	_red_displaying_flag,w
  1771  0097  28BC               	goto	l8509
  1772  0098  3064               	movlw	100
  1773                           
  1774                           ;led.c: 663: {
  1775                           ;led.c: 664: displaying_second_counter++;
  1776  0099  0ABC               	incf	_displaying_second_counter,f
  1777                           
  1778                           ;led.c: 665: if(displaying_second_counter >= 100)
  1779  009A  023C               	subwf	_displaying_second_counter,w
  1780  009B  3000               	movlw	0
  1781  009C  1C03               	skipc
  1782  009D  28BA               	goto	L2
  1783                           
  1784                           ;led.c: 666: {
  1785                           ;led.c: 667: displaying_second_counter = 0;
  1786  009E  01BC               	clrf	_displaying_second_counter
  1787                           
  1788                           ;led.c: 668: if(display_data[0] <= 1)
  1789  009F  0227               	subwf	_display_data+1,w
  1790  00A0  3002               	movlw	2
  1791  00A1  1903               	skipnz
  1792  00A2  0226               	subwf	_display_data,w
  1793  00A3  1803               	skipnc
  1794  00A4  28AB               	goto	l8501
  1795                           
  1796                           ;led.c: 669: {
  1797                           ;led.c: 670: red_displaying_end();
  1798  00A5  2461  118A         	fcall	_red_displaying_end
  1799                           
  1800                           ;led.c: 671: red_displaying_flag = 0;
  1801  00A7  01CC               	clrf	_red_displaying_flag
  1802                           
  1803                           ;led.c: 672: display_data[0] = 0;
  1804  00A8  01A6               	clrf	_display_data
  1805  00A9  01A7               	clrf	_display_data+1
  1806                           
  1807                           ;led.c: 673: }
  1808  00AA  28B9               	goto	l8507
  1809  00AB                     l8501:	
  1810                           
  1811                           ;led.c: 674: else
  1812                           ;led.c: 675: {
  1813                           ;led.c: 676: display_data[0]--;
  1814  00AB  3001               	movlw	1
  1815  00AC  02A6               	subwf	_display_data,f
  1816  00AD  3000               	movlw	0
  1817  00AE  1C03               	skipc
  1818  00AF  03A7               	decf	_display_data+1,f
  1819  00B0  02A7               	subwf	_display_data+1,f
  1820                           
  1821                           ;led.c: 677: syn_wink_display_updata = 1;
  1822  00B1  01D2               	clrf	_syn_wink_display_updata
  1823  00B2  0AD2               	incf	_syn_wink_display_updata,f
  1824                           
  1825                           ;led.c: 678: if(display_data[0] == 1) displaying_second_counter = 2;
  1826  00B3  0326               	decf	_display_data,w
  1827  00B4  0427               	iorwf	_display_data+1,w
  1828  00B5  1D03               	skipz
  1829  00B6  28B9               	goto	l8507
  1830  00B7  3002               	movlw	2
  1831  00B8  00BC               	movwf	_displaying_second_counter
  1832  00B9                     l8507:	
  1833                           
  1834                           ;led.c: 679: }
  1835                           ;led.c: 680: }
  1836                           ;led.c: 681: syn_wink_manage(0);
  1837  00B9  3000               	movlw	0
  1838  00BA                     L2:	
  1839  00BA  2105  118A         	fcall	_syn_wink_manage
  1840  00BC                     l8509:	
  1841                           
  1842                           ;led.c: 682: }
  1843                           ;led.c: 684: if(yel_displaying_flag == 1)
  1844  00BC  0B57               	decfsz	_yel_displaying_flag,w
  1845  00BD  28E2               	goto	l8533
  1846  00BE  3064               	movlw	100
  1847                           
  1848                           ;led.c: 685: {
  1849                           ;led.c: 686: displaying_second_counter++;
  1850  00BF  0ABC               	incf	_displaying_second_counter,f
  1851                           
  1852                           ;led.c: 687: if(displaying_second_counter >= 100)
  1853  00C0  023C               	subwf	_displaying_second_counter,w
  1854  00C1  1C03               	skipc
  1855  00C2  28DF               	goto	l8531
  1856  00C3  3000               	movlw	0
  1857                           
  1858                           ;led.c: 688: {
  1859                           ;led.c: 689: displaying_second_counter = 0;
  1860  00C4  01BC               	clrf	_displaying_second_counter
  1861                           
  1862                           ;led.c: 690: if(display_data[1] <= 1)
  1863  00C5  0229               	subwf	_display_data+3,w
  1864  00C6  3002               	movlw	2
  1865  00C7  1903               	skipnz
  1866  00C8  0228               	subwf	_display_data+2,w
  1867  00C9  1803               	skipnc
  1868  00CA  28D1               	goto	l8525
  1869                           
  1870                           ;led.c: 691: {
  1871                           ;led.c: 692: yel_displaying_end();
  1872  00CB  25BF  118A         	fcall	_yel_displaying_end
  1873                           
  1874                           ;led.c: 693: yel_displaying_flag = 0;
  1875  00CD  01D7               	clrf	_yel_displaying_flag
  1876                           
  1877                           ;led.c: 694: display_data[1] = 0;
  1878  00CE  01A8               	clrf	_display_data+2
  1879  00CF  01A9               	clrf	_display_data+3
  1880                           
  1881                           ;led.c: 695: }
  1882  00D0  28DF               	goto	l8531
  1883  00D1                     l8525:	
  1884                           
  1885                           ;led.c: 696: else
  1886                           ;led.c: 697: {
  1887                           ;led.c: 698: display_data[1]--;
  1888  00D1  3001               	movlw	1
  1889  00D2  02A8               	subwf	_display_data+2,f
  1890  00D3  3000               	movlw	0
  1891  00D4  1C03               	skipc
  1892  00D5  03A9               	decf	_display_data+3,f
  1893  00D6  02A9               	subwf	_display_data+3,f
  1894                           
  1895                           ;led.c: 699: syn_wink_display_updata = 1;
  1896  00D7  01D2               	clrf	_syn_wink_display_updata
  1897  00D8  0AD2               	incf	_syn_wink_display_updata,f
  1898                           
  1899                           ;led.c: 700: if(display_data[1] == 1) displaying_second_counter = 2;
  1900  00D9  0328               	decf	_display_data+2,w
  1901  00DA  0429               	iorwf	_display_data+3,w
  1902  00DB  1D03               	skipz
  1903  00DC  28DF               	goto	l8531
  1904  00DD  3002               	movlw	2
  1905  00DE  00BC               	movwf	_displaying_second_counter
  1906  00DF                     l8531:	
  1907                           
  1908                           ;led.c: 701: }
  1909                           ;led.c: 702: }
  1910                           ;led.c: 703: syn_wink_manage(1);
  1911  00DF  3001               	movlw	1
  1912  00E0  2105  118A         	fcall	_syn_wink_manage
  1913  00E2                     l8533:	
  1914                           
  1915                           ;led.c: 704: }
  1916                           ;led.c: 706: if(gre_displaying_flag == 1)
  1917  00E2  0B45               	decfsz	_gre_displaying_flag,w
  1918  00E3  0008               	return
  1919  00E4  3064               	movlw	100
  1920                           
  1921                           ;led.c: 707: {
  1922                           ;led.c: 708: displaying_second_counter++;
  1923  00E5  0ABC               	incf	_displaying_second_counter,f
  1924                           
  1925                           ;led.c: 709: if(displaying_second_counter >= 100)
  1926  00E6  023C               	subwf	_displaying_second_counter,w
  1927  00E7  1C03               	skipc
  1928  00E8  2903               	goto	l8555
  1929  00E9  3000               	movlw	0
  1930                           
  1931                           ;led.c: 710: {
  1932                           ;led.c: 711: displaying_second_counter = 0;
  1933  00EA  01BC               	clrf	_displaying_second_counter
  1934                           
  1935                           ;led.c: 712: if(display_data[2] <= 1)
  1936  00EB  022B               	subwf	_display_data+5,w
  1937  00EC  3002               	movlw	2
  1938  00ED  1903               	skipnz
  1939  00EE  022A               	subwf	_display_data+4,w
  1940  00EF  1803               	skipnc
  1941  00F0  28F7               	goto	l8549
  1942                           
  1943                           ;led.c: 713: {
  1944                           ;led.c: 714: gre_displaying_end();
  1945  00F1  2558  118A         	fcall	_gre_displaying_end
  1946                           
  1947                           ;led.c: 715: gre_displaying_flag = 0;
  1948  00F3  01C5               	clrf	_gre_displaying_flag
  1949                           
  1950                           ;led.c: 716: display_data[2] = 0;
  1951  00F4  01AA               	clrf	_display_data+4
  1952  00F5  01AB               	clrf	_display_data+5
  1953                           
  1954                           ;led.c: 717: }
  1955  00F6  2903               	goto	l8555
  1956  00F7                     l8549:	
  1957                           
  1958                           ;led.c: 718: else
  1959                           ;led.c: 719: {
  1960                           ;led.c: 720: display_data[2]--;
  1961  00F7  3001               	movlw	1
  1962  00F8  02AA               	subwf	_display_data+4,f
  1963  00F9  1C03               	skipc
  1964  00FA  03AB               	decf	_display_data+5,f
  1965                           
  1966                           ;led.c: 721: syn_wink_display_updata = 1;
  1967  00FB  01D2               	clrf	_syn_wink_display_updata
  1968  00FC  0AD2               	incf	_syn_wink_display_updata,f
  1969                           
  1970                           ;led.c: 722: if(display_data[2] == 1) displaying_second_counter = 2;
  1971  00FD  032A               	decf	_display_data+4,w
  1972  00FE  042B               	iorwf	_display_data+5,w
  1973  00FF  3002               	movlw	2
  1974  0100  1D03               	skipz
  1975  0101  2904               	goto	L1
  1976  0102  00BC               	movwf	_displaying_second_counter
  1977  0103                     l8555:	
  1978                           
  1979                           ;led.c: 723: }
  1980                           ;led.c: 724: }
  1981                           ;led.c: 725: syn_wink_manage(2);
  1982  0103  3002               	movlw	2
  1983  0104                     L1:	
  1984  0104  2905               	ljmp	_syn_wink_manage
  1985  0105                     __end_of_down_time_display:	
  1986  0105                     __ptext965:	
  1987 ;; =============== function _study_mode_time_calculation ends ============
  1988                           
  1989                           
  1990 ;; *************** function _syn_wink_manage *****************
  1991 ;; Defined at:
  1992 ;;		line 564 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  channel         1    wreg     unsigned char 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  channel         1   11[BANK0 ] unsigned char 
  1997 ;;  tempdata        1   10[BANK0 ] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;		None               void
  2000 ;; Registers used:
  2001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 160/0
  2004 ;;		On exit  : 160/0
  2005 ;;		Unchanged: FFE9F/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2007 ;;      Params:         0       0       0       0
  2008 ;;      Locals:         0       2       0       0
  2009 ;;      Temps:          0       1       0       0
  2010 ;;      Totals:         0       3       0       0
  2011 ;;Total ram usage:        3 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    3
  2014 ;; This function calls:
  2015 ;;		_red_displaying
  2016 ;;		_yel_displaying
  2017 ;;		_gre_displaying
  2018 ;;		_red_displaying_end
  2019 ;; This function is called by:
  2020 ;;		_down_time_display
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023  0105                     _syn_wink_manage:	
  2024                           
  2025                           ; Regs used in _syn_wink_manage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2026                           ;syn_wink_manage@channel stored from wreg
  2027  0105  00EA               	movwf	syn_wink_manage@channel
  2028                           
  2029                           ;led.c: 568: {
  2030                           ;led.c: 569: tempdata = (0x01<<channel);
  2031  0106  3001               	movlw	1
  2032  0107  00E8               	movwf	??_syn_wink_manage
  2033  0108  0A6A               	incf	syn_wink_manage@channel,w
  2034  0109  290C               	goto	u5484
  2035  010A                     u5485:	
  2036  010A  1003               	clrc
  2037  010B  0DE8               	rlf	??_syn_wink_manage,f
  2038  010C                     u5484:	
  2039  010C  3EFF               	addlw	-1
  2040  010D  1D03               	skipz
  2041  010E  290A               	goto	u5485
  2042  010F  0868               	movf	??_syn_wink_manage,w
  2043  0110  00E9               	movwf	syn_wink_manage@tempdata
  2044                           
  2045                           ;led.c: 570: if(syn_wink_display_updata == 1)
  2046  0111  0B52               	decfsz	_syn_wink_display_updata,w
  2047  0112  2935               	goto	l7973
  2048                           
  2049                           ;led.c: 571: {
  2050                           ;led.c: 572: syn_wink_display_updata = 0;
  2051  0113  01D2               	clrf	_syn_wink_display_updata
  2052                           
  2053                           ;led.c: 573: if((lamp_stab_state&tempdata) == 0)
  2054  0114  0847               	movf	_lamp_stab_state,w
  2055  0115  0569               	andwf	syn_wink_manage@tempdata,w
  2056  0116  1D03               	btfss	3,2
  2057  0117  2932               	goto	l7969
  2058                           
  2059                           ;led.c: 574: {
  2060                           ;led.c: 575: if(channel == 0) red_displaying(display_data[0]);
  2061  0118  08EA               	movf	syn_wink_manage@channel,f
  2062  0119  1D03               	skipz
  2063  011A  2922               	goto	l7961
  2064  011B  0827               	movf	_display_data+1,w
  2065  011C  00E4               	movwf	?_red_displaying+1
  2066  011D  0826               	movf	_display_data,w
  2067  011E  00E3               	movwf	?_red_displaying
  2068  011F  2582  118A         	fcall	_red_displaying
  2069  0121  292F               	goto	l7967
  2070  0122                     l7961:	
  2071                           
  2072                           ;led.c: 576: else if(channel == 1) yel_displaying(display_data[1]);
  2073  0122  0B6A               	decfsz	syn_wink_manage@channel,w
  2074  0123  292B               	goto	l7965
  2075  0124  0829               	movf	_display_data+3,w
  2076  0125  00E4               	movwf	?_yel_displaying+1
  2077  0126  0828               	movf	_display_data+2,w
  2078  0127  00E3               	movwf	?_yel_displaying
  2079  0128  2627  118A         	fcall	_yel_displaying
  2080  012A  292F               	goto	l7967
  2081  012B                     l7965:	
  2082                           
  2083                           ;led.c: 577: else gre_displaying(display_data[2]);
  2084  012B  2714  118A         	fcall	PL22	;call to abstracted procedure
  2085  012D  2664  118A         	fcall	_gre_displaying
  2086  012F                     l7967:	
  2087                           
  2088                           ;led.c: 578: syn_wink_display_state = 1;
  2089  012F  01D1               	clrf	_syn_wink_display_state
  2090  0130  0AD1               	incf	_syn_wink_display_state,f
  2091                           
  2092                           ;led.c: 579: }
  2093  0131  2935               	goto	l7973
  2094  0132                     l7969:	
  2095                           
  2096                           ;led.c: 580: else
  2097                           ;led.c: 581: {
  2098                           ;led.c: 582: red_displaying_end();
  2099  0132  2461  118A         	fcall	_red_displaying_end
  2100                           
  2101                           ;led.c: 583: syn_wink_display_state = 0;
  2102  0134  01D1               	clrf	_syn_wink_display_state
  2103  0135                     l7973:	
  2104                           
  2105                           ;led.c: 584: }
  2106                           ;led.c: 585: }
  2107                           ;led.c: 587: if(syn_wink_display_state == 1)
  2108  0135  0B51               	decfsz	_syn_wink_display_state,w
  2109  0136  293E               	goto	l7981
  2110                           
  2111                           ;led.c: 588: {
  2112                           ;led.c: 589: if((lamp_stab_state&tempdata) != 0)
  2113  0137  0847               	movf	_lamp_stab_state,w
  2114  0138  0569               	andwf	syn_wink_manage@tempdata,w
  2115  0139  1903               	btfsc	3,2
  2116  013A  0008               	return
  2117                           
  2118                           ;led.c: 590: {
  2119                           ;led.c: 591: red_displaying_end();
  2120  013B  2461               	fcall	_red_displaying_end
  2121                           
  2122                           ;led.c: 592: syn_wink_display_state = 0;
  2123  013C  01D1               	clrf	_syn_wink_display_state
  2124  013D  0008               	return
  2125  013E                     l7981:	
  2126                           
  2127                           ;led.c: 595: else
  2128                           ;led.c: 596: {
  2129                           ;led.c: 597: if((lamp_stab_state&tempdata) == 0)
  2130  013E  0847               	movf	_lamp_stab_state,w
  2131  013F  0569               	andwf	syn_wink_manage@tempdata,w
  2132  0140  1D03               	btfss	3,2
  2133  0141  0008               	return
  2134                           
  2135                           ;led.c: 598: {
  2136                           ;led.c: 599: if(channel == 0) red_displaying(display_data[0]);
  2137  0142  08EA               	movf	syn_wink_manage@channel,f
  2138  0143  1D03               	skipz
  2139  0144  294C               	goto	l7987
  2140  0145  0827               	movf	_display_data+1,w
  2141  0146  00E4               	movwf	?_red_displaying+1
  2142  0147  0826               	movf	_display_data,w
  2143  0148  00E3               	movwf	?_red_displaying
  2144  0149  2582  118A         	fcall	_red_displaying
  2145  014B  2958               	goto	l7993
  2146  014C                     l7987:	
  2147                           
  2148                           ;led.c: 600: else if(channel == 1) yel_displaying(display_data[1]);
  2149  014C  0B6A               	decfsz	syn_wink_manage@channel,w
  2150  014D  2955               	goto	l7991
  2151  014E  0829               	movf	_display_data+3,w
  2152  014F  00E4               	movwf	?_yel_displaying+1
  2153  0150  0828               	movf	_display_data+2,w
  2154  0151  00E3               	movwf	?_yel_displaying
  2155  0152  2627  118A         	fcall	_yel_displaying
  2156  0154  2958               	goto	l7993
  2157  0155                     l7991:	
  2158                           
  2159                           ;led.c: 601: else gre_displaying(display_data[2]);
  2160  0155  2714  118A         	fcall	PL22	;call to abstracted procedure
  2161  0157  2664               	fcall	_gre_displaying
  2162  0158                     l7993:	
  2163                           
  2164                           ;led.c: 602: syn_wink_display_state = 1;
  2165  0158  01D1               	clrf	_syn_wink_display_state
  2166  0159  0AD1               	incf	_syn_wink_display_state,f
  2167  015A  0008               	return
  2168  015B                     __end_of_syn_wink_manage:	
  2169  015B                     __ptext964:	
  2170 ;; =============== function _usart_data_analyse ends ============
  2171                           
  2172                           
  2173 ;; *************** function _study_mode_time_calculation *****************
  2174 ;; Defined at:
  2175 ;;		line 840 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  temp_var2       2    8[BANK0 ] unsigned int 
  2180 ;;  i               1   11[BANK0 ] unsigned char 
  2181 ;;  temp_var1       1   10[BANK0 ] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;		None               void
  2184 ;; Registers used:
  2185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 60/0
  2188 ;;		On exit  : 60/0
  2189 ;;		Unchanged: FFE9F/0
  2190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2191 ;;      Params:         0       0       0       0
  2192 ;;      Locals:         0       4       0       0
  2193 ;;      Temps:          0       4       0       0
  2194 ;;      Totals:         0       8       0       0
  2195 ;;Total ram usage:        8 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    3
  2198 ;; This function calls:
  2199 ;;		___lwdiv
  2200 ;;		_red_displaying_end
  2201 ;;		_yel_displaying_end
  2202 ;;		_gre_displaying_end
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207  015B                     _study_mode_time_calculation:	
  2208                           
  2209                           ;led.c: 841: unsigned char i;
  2210                           ;led.c: 842: unsigned char temp_var1;
  2211                           ;led.c: 843: unsigned int temp_var2;
  2212                           ;led.c: 844: study_lamp_stab_state &= 0x07;
  2213                           
  2214                           ; Regs used in _study_mode_time_calculation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2215  015B  3007               	movlw	7
  2216  015C  05FA               	andwf	_study_lamp_stab_state,f
  2217                           
  2218                           ;led.c: 845: temp_var1 = 0x01;
  2219  015D  01E9               	clrf	study_mode_time_calculation@temp_var1
  2220  015E  0AE9               	incf	study_mode_time_calculation@temp_var1,f
  2221                           
  2222                           ;led.c: 846: for(i=0;i<3;i++)
  2223  015F  01EA               	clrf	study_mode_time_calculation@i
  2224  0160                     l8019:	
  2225                           
  2226                           ;led.c: 847: {
  2227                           ;led.c: 848: if(study_lamp_stab_state==((~temp_var1)&0x07))
  2228  0160  0969               	comf	study_mode_time_calculation@temp_var1,w
  2229  0161  3907               	andlw	7
  2230  0162  067A               	xorwf	_study_lamp_stab_state,w
  2231  0163  1D03               	skipz
  2232  0164  29FA               	goto	l8075
  2233                           
  2234                           ;led.c: 849: {
  2235                           ;led.c: 850: if((study_time_flag&temp_var1)==0)
  2236  0165  084F               	movf	_study_time_flag,w
  2237  0166  0569               	andwf	study_mode_time_calculation@temp_var1,w
  2238  0167  1D03               	btfss	3,2
  2239  0168  29CC               	goto	l8067
  2240                           
  2241                           ;led.c: 851: {
  2242                           ;led.c: 852: study_time_flag |= temp_var1;
  2243  0169  0869               	movf	study_mode_time_calculation@temp_var1,w
  2244  016A  04CF               	iorwf	_study_time_flag,f
  2245                           
  2246                           ;led.c: 853: current_study_counter[i]=0;
  2247  016B  2709  118A         	fcall	PL20	;call to abstracted procedure
  2248  016D  0180               	clrf	0
  2249  016E  0A84               	incf	4,f
  2250  016F  0180               	clrf	0
  2251                           
  2252                           ;led.c: 855: if((i==2)||(i==0))
  2253  0170  086A               	movf	study_mode_time_calculation@i,w
  2254  0171  3A02               	xorlw	2
  2255  0172  1D03               	btfss	3,2
  2256  0173  08EA               	movf	study_mode_time_calculation@i,f
  2257  0174  1D03               	skipz
  2258  0175  29AB               	goto	l8057
  2259                           
  2260                           ;led.c: 856: {
  2261                           ;led.c: 857: if(communication_flag == 1)
  2262  0176  0B3B               	decfsz	_communication_flag,w
  2263  0177  297F               	goto	l8039
  2264  0178  3003               	movlw	3
  2265                           
  2266                           ;led.c: 858: {
  2267                           ;led.c: 859: communication_counter++;
  2268  0179  0ABA               	incf	_communication_counter,f
  2269                           
  2270                           ;led.c: 860: if(communication_counter >= 3)
  2271  017A  023A               	subwf	_communication_counter,w
  2272  017B  1C03               	skipc
  2273  017C  297F               	goto	l8039
  2274                           
  2275                           ;led.c: 861: {
  2276                           ;led.c: 862: communication_counter = 0;
  2277  017D  01BA               	clrf	_communication_counter
  2278                           
  2279                           ;led.c: 863: communication_flag = 0;
  2280  017E  01BB               	clrf	_communication_flag
  2281  017F                     l8039:	
  2282                           
  2283                           ;led.c: 864: }
  2284                           ;led.c: 865: }
  2285                           ;led.c: 866: if(communication_flag == 0)
  2286  017F  08BB               	movf	_communication_flag,f
  2287  0180  1D03               	skipz
  2288  0181  2AB2               	goto	l8165
  2289                           
  2290                           ;led.c: 867: {
  2291                           ;led.c: 868: if((study_time_valid_flag&temp_var1)==temp_var1)
  2292  0182  0850               	movf	_study_time_valid_flag,w
  2293  0183  0569               	andwf	study_mode_time_calculation@temp_var1,w
  2294  0184  0669               	xorwf	study_mode_time_calculation@temp_var1,w
  2295  0185  1D03               	skipz
  2296  0186  2AB2               	goto	l8165
  2297                           
  2298                           ;led.c: 869: {
  2299                           ;led.c: 870: if(previous_study_counter[i] >= 60000) display_data[i] = 0;
  2300  0187  1003               	clrc
  2301  0188  0D6A               	rlf	study_mode_time_calculation@i,w
  2302  0189  3E2C               	addlw	_previous_study_counter& (0+255)
  2303  018A  26A9  118A         	fcall	PL3	;call to abstracted procedure
  2304  018C  30EA               	movlw	234
  2305  018D  0264               	subwf	??_study_mode_time_calculation+1,w
  2306  018E  3060               	movlw	96
  2307  018F  1903               	skipnz
  2308  0190  0263               	subwf	??_study_mode_time_calculation,w
  2309  0191  1C03               	skipc
  2310  0192  2998               	goto	l8047
  2311  0193  1003               	clrc
  2312  0194  0D6A               	rlf	study_mode_time_calculation@i,w
  2313  0195  278C  118A         	fcall	PL13	;call to abstracted procedure
  2314  0197  2AB2               	goto	l8165
  2315  0198                     l8047:	
  2316                           
  2317                           ;led.c: 871: else
  2318                           ;led.c: 872: {
  2319                           ;led.c: 873: display_data[i] = (previous_study_counter[i]+18)/100;
  2320  0198  26B0  118A         	fcall	PL4	;call to abstracted procedure
  2321  019A  26A9  118A         	fcall	PL3	;call to abstracted procedure
  2322  019C  26E7  118A         	fcall	PL11	;call to abstracted procedure
  2323  019E  22CA  118A         	fcall	___lwdiv
  2324  01A0  26D6  118A         	fcall	PL9	;call to abstracted procedure
  2325                           
  2326                           ;led.c: 874: if(i==0)red_displaying_flag = 0;
  2327  01A2  08EA               	movf	study_mode_time_calculation@i,f
  2328  01A3  1903               	btfsc	3,2
  2329  01A4  01CC               	clrf	_red_displaying_flag
  2330                           
  2331                           ;led.c: 875: if(i==2)gre_displaying_flag = 0;
  2332  01A5  086A               	movf	study_mode_time_calculation@i,w
  2333  01A6  3A02               	xorlw	2
  2334  01A7  1D03               	skipz
  2335  01A8  2AB2               	goto	l8165
  2336  01A9  01C5               	clrf	_gre_displaying_flag
  2337                           
  2338                           ;led.c: 876: }
  2339                           ;led.c: 877: }
  2340                           ;led.c: 878: }
  2341                           ;led.c: 879: }
  2342  01AA  2AB2               	goto	l8165
  2343  01AB                     l8057:	
  2344                           
  2345                           ;led.c: 880: else
  2346                           ;led.c: 881: {
  2347                           ;led.c: 882: if((study_time_valid_flag&temp_var1)==temp_var1)
  2348  01AB  0850               	movf	_study_time_valid_flag,w
  2349  01AC  0569               	andwf	study_mode_time_calculation@temp_var1,w
  2350  01AD  0669               	xorwf	study_mode_time_calculation@temp_var1,w
  2351  01AE  1D03               	skipz
  2352  01AF  2AB2               	goto	l8165
  2353                           
  2354                           ;led.c: 883: {
  2355                           ;led.c: 884: yel_displaying_flag = 0;
  2356  01B0  01D7               	clrf	_yel_displaying_flag
  2357                           
  2358                           ;led.c: 885: if(previous_study_counter[i] >= 60000) display_data[i] = 0;
  2359  01B1  1003               	clrc
  2360  01B2  0D6A               	rlf	study_mode_time_calculation@i,w
  2361  01B3  3E2C               	addlw	_previous_study_counter& (0+255)
  2362  01B4  26A9  118A         	fcall	PL3	;call to abstracted procedure
  2363  01B6  30EA               	movlw	234
  2364  01B7  0264               	subwf	??_study_mode_time_calculation+1,w
  2365  01B8  3060               	movlw	96
  2366  01B9  1903               	skipnz
  2367  01BA  0263               	subwf	??_study_mode_time_calculation,w
  2368  01BB  1C03               	skipc
  2369  01BC  29C1               	goto	l8065
  2370  01BD  1003               	clrc
  2371  01BE  0D6A               	rlf	study_mode_time_calculation@i,w
  2372  01BF  278C  118A         	fcall	PL13	;call to abstracted procedure
  2373  01C1                     l8065:	
  2374                           
  2375                           ;led.c: 886: display_data[i] = (previous_study_counter[i]+18)/100;
  2376  01C1  26B0  118A         	fcall	PL4	;call to abstracted procedure
  2377  01C3  26A9  118A         	fcall	PL3	;call to abstracted procedure
  2378  01C5  26E7  118A         	fcall	PL11	;call to abstracted procedure
  2379  01C7  22CA  118A         	fcall	___lwdiv
  2380  01C9  26D6  118A         	fcall	PL9	;call to abstracted procedure
  2381  01CB  2AB2               	goto	l8165
  2382  01CC                     l8067:	
  2383                           
  2384                           ;led.c: 890: else
  2385                           ;led.c: 891: {
  2386                           ;led.c: 892: current_study_counter[i]++;
  2387  01CC  1003               	clrc
  2388  01CD  0D6A               	rlf	study_mode_time_calculation@i,w
  2389  01CE  3E20               	addlw	_current_study_counter& (0+255)
  2390  01CF  0084               	movwf	4
  2391  01D0  3001               	movlw	1
  2392  01D1  1383               	bcf	3,7	;select IRP bank0
  2393  01D2  0780               	addwf	0,f
  2394  01D3  0A84               	incf	4,f
  2395  01D4  1803               	skipnc
  2396  01D5  0A80               	incf	0,f
  2397                           
  2398                           ;led.c: 893: if(current_study_counter[i] >= 60000) current_study_counter[i] = 60000;
  2399  01D6  1003               	clrc
  2400  01D7  0D6A               	rlf	study_mode_time_calculation@i,w
  2401  01D8  3E20               	addlw	_current_study_counter& (0+255)
  2402  01D9  26A9  118A         	fcall	PL3	;call to abstracted procedure
  2403  01DB  30EA               	movlw	234
  2404  01DC  0264               	subwf	??_study_mode_time_calculation+1,w
  2405  01DD  3060               	movlw	96
  2406  01DE  1903               	skipnz
  2407  01DF  0263               	subwf	??_study_mode_time_calculation,w
  2408  01E0  1C03               	skipc
  2409  01E1  29EB               	goto	l8071
  2410  01E2  1003               	clrc
  2411  01E3  0D6A               	rlf	study_mode_time_calculation@i,w
  2412  01E4  3E20               	addlw	_current_study_counter& (0+255)
  2413  01E5  0084               	movwf	4
  2414  01E6  3060               	movlw	96
  2415  01E7  0080               	movwf	0
  2416  01E8  30EA               	movlw	234
  2417  01E9  0A84               	incf	4,f
  2418  01EA  0080               	movwf	0
  2419  01EB                     l8071:	
  2420                           
  2421                           ;led.c: 894: if((pulse_study_time_flag & temp_var1)==temp_var1) pulse_study_time_counter
      +                          [i]++;
  2422  01EB  084B               	movf	_pulse_study_time_flag,w
  2423  01EC  0569               	andwf	study_mode_time_calculation@temp_var1,w
  2424  01ED  0669               	xorwf	study_mode_time_calculation@temp_var1,w
  2425  01EE  1D03               	skipz
  2426  01EF  2AB2               	goto	l8165
  2427  01F0  1003               	clrc
  2428  01F1  0D6A               	rlf	study_mode_time_calculation@i,w
  2429  01F2  3ED0               	addlw	_pulse_study_time_counter& (0+255)
  2430  01F3  0084               	movwf	4
  2431  01F4  3001               	movlw	1
  2432  01F5  0780               	addwf	0,f
  2433  01F6  0A84               	incf	4,f
  2434  01F7  1803               	skipnc
  2435  01F8  0A80               	incf	0,f
  2436  01F9  2AB2               	goto	l8165
  2437  01FA                     l8075:	
  2438                           
  2439                           ;led.c: 897: else
  2440                           ;led.c: 898: {
  2441                           ;led.c: 899: if((study_time_flag&temp_var1)==temp_var1)
  2442  01FA  084F               	movf	_study_time_flag,w
  2443  01FB  0569               	andwf	study_mode_time_calculation@temp_var1,w
  2444  01FC  0669               	xorwf	study_mode_time_calculation@temp_var1,w
  2445  01FD  1D03               	skipz
  2446  01FE  2A4D               	goto	l8121
  2447                           
  2448                           ;led.c: 900: {
  2449                           ;led.c: 901: study_time_flag &= ~temp_var1;
  2450  01FF  0969               	comf	study_mode_time_calculation@temp_var1,w
  2451  0200  05CF               	andwf	_study_time_flag,f
  2452                           
  2453                           ;led.c: 903: if(previous_study_counter[i] >= current_study_counter[i])
  2454  0201  2709  118A         	fcall	PL20	;call to abstracted procedure
  2455  0203  26A1  118A         	fcall	PL2	;call to abstracted procedure
  2456  0205  3E2C               	addlw	_previous_study_counter& (0+255)
  2457  0206  26C9  118A         	fcall	PL7	;call to abstracted procedure
  2458  0208  1C03               	skipc
  2459  0209  2A12               	goto	L9
  2460                           
  2461                           ;led.c: 904: {
  2462                           ;led.c: 905: temp_var2 = previous_study_counter[i]-current_study_counter[i];
  2463  020A  1003               	clrc
  2464  020B  0D6A               	rlf	study_mode_time_calculation@i,w
  2465  020C  3E20               	addlw	_current_study_counter& (0+255)
  2466  020D  0084               	movwf	4
  2467  020E  26A1  118A         	fcall	PL2	;call to abstracted procedure
  2468  0210  3E2C               	addlw	_previous_study_counter& (0+255)
  2469  0211  2A18               	goto	L7
  2470  0212                     L9:	
  2471                           ;led.c: 907: else
  2472                           ;led.c: 908: {
  2473                           ;led.c: 909: temp_var2 = current_study_counter[i]-previous_study_counter[i];
  2474                           
  2475                           ;led.c: 906: }
  2476                           
  2477  0212  0D6A               	rlf	study_mode_time_calculation@i,w
  2478  0213  3E2C               	addlw	_previous_study_counter& (0+255)
  2479  0214  0084               	movwf	4
  2480  0215  26A1  118A         	fcall	PL2	;call to abstracted procedure
  2481  0217  3E20               	addlw	_current_study_counter& (0+255)
  2482  0218                     L7:	
  2483  0218  0084               	movwf	4
  2484  0219  0800               	movf	0,w
  2485  021A  26BC  118A         	fcall	PL6	;call to abstracted procedure
  2486                           
  2487                           ;led.c: 910: }
  2488                           ;led.c: 911: if((lamp_counter_valid_flag & temp_var1)==temp_var1)
  2489  021C  0846               	movf	_lamp_counter_valid_flag,w
  2490  021D  0569               	andwf	study_mode_time_calculation@temp_var1,w
  2491  021E  0669               	xorwf	study_mode_time_calculation@temp_var1,w
  2492  021F  1D03               	skipz
  2493  0220  2A4D               	goto	l8121
  2494                           
  2495                           ;led.c: 934: else
  2496                           ;led.c: 935: {
  2497                           ;led.c: 936: if(temp_var2 <= 140)
  2498  0221  3000               	movlw	0
  2499  0222  0268               	subwf	study_mode_time_calculation@temp_var2+1,w
  2500  0223  308D               	movlw	141
  2501  0224  1903               	skipnz
  2502  0225  0267               	subwf	study_mode_time_calculation@temp_var2,w
  2503  0226  1803               	skipnc
  2504  0227  2A32               	goto	l8109
  2505                           
  2506                           ;led.c: 937: {
  2507                           ;led.c: 938: study_time_valid_flag |= temp_var1;
  2508  0228  0869               	movf	study_mode_time_calculation@temp_var1,w
  2509  0229  04D0               	iorwf	_study_time_valid_flag,f
  2510                           
  2511                           ;led.c: 939: previous_study_counter[i] = current_study_counter[i];
  2512  022A  26B7  118A         	fcall	PL5	;call to abstracted procedure
  2513  022C  26A1  118A         	fcall	PL2	;call to abstracted procedure
  2514  022E  3E2C               	addlw	_previous_study_counter& (0+255)
  2515  022F  26E0  118A         	fcall	PL10	;call to abstracted procedure
  2516                           
  2517                           ;led.c: 940: }
  2518  0231  2A4D               	goto	l8121
  2519  0232                     l8109:	
  2520                           
  2521                           ;led.c: 941: else
  2522                           ;led.c: 942: {
  2523                           ;led.c: 943: if(previous_study_counter[i] != 0)
  2524  0232  1003               	clrc
  2525  0233  0D6A               	rlf	study_mode_time_calculation@i,w
  2526  0234  3E2C               	addlw	_previous_study_counter& (0+255)
  2527  0235  270F  118A         	fcall	PL21	;call to abstracted procedure
  2528  0237  1903               	skipnz
  2529  0238  2A45               	goto	l8117
  2530                           
  2531                           ;led.c: 944: {
  2532                           ;led.c: 945: previous_study_counter[0] = 0;
  2533  0239  01AC               	clrf	_previous_study_counter
  2534  023A  01AD               	clrf	_previous_study_counter+1
  2535                           
  2536                           ;led.c: 946: previous_study_counter[1] = 0;
  2537  023B  01AE               	clrf	_previous_study_counter+2
  2538  023C  01AF               	clrf	_previous_study_counter+3
  2539                           
  2540                           ;led.c: 947: previous_study_counter[2] = 0;
  2541  023D  01B0               	clrf	_previous_study_counter+4
  2542  023E  01B1               	clrf	_previous_study_counter+5
  2543                           
  2544                           ;led.c: 948: if(communication_flag == 0)
  2545  023F  08BB               	movf	_communication_flag,f
  2546  0240  1D03               	skipz
  2547  0241  2A45               	goto	l8117
  2548                           
  2549                           ;led.c: 949: {
  2550                           ;led.c: 950: display_data[0] = 0;
  2551  0242  01A6               	clrf	_display_data
  2552                           
  2553                           ;led.c: 951: display_data[1] = 0;
  2554                           
  2555                           ;led.c: 952: display_data[2] = 0;
  2556  0243  26FD  118A         	fcall	PL17	;call to abstracted procedure
  2557  0245                     l8117:	
  2558                           
  2559                           ;led.c: 953: }
  2560                           ;led.c: 954: }
  2561                           ;led.c: 955: previous_study_counter[i] = current_study_counter[i];
  2562  0245  26B7  118A         	fcall	PL5	;call to abstracted procedure
  2563  0247  26A1  118A         	fcall	PL2	;call to abstracted procedure
  2564  0249  3E2C               	addlw	_previous_study_counter& (0+255)
  2565  024A  26E0  118A         	fcall	PL10	;call to abstracted procedure
  2566                           
  2567                           ;led.c: 956: study_time_valid_flag = 0;
  2568  024C  01D0               	clrf	_study_time_valid_flag
  2569  024D                     l8121:	
  2570                           
  2571                           ;led.c: 957: }
  2572                           ;led.c: 958: }
  2573                           ;led.c: 959: }
  2574                           ;led.c: 960: }
  2575                           ;led.c: 961: if(communication_flag == 0)
  2576  024D  08BB               	movf	_communication_flag,f
  2577  024E  1D03               	skipz
  2578  024F  2AB2               	goto	l8165
  2579                           
  2580                           ;led.c: 962: {
  2581                           ;led.c: 963: if(i==0)
  2582  0250  08EA               	movf	study_mode_time_calculation@i,f
  2583  0251  1D03               	skipz
  2584  0252  2A5A               	goto	l8131
  2585                           
  2586                           ;led.c: 964: {
  2587                           ;led.c: 965: if(red_displaying_flag == 1)
  2588  0253  0B4C               	decfsz	_red_displaying_flag,w
  2589  0254  2A5A               	goto	l8131
  2590                           
  2591                           ;led.c: 966: {
  2592                           ;led.c: 967: red_displaying_flag = 0;
  2593  0255  01CC               	clrf	_red_displaying_flag
  2594                           
  2595                           ;led.c: 968: display_data[0] = 0;
  2596  0256  01A6               	clrf	_display_data
  2597  0257  01A7               	clrf	_display_data+1
  2598                           
  2599                           ;led.c: 969: red_displaying_end();
  2600  0258  2461  118A         	fcall	_red_displaying_end
  2601  025A                     l8131:	
  2602                           
  2603                           ;led.c: 970: }
  2604                           ;led.c: 971: }
  2605                           ;led.c: 973: if(i==1)
  2606  025A  0B6A               	decfsz	study_mode_time_calculation@i,w
  2607  025B  2A63               	goto	l8139
  2608                           
  2609                           ;led.c: 974: {
  2610                           ;led.c: 975: if(yel_displaying_flag == 1)
  2611  025C  0B57               	decfsz	_yel_displaying_flag,w
  2612  025D  2A63               	goto	l8139
  2613                           
  2614                           ;led.c: 976: {
  2615                           ;led.c: 977: yel_displaying_flag = 0;
  2616  025E  01D7               	clrf	_yel_displaying_flag
  2617                           
  2618                           ;led.c: 978: display_data[1] = 0;
  2619  025F  01A8               	clrf	_display_data+2
  2620  0260  01A9               	clrf	_display_data+3
  2621                           
  2622                           ;led.c: 979: yel_displaying_end();
  2623  0261  25BF  118A         	fcall	_yel_displaying_end
  2624  0263                     l8139:	
  2625                           
  2626                           ;led.c: 980: }
  2627                           ;led.c: 981: }
  2628                           ;led.c: 983: if(i==2)
  2629  0263  086A               	movf	study_mode_time_calculation@i,w
  2630  0264  3A02               	xorlw	2
  2631  0265  1D03               	skipz
  2632  0266  2A6E               	goto	l8147
  2633                           
  2634                           ;led.c: 984: {
  2635                           ;led.c: 985: if(gre_displaying_flag == 1)
  2636  0267  0B45               	decfsz	_gre_displaying_flag,w
  2637  0268  2A6E               	goto	l8147
  2638                           
  2639                           ;led.c: 986: {
  2640                           ;led.c: 987: gre_displaying_flag = 0;
  2641  0269  01C5               	clrf	_gre_displaying_flag
  2642                           
  2643                           ;led.c: 988: display_data[2] = 0;
  2644  026A  01AA               	clrf	_display_data+4
  2645  026B  01AB               	clrf	_display_data+5
  2646                           
  2647                           ;led.c: 989: gre_displaying_end();
  2648  026C  2558  118A         	fcall	_gre_displaying_end
  2649  026E                     l8147:	
  2650                           
  2651                           ;led.c: 990: }
  2652                           ;led.c: 991: }
  2653                           ;led.c: 993: if((pulse_study_time_flag&temp_var1)==temp_var1)
  2654  026E  084B               	movf	_pulse_study_time_flag,w
  2655  026F  0569               	andwf	study_mode_time_calculation@temp_var1,w
  2656  0270  0669               	xorwf	study_mode_time_calculation@temp_var1,w
  2657  0271  1D03               	skipz
  2658  0272  2AB2               	goto	l8165
  2659                           
  2660                           ;led.c: 994: {
  2661                           ;led.c: 995: if(pulse_down_times[i] >= pulse_study_time_counter[i]) temp_var2 = pulse_do
      +                          wn_times[i] - pulse_study_time_counter[i];
  2662  0273  1003               	clrc
  2663  0274  0D6A               	rlf	study_mode_time_calculation@i,w
  2664  0275  3ED0               	addlw	_pulse_study_time_counter& (0+255)
  2665  0276  0084               	movwf	4
  2666  0277  1383               	bcf	3,7	;select IRP bank1
  2667  0278  26A1  118A         	fcall	PL2	;call to abstracted procedure
  2668  027A  3ECA               	addlw	_pulse_down_times& (0+255)
  2669  027B  26C9  118A         	fcall	PL7	;call to abstracted procedure
  2670  027D  1C03               	skipc
  2671  027E  2A87               	goto	L10
  2672  027F  1003               	clrc
  2673  0280  0D6A               	rlf	study_mode_time_calculation@i,w
  2674  0281  3ED0               	addlw	_pulse_study_time_counter& (0+255)
  2675  0282  0084               	movwf	4
  2676  0283  26A1  118A         	fcall	PL2	;call to abstracted procedure
  2677  0285  3ECA               	addlw	_pulse_down_times& (0+255)
  2678  0286  2A8D               	goto	L8
  2679  0287                     L10:	
  2680                           ;led.c: 996: else temp_var2 = pulse_study_time_counter[i] - pulse_down_times[i];
  2681                           
  2682  0287  0D6A               	rlf	study_mode_time_calculation@i,w
  2683  0288  3ECA               	addlw	_pulse_down_times& (0+255)
  2684  0289  0084               	movwf	4
  2685  028A  26A1  118A         	fcall	PL2	;call to abstracted procedure
  2686  028C  3ED0               	addlw	_pulse_study_time_counter& (0+255)
  2687  028D                     L8:	
  2688  028D  0084               	movwf	4
  2689  028E  0800               	movf	0,w
  2690  028F  26BC  118A         	fcall	PL6	;call to abstracted procedure
  2691                           
  2692                           ;led.c: 997: if(temp_var2 > 140)
  2693  0291  3000               	movlw	0
  2694  0292  0268               	subwf	study_mode_time_calculation@temp_var2+1,w
  2695  0293  308D               	movlw	141
  2696  0294  1903               	skipnz
  2697  0295  0267               	subwf	study_mode_time_calculation@temp_var2,w
  2698  0296  1C03               	skipc
  2699  0297  2AA6               	goto	l8161
  2700                           
  2701                           ;led.c: 1000: {
  2702                           ;led.c: 1001: pulse_down_time_valid_flag = 0;
  2703  0298  1003               	clrc
  2704  0299  0D6A               	rlf	study_mode_time_calculation@i,w
  2705  029A  3ECA               	addlw	_pulse_down_times& (0+255)
  2706  029B  270F  118A         	fcall	PL21	;call to abstracted procedure
  2707  029D  1903               	skipnz
  2708  029E  2AA6               	goto	l8161
  2709                           
  2710                           ;led.c: 1002: pulse_down_times[0] = 0;
  2711  029F  1683               	bsf	3,5	;RP0=1, select bank1
  2712  02A0  01CA               	clrf	_pulse_down_times^(0+128)
  2713  02A1  01CB               	clrf	(_pulse_down_times+1)^(0+128)
  2714                           
  2715                           ;led.c: 1003: pulse_down_times[1] = 0;
  2716  02A2  01CC               	clrf	(_pulse_down_times^(0+128)+2)
  2717  02A3  01CD               	clrf	((_pulse_down_times+1)^(0+128)+2)
  2718                           
  2719                           ;led.c: 1004: pulse_down_times[2] = 0;
  2720  02A4  01CE               	clrf	(_pulse_down_times^(0+128)+4)
  2721  02A5  01CF               	clrf	((_pulse_down_times+1)^(0+128)+4)
  2722  02A6                     l8161:	
  2723                           
  2724                           ;led.c: 1008: pulse_down_time_valid_flag |= temp_var1;
  2725  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2726  02A7  1003               	clrc
  2727  02A8  0D6A               	rlf	study_mode_time_calculation@i,w
  2728  02A9  3ED0               	addlw	_pulse_study_time_counter& (0+255)
  2729  02AA  0084               	movwf	4
  2730  02AB  26A1  118A         	fcall	PL2	;call to abstracted procedure
  2731  02AD  3ECA               	addlw	_pulse_down_times& (0+255)
  2732  02AE  26E0  118A         	fcall	PL10	;call to abstracted procedure
  2733                           
  2734                           ;led.c: 1009: pulse_study_time_flag &= ~temp_var1;
  2735  02B0  0969               	comf	study_mode_time_calculation@temp_var1,w
  2736  02B1  05CB               	andwf	_pulse_study_time_flag,f
  2737  02B2                     l8165:	
  2738                           
  2739                           ;led.c: 1010: }
  2740                           ;led.c: 1011: }
  2741                           ;led.c: 1012: }
  2742                           ;led.c: 1013: if(((study_lamp_stab_state&temp_var1)==temp_var1)&&(study_lamp_stab_state!
      +                          =0x07))
  2743  02B2  087A               	movf	_study_lamp_stab_state,w
  2744  02B3  0569               	andwf	study_mode_time_calculation@temp_var1,w
  2745  02B4  0669               	xorwf	study_mode_time_calculation@temp_var1,w
  2746  02B5  1D03               	skipz
  2747  02B6  2AC2               	goto	l8177
  2748  02B7  087A               	movf	_study_lamp_stab_state,w
  2749  02B8  3A07               	xorlw	7
  2750  02B9  1903               	skipnz
  2751  02BA  2AC2               	goto	l8177
  2752                           
  2753                           ;led.c: 1014: {
  2754                           ;led.c: 1015: if(temp_var1 == 0x01)
  2755  02BB  0B69               	decfsz	study_mode_time_calculation@temp_var1,w
  2756  02BC  2AC0               	goto	l8173
  2757                           
  2758                           ;led.c: 1016: {
  2759                           ;led.c: 1017: if(restart_flag != 0) lamp_counter_valid_flag |= temp_var1;
  2760  02BD  084D               	movf	_restart_flag,w
  2761  02BE  1903               	btfsc	3,2
  2762  02BF  2AC2               	goto	l8177
  2763  02C0                     l8173:	
  2764  02C0  0869               	movf	study_mode_time_calculation@temp_var1,w
  2765  02C1  04C6               	iorwf	_lamp_counter_valid_flag,f
  2766  02C2                     l8177:	
  2767  02C2  3003               	movlw	3
  2768                           
  2769                           ;led.c: 1020: }
  2770                           ;led.c: 1021: temp_var1 <<= 1;
  2771  02C3  1003               	clrc
  2772  02C4  0DE9               	rlf	study_mode_time_calculation@temp_var1,f
  2773  02C5  0AEA               	incf	study_mode_time_calculation@i,f
  2774  02C6  026A               	subwf	study_mode_time_calculation@i,w
  2775  02C7  1803               	btfsc	3,0
  2776  02C8  0008               	return
  2777  02C9  2960               	goto	l8019
  2778  02CA                     __end_of_study_mode_time_calculation:	
  2779  02CA                     __ptext976:	
  2780 ;; =============== function ___lbdiv ends ============
  2781                           
  2782                           
  2783 ;; *************** function ___lwdiv *****************
  2784 ;; Defined at:
  2785 ;;		line 5 in file "D:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  divisor         2    3[COMMON] unsigned int 
  2788 ;;  dividend        2    5[COMMON] unsigned int 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  quotient        2    1[BANK0 ] unsigned int 
  2791 ;;  counter         1    0[BANK0 ] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  2    3[COMMON] unsigned int 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0
  2796 ;; Tracked objects:
  2797 ;;		On entry : 160/0
  2798 ;;		On exit  : 160/0
  2799 ;;		Unchanged: FFE9F/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2801 ;;      Params:         4       0       0       0
  2802 ;;      Locals:         0       3       0       0
  2803 ;;      Temps:          0       0       0       0
  2804 ;;      Totals:         4       3       0       0
  2805 ;;Total ram usage:        7 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    1
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_study_mode_time_calculation
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814  02CA                     ___lwdiv:	
  2815                           
  2816                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2817  02CA  01E0               	clrf	___lwdiv@quotient
  2818  02CB  01E1               	clrf	___lwdiv@quotient+1
  2819  02CC  0874               	movf	___lwdiv@divisor+1,w
  2820  02CD  0473               	iorwf	___lwdiv@divisor,w
  2821  02CE  1903               	skipnz
  2822  02CF  2AEF               	goto	l7711
  2823  02D0  01DF               	clrf	___lwdiv@counter
  2824  02D1                     L19:	
  2825  02D1  0ADF               	incf	___lwdiv@counter,f
  2826  02D2  1BF4               	btfsc	___lwdiv@divisor+1,7
  2827  02D3  2AD8               	goto	l7699
  2828  02D4  1003               	clrc
  2829  02D5  0DF3               	rlf	___lwdiv@divisor,f
  2830  02D6  0DF4               	rlf	___lwdiv@divisor+1,f
  2831  02D7  2AD1               	goto	L19
  2832  02D8                     l7699:	
  2833  02D8  1003               	clrc
  2834  02D9  0DE0               	rlf	___lwdiv@quotient,f
  2835  02DA  0DE1               	rlf	___lwdiv@quotient+1,f
  2836  02DB  0874               	movf	___lwdiv@divisor+1,w
  2837  02DC  0276               	subwf	___lwdiv@dividend+1,w
  2838  02DD  1D03               	skipz
  2839  02DE  2AE1               	goto	u5245
  2840  02DF  0873               	movf	___lwdiv@divisor,w
  2841  02E0  0275               	subwf	___lwdiv@dividend,w
  2842  02E1                     u5245:	
  2843  02E1  1C03               	skipc
  2844  02E2  2AEB               	goto	L20
  2845  02E3  0873               	movf	___lwdiv@divisor,w
  2846  02E4  02F5               	subwf	___lwdiv@dividend,f
  2847  02E5  0874               	movf	___lwdiv@divisor+1,w
  2848  02E6  1C03               	skipc
  2849  02E7  03F6               	decf	___lwdiv@dividend+1,f
  2850  02E8  02F6               	subwf	___lwdiv@dividend+1,f
  2851  02E9  1460               	bsf	___lwdiv@quotient,0
  2852  02EA  1003               	clrc
  2853  02EB                     L20:	
  2854  02EB  0CF4               	rrf	___lwdiv@divisor+1,f
  2855  02EC  0CF3               	rrf	___lwdiv@divisor,f
  2856  02ED  0BDF               	decfsz	___lwdiv@counter,f
  2857  02EE  2AD8               	goto	l7699
  2858  02EF                     l7711:	
  2859  02EF  0861               	movf	___lwdiv@quotient+1,w
  2860  02F0  00F4               	movwf	?___lwdiv+1
  2861  02F1  0860               	movf	___lwdiv@quotient,w
  2862  02F2  00F3               	movwf	?___lwdiv
  2863  02F3  0008               	return
  2864  02F4                     __end_of___lwdiv:	
  2865  02F4                     __ptext963:	
  2866 ;; =============== function _communication_err ends ============
  2867                           
  2868                           
  2869 ;; *************** function _usart_data_analyse *****************
  2870 ;; Defined at:
  2871 ;;		line 1188 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  down_time       2   14[BANK0 ] unsigned int 
  2876 ;;  k               1   16[BANK0 ] unsigned char 
  2877 ;;  temp_pointer    1   13[BANK0 ] unsigned char 
  2878 ;;  TableLength     1   12[BANK0 ] unsigned char 
  2879 ;;  CheckSum        1   11[BANK0 ] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;		None               void
  2882 ;; Registers used:
  2883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 60/0
  2886 ;;		On exit  : 60/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2889 ;;      Params:         0       0       0       0
  2890 ;;      Locals:         0       6       0       0
  2891 ;;      Temps:          0       2       0       0
  2892 ;;      Totals:         0       8       0       0
  2893 ;;Total ram usage:        8 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    3
  2896 ;; This function calls:
  2897 ;;		___wmul
  2898 ;;		_red_displaying_end
  2899 ;;		_gre_displaying_end
  2900 ;;		_yel_displaying_end
  2901 ;;		_yel_displaying
  2902 ;;		_gre_displaying
  2903 ;;		_red_displaying
  2904 ;;		_addr_write
  2905 ;;		_addr_read
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910  02F4                     _usart_data_analyse:	
  2911                           
  2912                           ;led.c: 1189: unsigned char k;
  2913                           ;led.c: 1190: unsigned char CheckSum;
  2914                           ;led.c: 1191: unsigned char temp_pointer;
  2915                           ;led.c: 1192: unsigned char TableLength;
  2916                           ;led.c: 1193: unsigned int down_time;
  2917                           ;led.c: 1194: if(usart_rx_read != usart_rx_write)
  2918                           
  2919                           ; Regs used in _usart_data_analyse: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2920  02F4  0854               	movf	_usart_rx_read,w
  2921  02F5  0655               	xorwf	_usart_rx_write,w
  2922  02F6  1903               	skipnz
  2923  02F7  0008               	return
  2924  02F8  301E               	movlw	30
  2925                           
  2926                           ;led.c: 1195: {
  2927                           ;led.c: 1196: TableLength = 0;
  2928  02F9  01EB               	clrf	usart_data_analyse@TableLength
  2929                           
  2930                           ;led.c: 1197: if((usart_rx_read >= 30)||(usart_rx_write >= 30))
  2931  02FA  0254               	subwf	_usart_rx_read,w
  2932  02FB  1803               	skipnc
  2933  02FC  2B01               	goto	l8189
  2934  02FD  301E               	movlw	30
  2935  02FE  0255               	subwf	_usart_rx_write,w
  2936  02FF  1C03               	skipc
  2937  0300  2B04               	goto	l8191
  2938  0301                     l8189:	
  2939                           
  2940                           ;led.c: 1198: {
  2941                           ;led.c: 1199: usart_rx_read = 0;
  2942  0301  01D4               	clrf	_usart_rx_read
  2943                           
  2944                           ;led.c: 1200: usart_rx_write = 0;
  2945  0302  01D5               	clrf	_usart_rx_write
  2946                           
  2947                           ;led.c: 1201: }
  2948  0303  2B0E               	goto	l8197
  2949  0304                     l8191:	
  2950                           
  2951                           ;led.c: 1202: else
  2952                           ;led.c: 1203: {
  2953                           ;led.c: 1204: if(usart_rx_read<usart_rx_write) TableLength = usart_rx_write - usart_rx_r
      +                          ead;
  2954  0304  0855               	movf	_usart_rx_write,w
  2955  0305  0254               	subwf	_usart_rx_read,w
  2956  0306  0854               	movf	_usart_rx_read,w
  2957  0307  1803               	skipnc
  2958  0308  2B0B               	goto	L5
  2959  0309  0255               	subwf	_usart_rx_write,w
  2960  030A  2B0D               	goto	L3
  2961  030B                     L5:	
  2962                           ;led.c: 1205: else TableLength = 30 - (usart_rx_read - usart_rx_write);
  2963                           
  2964  030B  0255               	subwf	_usart_rx_write,w
  2965  030C  3E1E               	addlw	30
  2966  030D                     L3:	
  2967  030D  00EB               	movwf	usart_data_analyse@TableLength
  2968  030E                     l8197:	
  2969                           
  2970                           ;led.c: 1206: }
  2971                           ;led.c: 1208: if(TableLength >= 5)
  2972  030E  3005               	movlw	5
  2973  030F  026B               	subwf	usart_data_analyse@TableLength,w
  2974  0310  1C03               	skipc
  2975  0311  0008               	return
  2976                           
  2977                           ;led.c: 1209: {
  2978                           ;led.c: 1210: if(usart_rx_buffer[usart_rx_read] == 0xfe)
  2979  0312  0854               	movf	_usart_rx_read,w
  2980  0313  3EA0               	addlw	_usart_rx_buffer& (0+255)
  2981  0314  0084               	movwf	4
  2982  0315  1383               	bcf	3,7	;select IRP bank1
  2983  0316  0800               	movf	0,w
  2984  0317  3AFE               	xorlw	254
  2985  0318  1D03               	skipz
  2986  0319  2C57               	goto	l8409
  2987                           
  2988                           ;led.c: 1211: {
  2989                           ;led.c: 1212: temp_pointer = usart_rx_read;
  2990  031A  0854               	movf	_usart_rx_read,w
  2991  031B  00EC               	movwf	usart_data_analyse@temp_pointer
  2992                           
  2993                           ;led.c: 1213: for(k=0;k<5;k++)
  2994  031C  01EF               	clrf	usart_data_analyse@k
  2995  031D                     l8209:	
  2996                           
  2997                           ;led.c: 1214: {
  2998                           ;led.c: 1215: usart_temp_buffer[k] = usart_rx_buffer[temp_pointer];
  2999  031D  086C               	movf	usart_data_analyse@temp_pointer,w
  3000  031E  3EA0               	addlw	_usart_rx_buffer& (0+255)
  3001  031F  0084               	movwf	4
  3002  0320  0800               	movf	0,w
  3003  0321  00E8               	movwf	??_usart_data_analyse
  3004  0322  086F               	movf	usart_data_analyse@k,w
  3005  0323  3E58               	addlw	_usart_temp_buffer& (0+255)
  3006  0324  0084               	movwf	4
  3007  0325  0868               	movf	??_usart_data_analyse,w
  3008  0326  0080               	movwf	0
  3009  0327  301E               	movlw	30
  3010                           
  3011                           ;led.c: 1216: temp_pointer++;
  3012  0328  0AEC               	incf	usart_data_analyse@temp_pointer,f
  3013                           
  3014                           ;led.c: 1217: if(temp_pointer >= 30) temp_pointer = 0;
  3015  0329  026C               	subwf	usart_data_analyse@temp_pointer,w
  3016  032A  1803               	btfsc	3,0
  3017  032B  01EC               	clrf	usart_data_analyse@temp_pointer
  3018  032C  3005               	movlw	5
  3019  032D  0AEF               	incf	usart_data_analyse@k,f
  3020  032E  026F               	subwf	usart_data_analyse@k,w
  3021  032F  1C03               	skipc
  3022  0330  2B1D               	goto	l8209
  3023                           
  3024                           ;led.c: 1218: }
  3025                           ;led.c: 1220: CheckSum = 0;
  3026  0331  01EA               	clrf	usart_data_analyse@CheckSum
  3027                           
  3028                           ;led.c: 1221: for(k=1;k<4;k++)
  3029  0332  01EF               	clrf	usart_data_analyse@k
  3030  0333  0AEF               	incf	usart_data_analyse@k,f
  3031  0334                     l8229:	
  3032                           
  3033                           ;led.c: 1222: {
  3034                           ;led.c: 1223: CheckSum ^= usart_temp_buffer[k];
  3035  0334  086F               	movf	usart_data_analyse@k,w
  3036  0335  3E58               	addlw	_usart_temp_buffer& (0+255)
  3037  0336  0084               	movwf	4
  3038  0337  0800               	movf	0,w
  3039  0338  06EA               	xorwf	usart_data_analyse@CheckSum,f
  3040  0339  3004               	movlw	4
  3041  033A  0AEF               	incf	usart_data_analyse@k,f
  3042  033B  026F               	subwf	usart_data_analyse@k,w
  3043  033C  1C03               	skipc
  3044  033D  2B34               	goto	l8229
  3045                           
  3046                           ;led.c: 1224: }
  3047                           ;led.c: 1225: CheckSum &= 0x7f;
  3048  033E  13EA               	bcf	usart_data_analyse@CheckSum,7
  3049                           
  3050                           ;led.c: 1227: if(CheckSum == usart_temp_buffer[4])
  3051  033F  085C               	movf	_usart_temp_buffer+4,w
  3052  0340  066A               	xorwf	usart_data_analyse@CheckSum,w
  3053  0341  1D03               	skipz
  3054  0342  2C57               	goto	l8409
  3055                           
  3056                           ;led.c: 1228: {
  3057                           ;led.c: 1229: if((usart_temp_buffer[2] <= 0x99)&&(usart_temp_buffer[3] <= 0x99))
  3058  0343  309A               	movlw	154
  3059  0344  025A               	subwf	_usart_temp_buffer+2,w
  3060  0345  1803               	skipnc
  3061  0346  2C15               	goto	l8367
  3062  0347  309A               	movlw	154
  3063  0348  025B               	subwf	_usart_temp_buffer+3,w
  3064  0349  1803               	skipnc
  3065  034A  2C15               	goto	l8367
  3066                           
  3067                           ;led.c: 1230: {
  3068                           ;led.c: 1231: if((usart_temp_buffer[1]&0xdc) == address_of_lamp)
  3069  034B  0859               	movf	_usart_temp_buffer+1,w
  3070  034C  39DC               	andlw	220
  3071  034D  0639               	xorwf	_address_of_lamp,w
  3072  034E  1D03               	skipz
  3073  034F  2C3C               	goto	l8389
  3074                           
  3075                           ;led.c: 1232: {
  3076                           ;led.c: 1233: communication_flag = 1;
  3077  0350  01BB               	clrf	_communication_flag
  3078  0351  0ABB               	incf	_communication_flag,f
  3079                           
  3080                           ;led.c: 1234: communication_counter = 0;
  3081  0352  01BA               	clrf	_communication_counter
  3082                           
  3083                           ;led.c: 1236: down_time = ((usart_temp_buffer[2]>>4)&0x0f)*1000;
  3084  0353  0E5A               	swapf	_usart_temp_buffer+2,w
  3085  0354  390F               	andlw	15
  3086  0355  00F3               	movwf	?___wmul
  3087  0356  30E8               	movlw	232
  3088  0357  01F4               	clrf	?___wmul+1
  3089  0358  00F5               	movwf	?___wmul+2
  3090  0359  3003               	movlw	3
  3091  035A  00F6               	movwf	?___wmul+3
  3092  035B  2569  118A         	fcall	___wmul
  3093  035D  0874               	movf	?___wmul+1,w
  3094  035E  00EE               	movwf	usart_data_analyse@down_time+1
  3095  035F  0873               	movf	?___wmul,w
  3096  0360  00ED               	movwf	usart_data_analyse@down_time
  3097                           
  3098                           ;led.c: 1237: down_time += (usart_temp_buffer[2]&0x0f)*100;
  3099  0361  085A               	movf	_usart_temp_buffer+2,w
  3100  0362  390F               	andlw	15
  3101  0363  00F3               	movwf	?___wmul
  3102  0364  3064               	movlw	100
  3103  0365  01F4               	clrf	?___wmul+1
  3104  0366  00F5               	movwf	?___wmul+2
  3105  0367  01F6               	clrf	?___wmul+3
  3106  0368  2569  118A         	fcall	___wmul
  3107  036A  26F0  118A         	fcall	PL14	;call to abstracted procedure
  3108                           
  3109                           ;led.c: 1238: down_time += ((usart_temp_buffer[3]>>4)&0x0f)*10;
  3110  036C  0E5B               	swapf	_usart_temp_buffer+3,w
  3111  036D  390F               	andlw	15
  3112  036E  00F3               	movwf	?___wmul
  3113  036F  300A               	movlw	10
  3114  0370  01F4               	clrf	?___wmul+1
  3115  0371  00F5               	movwf	?___wmul+2
  3116  0372  01F6               	clrf	?___wmul+3
  3117  0373  2569  118A         	fcall	___wmul
  3118  0375  26F0  118A         	fcall	PL14	;call to abstracted procedure
  3119                           
  3120                           ;led.c: 1239: down_time += (usart_temp_buffer[3]&0x0f);
  3121  0377  085B               	movf	_usart_temp_buffer+3,w
  3122  0378  390F               	andlw	15
  3123  0379  07ED               	addwf	usart_data_analyse@down_time,f
  3124  037A  1803               	skipnc
  3125  037B  0AEE               	incf	usart_data_analyse@down_time+1,f
  3126                           
  3127                           ;led.c: 1240: if((usart_temp_buffer[1]&0x20)!=0)
  3128  037C  1AD9               	btfsc	_usart_temp_buffer+1,5
  3129  037D  2BBA               	goto	l8315
  3130  037E  2BCE               	goto	l8317
  3131  037F                     l8259:	
  3132                           
  3133                           ;led.c: 1245: red_displaying_end();
  3134  037F  2461  118A         	fcall	_red_displaying_end
  3135                           
  3136                           ;led.c: 1246: red_displaying_flag = 0;
  3137  0381  01CC               	clrf	_red_displaying_flag
  3138                           
  3139                           ;led.c: 1247: gre_displaying_flag=0;
  3140  0382  01C5               	clrf	_gre_displaying_flag
  3141                           
  3142                           ;led.c: 1248: yel_displaying_flag=0;
  3143  0383  01D7               	clrf	_yel_displaying_flag
  3144                           
  3145                           ;led.c: 1249: display_data[0] = 0;
  3146  0384  01A6               	clrf	_display_data
  3147                           
  3148                           ;led.c: 1250: display_data[1] = 0;
  3149                           
  3150                           ;led.c: 1251: display_data[2] = 0;
  3151  0385  26FD  118A         	fcall	PL17	;call to abstracted procedure
  3152                           
  3153                           ;led.c: 1252: break;
  3154  0387  2C3C               	goto	l8389
  3155  0388                     l8273:	
  3156                           
  3157                           ;led.c: 1254: display_data[1] = down_time;
  3158  0388  086E               	movf	usart_data_analyse@down_time+1,w
  3159  0389  00A9               	movwf	_display_data+3
  3160  038A  086D               	movf	usart_data_analyse@down_time,w
  3161  038B  00A8               	movwf	_display_data+2
  3162                           
  3163                           ;led.c: 1255: if(red_displaying_flag == 1)
  3164  038C  0B4C               	decfsz	_red_displaying_flag,w
  3165  038D  2B93               	goto	l8281
  3166                           
  3167                           ;led.c: 1256: {
  3168                           ;led.c: 1257: red_displaying_flag = 0;
  3169  038E  01CC               	clrf	_red_displaying_flag
  3170                           
  3171                           ;led.c: 1258: red_displaying_end();
  3172  038F  2461  118A         	fcall	_red_displaying_end
  3173                           
  3174                           ;led.c: 1259: display_data[0] = 0;
  3175  0391  01A6               	clrf	_display_data
  3176  0392  01A7               	clrf	_display_data+1
  3177  0393                     l8281:	
  3178                           
  3179                           ;led.c: 1260: }
  3180                           ;led.c: 1261: if(gre_displaying_flag == 1)
  3181  0393  0B45               	decfsz	_gre_displaying_flag,w
  3182  0394  2C3C               	goto	l8389
  3183                           
  3184                           ;led.c: 1262: {
  3185                           ;led.c: 1263: gre_displaying_flag=0;
  3186  0395  01C5               	clrf	_gre_displaying_flag
  3187                           
  3188                           ;led.c: 1264: display_data[2] = 0;
  3189  0396  01AA               	clrf	_display_data+4
  3190  0397  01AB               	clrf	_display_data+5
  3191                           
  3192                           ;led.c: 1265: gre_displaying_end();
  3193  0398  2558  118A         	fcall	_gre_displaying_end
  3194  039A  2C3C               	goto	l8389
  3195  039B                     l8287:	
  3196                           
  3197                           ;led.c: 1269: display_data[2] = down_time;
  3198  039B  086E               	movf	usart_data_analyse@down_time+1,w
  3199  039C  00AB               	movwf	_display_data+5
  3200  039D  086D               	movf	usart_data_analyse@down_time,w
  3201  039E  00AA               	movwf	_display_data+4
  3202                           
  3203                           ;led.c: 1270: if(red_displaying_flag == 1)
  3204  039F  0B4C               	decfsz	_red_displaying_flag,w
  3205  03A0  2BA6               	goto	l8295
  3206                           
  3207                           ;led.c: 1271: {
  3208                           ;led.c: 1272: red_displaying_flag = 0;
  3209  03A1  01CC               	clrf	_red_displaying_flag
  3210                           
  3211                           ;led.c: 1273: red_displaying_end();
  3212  03A2  2461  118A         	fcall	_red_displaying_end
  3213                           
  3214                           ;led.c: 1274: display_data[0] = 0;
  3215  03A4  01A6               	clrf	_display_data
  3216  03A5  01A7               	clrf	_display_data+1
  3217  03A6                     l8295:	
  3218                           
  3219                           ;led.c: 1275: }
  3220                           ;led.c: 1276: if(yel_displaying_flag == 1)
  3221  03A6  0B57               	decfsz	_yel_displaying_flag,w
  3222  03A7  2C3C               	goto	l8389
  3223                           
  3224                           ;led.c: 1277: {
  3225                           ;led.c: 1278: yel_displaying_flag=0;
  3226  03A8  01D7               	clrf	_yel_displaying_flag
  3227                           
  3228                           ;led.c: 1279: display_data[1] = 0;
  3229  03A9  01A8               	clrf	_display_data+2
  3230  03AA  01A9               	clrf	_display_data+3
  3231                           
  3232                           ;led.c: 1280: yel_displaying_end();
  3233  03AB  25BF  118A         	fcall	_yel_displaying_end
  3234  03AD  2C3C               	goto	l8389
  3235  03AE                     l8301:	
  3236                           
  3237                           ;led.c: 1284: display_data[0] = down_time;
  3238  03AE  086E               	movf	usart_data_analyse@down_time+1,w
  3239  03AF  00A7               	movwf	_display_data+1
  3240  03B0  086D               	movf	usart_data_analyse@down_time,w
  3241  03B1  00A6               	movwf	_display_data
  3242                           
  3243                           ;led.c: 1285: if(gre_displaying_flag == 1)
  3244  03B2  0B45               	decfsz	_gre_displaying_flag,w
  3245  03B3  2BA6               	goto	l8295
  3246                           
  3247                           ;led.c: 1286: {
  3248                           ;led.c: 1287: gre_displaying_flag=0;
  3249  03B4  01C5               	clrf	_gre_displaying_flag
  3250                           
  3251                           ;led.c: 1288: display_data[2] = 0;
  3252  03B5  01AA               	clrf	_display_data+4
  3253  03B6  01AB               	clrf	_display_data+5
  3254                           
  3255                           ;led.c: 1289: gre_displaying_end();
  3256  03B7  2558  118A         	fcall	_gre_displaying_end
  3257  03B9  2BA6               	goto	l8295
  3258  03BA                     l8315:	
  3259                           ;led.c: 1290: }
  3260                           ;led.c: 1291: if(yel_displaying_flag == 1)
  3261                           
  3262                           
  3263                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3264                           ; Switch size 1, requested type "space"
  3265                           ; Number of cases is 1, Range of values is 0 to 0
  3266                           ; switch strategies available:
  3267                           ; Name         Instructions Cycles
  3268                           ; simple_byte            4     3 (average)
  3269                           ; direct_byte            9     7 (fixed)
  3270                           ; jumptable            260     6 (fixed)
  3271                           ; rangetable             5     6 (fixed)
  3272                           ; spacedrange            8     9 (fixed)
  3273                           ; locatedrange           1     3 (fixed)
  3274                           ;	Chosen strategy is simple_byte
  3275  03BA  26F7  118A         	fcall	PL16	;call to abstracted procedure
  3276  03BC  3A00               	xorlw	0	; case 0
  3277  03BD  1903               	skipnz
  3278  03BE  2BC0               	goto	l8799
  3279  03BF  2C14               	goto	l1461
  3280  03C0                     l8799:	
  3281                           
  3282                           ; Switch size 1, requested type "space"
  3283                           ; Number of cases is 4, Range of values is 0 to 3
  3284                           ; switch strategies available:
  3285                           ; Name         Instructions Cycles
  3286                           ; simple_byte           13     7 (average)
  3287                           ; direct_byte           15     7 (fixed)
  3288                           ; jumptable            260     6 (fixed)
  3289                           ; rangetable             8     6 (fixed)
  3290                           ; spacedrange           14     9 (fixed)
  3291                           ; locatedrange           4     3 (fixed)
  3292                           ;	Chosen strategy is simple_byte
  3293  03C0  0868               	movf	??_usart_data_analyse,w
  3294  03C1  3A00               	xorlw	0	; case 0
  3295  03C2  1903               	skipnz
  3296  03C3  2B7F               	goto	l8259
  3297  03C4  3A01               	xorlw	1	; case 1
  3298  03C5  1903               	skipnz
  3299  03C6  2B9B               	goto	l8287
  3300  03C7  3A03               	xorlw	3	; case 2
  3301  03C8  1903               	skipnz
  3302  03C9  2B88               	goto	l8273
  3303  03CA  3A01               	xorlw	1	; case 3
  3304  03CB  1903               	skipnz
  3305  03CC  2BAE               	goto	l8301
  3306  03CD  2C14               	goto	l1461
  3307  03CE                     l8317:	
  3308                           
  3309                           ;led.c: 1302: else
  3310                           ;led.c: 1303: {
  3311                           ;led.c: 1304: if(red_displaying_flag == 1)
  3312  03CE  0B4C               	decfsz	_red_displaying_flag,w
  3313  03CF  2BD5               	goto	l8325
  3314                           
  3315                           ;led.c: 1305: {
  3316                           ;led.c: 1306: red_displaying_flag = 0;
  3317  03D0  01CC               	clrf	_red_displaying_flag
  3318                           
  3319                           ;led.c: 1307: red_displaying_end();
  3320  03D1  2461  118A         	fcall	_red_displaying_end
  3321                           
  3322                           ;led.c: 1308: display_data[0] = 0;
  3323  03D3  01A6               	clrf	_display_data
  3324  03D4  01A7               	clrf	_display_data+1
  3325  03D5                     l8325:	
  3326                           
  3327                           ;led.c: 1309: }
  3328                           ;led.c: 1310: if(gre_displaying_flag == 1)
  3329  03D5  0B45               	decfsz	_gre_displaying_flag,w
  3330  03D6  2BDC               	goto	l8331
  3331                           
  3332                           ;led.c: 1311: {
  3333                           ;led.c: 1312: gre_displaying_flag=0;
  3334  03D7  01C5               	clrf	_gre_displaying_flag
  3335                           
  3336                           ;led.c: 1313: display_data[2] = 0;
  3337  03D8  01AA               	clrf	_display_data+4
  3338  03D9  01AB               	clrf	_display_data+5
  3339                           
  3340                           ;led.c: 1314: gre_displaying_end();
  3341  03DA  2558  118A         	fcall	_gre_displaying_end
  3342  03DC                     l8331:	
  3343                           
  3344                           ;led.c: 1315: }
  3345                           ;led.c: 1316: if(yel_displaying_flag == 1)
  3346  03DC  0B57               	decfsz	_yel_displaying_flag,w
  3347  03DD  2C00               	goto	l8365
  3348                           
  3349                           ;led.c: 1317: {
  3350                           ;led.c: 1318: yel_displaying_flag=0;
  3351  03DE  01D7               	clrf	_yel_displaying_flag
  3352                           
  3353                           ;led.c: 1319: display_data[1] = 0;
  3354  03DF  01A8               	clrf	_display_data+2
  3355  03E0  01A9               	clrf	_display_data+3
  3356                           
  3357                           ;led.c: 1320: yel_displaying_end();
  3358  03E1  25BF  118A         	fcall	_yel_displaying_end
  3359  03E3  2C00               	goto	l8365
  3360  03E4                     l8337:	
  3361                           
  3362                           ;led.c: 1325: red_displaying_end();
  3363  03E4  2461  118A         	fcall	_red_displaying_end
  3364                           
  3365                           ;led.c: 1326: break;
  3366  03E6  2C3C               	goto	l8389
  3367  03E7                     l8339:	
  3368                           
  3369                           ;led.c: 1328: yel_displaying(down_time);
  3370  03E7  086E               	movf	usart_data_analyse@down_time+1,w
  3371  03E8  00E4               	movwf	?_yel_displaying+1
  3372  03E9  086D               	movf	usart_data_analyse@down_time,w
  3373  03EA  00E3               	movwf	?_yel_displaying
  3374  03EB  2627  118A         	fcall	_yel_displaying
  3375  03ED                     l8341:	
  3376                           
  3377                           ;led.c: 1329: every_second_update_flag = 1;
  3378  03ED  01BF               	clrf	_every_second_update_flag
  3379  03EE  0ABF               	incf	_every_second_update_flag,f
  3380                           
  3381                           ;led.c: 1330: every_second_update_counter = 0;
  3382  03EF  01BD               	clrf	_every_second_update_counter
  3383                           
  3384                           ;led.c: 1331: every_second_update_delay = 0;
  3385  03F0  01BE               	clrf	_every_second_update_delay
  3386                           
  3387                           ;led.c: 1332: break;
  3388  03F1  2C3C               	goto	l8389
  3389  03F2                     l8347:	
  3390                           
  3391                           ;led.c: 1334: gre_displaying(down_time);
  3392  03F2  086E               	movf	usart_data_analyse@down_time+1,w
  3393  03F3  00E4               	movwf	?_gre_displaying+1
  3394  03F4  086D               	movf	usart_data_analyse@down_time,w
  3395  03F5  00E3               	movwf	?_gre_displaying
  3396  03F6  2664  118A         	fcall	_gre_displaying
  3397  03F8  2BED               	goto	l8341
  3398  03F9                     l8355:	
  3399                           
  3400                           ;led.c: 1340: red_displaying(down_time);
  3401  03F9  086E               	movf	usart_data_analyse@down_time+1,w
  3402  03FA  00E4               	movwf	?_red_displaying+1
  3403  03FB  086D               	movf	usart_data_analyse@down_time,w
  3404  03FC  00E3               	movwf	?_red_displaying
  3405  03FD  2582  118A         	fcall	_red_displaying
  3406  03FF  2BED               	goto	l8341
  3407  0400                     l8365:	
  3408                           
  3409                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3410                           ; Switch size 1, requested type "space"
  3411                           ; Number of cases is 1, Range of values is 0 to 0
  3412                           ; switch strategies available:
  3413                           ; Name         Instructions Cycles
  3414                           ; simple_byte            4     3 (average)
  3415                           ; direct_byte            9     7 (fixed)
  3416                           ; jumptable            260     6 (fixed)
  3417                           ; rangetable             5     6 (fixed)
  3418                           ; spacedrange            8     9 (fixed)
  3419                           ; locatedrange           1     3 (fixed)
  3420                           ;	Chosen strategy is simple_byte
  3421  0400  26F7  118A         	fcall	PL16	;call to abstracted procedure
  3422  0402  3A00               	xorlw	0	; case 0
  3423  0403  1903               	skipnz
  3424  0404  2C06               	goto	l8801
  3425  0405  2C14               	goto	l1461
  3426  0406                     l8801:	
  3427                           
  3428                           ; Switch size 1, requested type "space"
  3429                           ; Number of cases is 4, Range of values is 0 to 3
  3430                           ; switch strategies available:
  3431                           ; Name         Instructions Cycles
  3432                           ; simple_byte           13     7 (average)
  3433                           ; direct_byte           15     7 (fixed)
  3434                           ; jumptable            260     6 (fixed)
  3435                           ; rangetable             8     6 (fixed)
  3436                           ; spacedrange           14     9 (fixed)
  3437                           ; locatedrange           4     3 (fixed)
  3438                           ;	Chosen strategy is simple_byte
  3439  0406  0868               	movf	??_usart_data_analyse,w
  3440  0407  3A00               	xorlw	0	; case 0
  3441  0408  1903               	skipnz
  3442  0409  2BE4               	goto	l8337
  3443  040A  3A01               	xorlw	1	; case 1
  3444  040B  1903               	skipnz
  3445  040C  2BF2               	goto	l8347
  3446  040D  3A03               	xorlw	3	; case 2
  3447  040E  1903               	skipnz
  3448  040F  2BE7               	goto	l8339
  3449  0410  3A01               	xorlw	1	; case 3
  3450  0411  1903               	skipnz
  3451  0412  2BF9               	goto	l8355
  3452  0413  2C14               	goto	l1461
  3453  0414                     l1461:	
  3454                           
  3455                           ;led.c: 1348: }
  3456                           ;led.c: 1349: }
  3457                           ;led.c: 1350: }
  3458  0414  2C3C               	goto	l8389
  3459  0415                     l8367:	
  3460                           
  3461                           ;led.c: 1351: else
  3462                           ;led.c: 1352: {
  3463                           ;led.c: 1353: if((usart_temp_buffer[2] == 0xaa)&&(usart_temp_buffer[3] == 0xbb))
  3464  0415  085A               	movf	_usart_temp_buffer+2,w
  3465  0416  3AAA               	xorlw	170
  3466  0417  1D03               	skipz
  3467  0418  2C27               	goto	l8377
  3468  0419  085B               	movf	_usart_temp_buffer+3,w
  3469  041A  3ABB               	xorlw	187
  3470  041B  1D03               	skipz
  3471  041C  2C27               	goto	l8377
  3472                           
  3473                           ;led.c: 1354: {
  3474                           ;led.c: 1355: addr_write(usart_temp_buffer[1]&0xdc);
  3475  041D  0859               	movf	_usart_temp_buffer+1,w
  3476  041E  39DC               	andlw	220
  3477  041F  25D0  118A         	fcall	_addr_write
  3478                           
  3479                           ;led.c: 1356: address_of_lamp = usart_temp_buffer[1]&0xdc;
  3480  0421  1283               	bcf	3,5	;RP0=0, select bank0
  3481  0422  1303               	bcf	3,6	;RP1=0, select bank0
  3482  0423  0859               	movf	_usart_temp_buffer+1,w
  3483  0424  00B9               	movwf	_address_of_lamp
  3484  0425  30DC               	movlw	220
  3485  0426  05B9               	andwf	_address_of_lamp,f
  3486  0427                     l8377:	
  3487                           
  3488                           ;led.c: 1357: }
  3489                           ;led.c: 1358: if((usart_temp_buffer[2] == 0xcc)&&(usart_temp_buffer[3] == 0xdd)&&(usart_
      +                          temp_buffer[1] == 0x00))
  3490  0427  085A               	movf	_usart_temp_buffer+2,w
  3491  0428  3ACC               	xorlw	204
  3492  0429  1D03               	skipz
  3493  042A  2C3C               	goto	l8389
  3494  042B  085B               	movf	_usart_temp_buffer+3,w
  3495  042C  3ADD               	xorlw	221
  3496  042D  1D03               	skipz
  3497  042E  2C3C               	goto	l8389
  3498  042F  08D9               	movf	_usart_temp_buffer+1,f
  3499  0430  1D03               	skipz
  3500  0431  2C3C               	goto	l8389
  3501                           
  3502                           ;led.c: 1359: {
  3503                           ;led.c: 1360: address_of_lamp = addr_read();
  3504  0432  261B  118A         	fcall	_addr_read
  3505  0434  1303               	bcf	3,6	;RP1=0, select bank0
  3506  0435  00B9               	movwf	_address_of_lamp
  3507                           
  3508                           ;led.c: 1361: communication_flag = 1;
  3509  0436  01BB               	clrf	_communication_flag
  3510  0437  0ABB               	incf	_communication_flag,f
  3511                           
  3512                           ;led.c: 1362: red_displaying(address_of_lamp);
  3513  0438  00E3               	movwf	?_red_displaying
  3514  0439  01E4               	clrf	?_red_displaying+1
  3515  043A  2582  118A         	fcall	_red_displaying
  3516  043C                     l8389:	
  3517                           
  3518                           ;led.c: 1363: }
  3519                           ;led.c: 1364: }
  3520                           ;led.c: 1366: if(usart_rx_read < temp_pointer) TableLength = temp_pointer - usart_rx_rea
      +                          d;
  3521  043C  086C               	movf	usart_data_analyse@temp_pointer,w
  3522  043D  0254               	subwf	_usart_rx_read,w
  3523  043E  0854               	movf	_usart_rx_read,w
  3524  043F  1803               	skipnc
  3525  0440  2C43               	goto	L6
  3526  0441  026C               	subwf	usart_data_analyse@temp_pointer,w
  3527  0442  2C45               	goto	L4
  3528  0443                     L6:	
  3529                           ;led.c: 1367: else TableLength = 30 - (usart_rx_read - temp_pointer);
  3530                           
  3531  0443  026C               	subwf	usart_data_analyse@temp_pointer,w
  3532  0444  3E1E               	addlw	30
  3533  0445                     L4:	
  3534  0445  00EB               	movwf	usart_data_analyse@TableLength
  3535                           
  3536                           ;led.c: 1368: for(k=0;k<TableLength;k++)
  3537  0446  01EF               	clrf	usart_data_analyse@k
  3538  0447                     l8407:	
  3539  0447  086B               	movf	usart_data_analyse@TableLength,w
  3540  0448  026F               	subwf	usart_data_analyse@k,w
  3541  0449  1803               	btfsc	3,0
  3542  044A  0008               	return
  3543                           
  3544                           ;led.c: 1369: {
  3545                           ;led.c: 1370: usart_rx_buffer[usart_rx_read]=0;
  3546  044B  0854               	movf	_usart_rx_read,w
  3547  044C  3EA0               	addlw	_usart_rx_buffer& (0+255)
  3548  044D  0084               	movwf	4
  3549  044E  301E               	movlw	30
  3550  044F  1383               	bcf	3,7	;select IRP bank1
  3551  0450  0180               	clrf	0
  3552                           
  3553                           ;led.c: 1371: usart_rx_read++;
  3554  0451  0AD4               	incf	_usart_rx_read,f
  3555                           
  3556                           ;led.c: 1372: if(usart_rx_read >= 30) usart_rx_read = 0;
  3557  0452  0254               	subwf	_usart_rx_read,w
  3558  0453  1803               	btfsc	3,0
  3559  0454  01D4               	clrf	_usart_rx_read
  3560  0455  0AEF               	incf	usart_data_analyse@k,f
  3561  0456  2C47               	goto	l8407
  3562  0457                     l8409:	
  3563                           
  3564                           ;led.c: 1375: else
  3565                           ;led.c: 1376: {
  3566                           ;led.c: 1377: usart_rx_buffer[usart_rx_read]=0;
  3567  0457  0854               	movf	_usart_rx_read,w
  3568  0458  3EA0               	addlw	_usart_rx_buffer& (0+255)
  3569  0459  0084               	movwf	4
  3570  045A  301E               	movlw	30
  3571  045B  0180               	clrf	0
  3572                           
  3573                           ;led.c: 1378: usart_rx_read++;
  3574  045C  0AD4               	incf	_usart_rx_read,f
  3575                           
  3576                           ;led.c: 1379: if(usart_rx_read >= 30) usart_rx_read = 0;
  3577  045D  0254               	subwf	_usart_rx_read,w
  3578  045E  1803               	btfsc	3,0
  3579  045F  01D4               	clrf	_usart_rx_read
  3580  0460  0008               	return
  3581  0461                     __end_of_usart_data_analyse:	
  3582                           ;led.c: 1386: if(usart_rx_read >= 30) usart_rx_read = 0;
  3583                           
  3584                           ;led.c: 1385: usart_rx_read++;
  3585                           
  3586                           ;led.c: 1382: else
  3587                           ;led.c: 1383: {
  3588                           ;led.c: 1384: usart_rx_buffer[usart_rx_read]=0;
  3589                           
  3590  0461                     __ptext971:	
  3591 ;; =============== function _yel_displaying ends ============
  3592                           
  3593                           
  3594 ;; *************** function _red_displaying_end *****************
  3595 ;; Defined at:
  3596 ;;		line 459 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  k               1    7[COMMON] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;		None               void
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0, pclath, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 60/0
  3607 ;;		On exit  : 60/0
  3608 ;;		Unchanged: FFF9F/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3610 ;;      Params:         0       0       0       0
  3611 ;;      Locals:         1       0       0       0
  3612 ;;      Temps:          0       0       0       0
  3613 ;;      Totals:         1       0       0       0
  3614 ;;Total ram usage:        1 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:    2
  3617 ;; This function calls:
  3618 ;;		_red_displaydrv
  3619 ;; This function is called by:
  3620 ;;		_syn_wink_manage
  3621 ;;		_down_time_display
  3622 ;;		_study_mode_time_calculation
  3623 ;;		_usart_data_analyse
  3624 ;;		_communication_err
  3625 ;;		_main
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628  0461                     _red_displaying_end:	
  3629  0461                     l7797:	
  3630                           ; Regs used in _red_displaying_end: [wreg+status,2+status,0+pclath+cstack]
  3631                           
  3632                           
  3633                           ;led.c: 460: unsigned char k;
  3634                           ;led.c: 461: red_displaydrv(0x0000);
  3635  0461  01F3               	clrf	?_red_displaydrv
  3636  0462  01F4               	clrf	?_red_displaydrv+1
  3637  0463  24DD  118A         	fcall	_red_displaydrv
  3638                           
  3639                           ;led.c: 462: red_displaydrv(0x0000);
  3640  0465  01F3               	clrf	?_red_displaydrv
  3641  0466  01F4               	clrf	?_red_displaydrv+1
  3642  0467  24DD  118A         	fcall	_red_displaydrv
  3643                           
  3644                           ;led.c: 463: RB5=1;
  3645  0469  1686               	bsf	6,5
  3646                           
  3647                           ;led.c: 464: for(k=0;k<12;k++);
  3648  046A  01F7               	clrf	red_displaying_end@k
  3649  046B                     l7807:	
  3650  046B  300C               	movlw	12
  3651  046C  0AF7               	incf	red_displaying_end@k,f
  3652  046D  0277               	subwf	red_displaying_end@k,w
  3653  046E  1C03               	skipc
  3654  046F  2C6B               	goto	l7807
  3655                           
  3656                           ;led.c: 465: RB5=0;
  3657  0470  1286               	bcf	6,5
  3658  0471  0008               	return
  3659  0472                     __end_of_red_displaying_end:	
  3660  0472                     __ptext966:	
  3661 ;; =============== function _syn_wink_manage ends ============
  3662                           
  3663                           
  3664 ;; *************** function _g_segment_displaying *****************
  3665 ;; Defined at:
  3666 ;;		line 532 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  number          1    wreg     unsigned char 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  number          1    4[BANK0 ] unsigned char 
  3671 ;;  k               1    5[BANK0 ] unsigned char 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;		None               void
  3674 ;; Registers used:
  3675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 60/0
  3678 ;;		On exit  : 60/0
  3679 ;;		Unchanged: FFF9F/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3681 ;;      Params:         0       0       0       0
  3682 ;;      Locals:         0       2       0       0
  3683 ;;      Temps:          0       0       0       0
  3684 ;;      Totals:         0       2       0       0
  3685 ;;Total ram usage:        2 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    3
  3688 ;; This function calls:
  3689 ;;		_red_displaydrv
  3690 ;;		_yel_displaydrv
  3691 ;;		_gre_displaydrv
  3692 ;;		_gre_displaying_end
  3693 ;; This function is called by:
  3694 ;;		_G_Segment_Wink
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697  0472                     _g_segment_displaying:	
  3698                           
  3699                           ; Regs used in _g_segment_displaying: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3700                           ;g_segment_displaying@number stored from wreg
  3701  0472  00E3               	movwf	g_segment_displaying@number
  3702                           
  3703                           ; Switch size 1, requested type "space"
  3704                           ; Number of cases is 3, Range of values is 0 to 2
  3705                           ; switch strategies available:
  3706                           ; Name         Instructions Cycles
  3707                           ; simple_byte           10     6 (average)
  3708                           ; direct_byte           13     7 (fixed)
  3709                           ; jumptable            260     6 (fixed)
  3710                           ; rangetable             7     6 (fixed)
  3711                           ; spacedrange           12     9 (fixed)
  3712                           ; locatedrange           3     3 (fixed)
  3713                           ;	Chosen strategy is simple_byte
  3714                           
  3715                           ;led.c: 559: break;
  3716                           
  3717                           ;led.c: 533: unsigned char k;
  3718                           ;led.c: 534: switch(number)
  3719  0473  3A00               	xorlw	0	; case 0
  3720  0474  1903               	skipnz
  3721  0475  2C7E               	goto	l7901
  3722  0476  3A01               	xorlw	1	; case 1
  3723  0477  1903               	skipnz
  3724  0478  2C9E               	goto	l7915
  3725  0479  3A03               	xorlw	3	; case 2
  3726  047A  1903               	skipnz
  3727  047B  2CBD               	goto	l7929
  3728  047C  2CDC               	goto	l7943
  3729  047D  0008               	return
  3730  047E                     l7901:	
  3731                           
  3732                           ;led.c: 537: red_displaydrv(REDWORDS[11]);
  3733  047E  302F               	movlw	(_REDWORDS-__stringbase+22)
  3734  047F  0084               	movwf	4
  3735  0480  158A  2000  118A   	fcall	stringdir
  3736  0483  00F3               	movwf	?_red_displaydrv
  3737  0484  158A  2000  118A   	fcall	stringdir
  3738  0487  00F4               	movwf	?_red_displaydrv+1
  3739  0488  24DD               	fcall	_red_displaydrv
  3740                           
  3741                           ;led.c: 538: red_displaydrv(REDWORDS[11]);
  3742  0489  302F               	movlw	(_REDWORDS-__stringbase+22)
  3743  048A  0084               	movwf	4
  3744  048B  158A  2000  118A   	fcall	stringdir
  3745  048E  00F3               	movwf	?_red_displaydrv
  3746  048F  158A  2000  118A   	fcall	stringdir
  3747  0492  00F4               	movwf	?_red_displaydrv+1
  3748  0493  24DD  118A         	fcall	_red_displaydrv
  3749                           
  3750                           ;led.c: 539: RB5=1;
  3751  0495  1686               	bsf	6,5
  3752                           
  3753                           ;led.c: 540: for(k=0;k<12;k++);
  3754  0496  01E4               	clrf	g_segment_displaying@k
  3755  0497                     l7911:	
  3756  0497  300C               	movlw	12
  3757  0498  0AE4               	incf	g_segment_displaying@k,f
  3758  0499  0264               	subwf	g_segment_displaying@k,w
  3759  049A  1C03               	skipc
  3760  049B  2C97               	goto	l7911
  3761  049C                     l1245:	
  3762                           
  3763                           ;led.c: 541: RB5=0;
  3764  049C  1286               	bcf	6,5
  3765                           
  3766                           ;led.c: 542: break;
  3767  049D  0008               	return
  3768  049E                     l7915:	
  3769                           
  3770                           ;led.c: 544: yel_displaydrv(YELWORDS[11]);
  3771  049E  3047               	movlw	(_YELWORDS-__stringbase+22)
  3772  049F  0084               	movwf	4
  3773  04A0  158A  2000  118A   	fcall	stringdir
  3774  04A3  00F3               	movwf	?_yel_displaydrv
  3775  04A4  158A  2000  118A   	fcall	stringdir
  3776  04A7  00F4               	movwf	?_yel_displaydrv+1
  3777  04A8  2506               	fcall	_yel_displaydrv
  3778                           
  3779                           ;led.c: 545: yel_displaydrv(YELWORDS[11]);
  3780  04A9  3047               	movlw	(_YELWORDS-__stringbase+22)
  3781  04AA  0084               	movwf	4
  3782  04AB  158A  2000  118A   	fcall	stringdir
  3783  04AE  00F3               	movwf	?_yel_displaydrv
  3784  04AF  158A  2000  118A   	fcall	stringdir
  3785  04B2  00F4               	movwf	?_yel_displaydrv+1
  3786  04B3  2506  118A         	fcall	_yel_displaydrv
  3787                           
  3788                           ;led.c: 546: RB5=1;
  3789  04B5  1686               	bsf	6,5
  3790                           
  3791                           ;led.c: 547: for(k=0;k<12;k++);
  3792  04B6  01E4               	clrf	g_segment_displaying@k
  3793  04B7                     l7925:	
  3794  04B7  300C               	movlw	12
  3795  04B8  0AE4               	incf	g_segment_displaying@k,f
  3796  04B9  0264               	subwf	g_segment_displaying@k,w
  3797  04BA  1803               	btfsc	3,0
  3798  04BB  2C9C               	goto	l1245
  3799  04BC  2CB7               	goto	l7925
  3800  04BD                     l7929:	
  3801                           
  3802                           ;led.c: 551: gre_displaydrv(GREWORDS[11]);
  3803  04BD  3017               	movlw	(_GREWORDS-__stringbase+22)
  3804  04BE  0084               	movwf	4
  3805  04BF  158A  2000  118A   	fcall	stringdir
  3806  04C2  00F3               	movwf	?_gre_displaydrv
  3807  04C3  158A  2000  118A   	fcall	stringdir
  3808  04C6  00F4               	movwf	?_gre_displaydrv+1
  3809  04C7  252F               	fcall	_gre_displaydrv
  3810                           
  3811                           ;led.c: 552: gre_displaydrv(GREWORDS[11]);
  3812  04C8  3017               	movlw	(_GREWORDS-__stringbase+22)
  3813  04C9  0084               	movwf	4
  3814  04CA  158A  2000  118A   	fcall	stringdir
  3815  04CD  00F3               	movwf	?_gre_displaydrv
  3816  04CE  158A  2000  118A   	fcall	stringdir
  3817  04D1  00F4               	movwf	?_gre_displaydrv+1
  3818  04D2  252F  118A         	fcall	_gre_displaydrv
  3819                           
  3820                           ;led.c: 553: RB5=1;
  3821  04D4  1686               	bsf	6,5
  3822                           
  3823                           ;led.c: 554: for(k=0;k<12;k++);
  3824  04D5  01E4               	clrf	g_segment_displaying@k
  3825  04D6                     l7939:	
  3826  04D6  300C               	movlw	12
  3827  04D7  0AE4               	incf	g_segment_displaying@k,f
  3828  04D8  0264               	subwf	g_segment_displaying@k,w
  3829  04D9  1803               	btfsc	3,0
  3830  04DA  2C9C               	goto	l1245
  3831  04DB  2CD6               	goto	l7939
  3832  04DC                     l7943:	
  3833                           
  3834                           ;led.c: 558: gre_displaying_end();
  3835  04DC  2D58               	ljmp	l7885
  3836  04DD                     __end_of_g_segment_displaying:	
  3837  04DD                     __ptext984:	
  3838 ;; =============== function _yel_displaydrv ends ============
  3839                           
  3840                           
  3841 ;; *************** function _red_displaydrv *****************
  3842 ;; Defined at:
  3843 ;;		line 370 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  drvword         2    3[COMMON] unsigned int 
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;  tempdata        2    0[BANK0 ] unsigned int 
  3848 ;;  k               1    3[BANK0 ] unsigned char 
  3849 ;;  i               1    2[BANK0 ] unsigned char 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;		None               void
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0
  3854 ;; Tracked objects:
  3855 ;;		On entry : 60/0
  3856 ;;		On exit  : 60/0
  3857 ;;		Unchanged: FFF9F/0
  3858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3859 ;;      Params:         2       0       0       0
  3860 ;;      Locals:         0       4       0       0
  3861 ;;      Temps:          2       0       0       0
  3862 ;;      Totals:         4       4       0       0
  3863 ;;Total ram usage:        8 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; Hardware stack levels required when called:    1
  3866 ;; This function calls:
  3867 ;;		Nothing
  3868 ;; This function is called by:
  3869 ;;		_red_displaying
  3870 ;;		_red_displaying_end
  3871 ;;		_g_segment_displaying
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874  04DD                     _red_displaydrv:	
  3875                           
  3876                           ;led.c: 371: unsigned int tempdata;
  3877                           ;led.c: 372: unsigned char i;
  3878                           ;led.c: 373: unsigned char k;
  3879                           ;led.c: 374: tempdata = 0x8000;
  3880                           
  3881                           ; Regs used in _red_displaydrv: [wreg+status,2+status,0]
  3882  04DD  3080               	movlw	128
  3883  04DE  01DF               	clrf	red_displaydrv@tempdata
  3884  04DF  00E0               	movwf	red_displaydrv@tempdata+1
  3885                           
  3886                           ;led.c: 375: RB1=0;
  3887  04E0  1086               	bcf	6,1
  3888                           
  3889                           ;led.c: 376: RB2=0;
  3890  04E1  1106               	bcf	6,2
  3891                           
  3892                           ;led.c: 377: RB5=0;
  3893  04E2  1286               	bcf	6,5
  3894                           
  3895                           ;led.c: 378: RB3=0;
  3896  04E3  1186               	bcf	6,3
  3897                           
  3898                           ;led.c: 380: for(i=0;i<16;i++)
  3899  04E4  01E1               	clrf	red_displaydrv@i
  3900  04E5                     l7399:	
  3901                           
  3902                           ;led.c: 381: {
  3903                           ;led.c: 382: if((drvword & tempdata)==0) RB0=0;
  3904  04E5  085F               	movf	red_displaydrv@tempdata,w
  3905  04E6  0573               	andwf	red_displaydrv@drvword,w
  3906  04E7  00F5               	movwf	??_red_displaydrv
  3907  04E8  0860               	movf	red_displaydrv@tempdata+1,w
  3908  04E9  0574               	andwf	red_displaydrv@drvword+1,w
  3909  04EA  00F6               	movwf	??_red_displaydrv+1
  3910  04EB  0475               	iorwf	??_red_displaydrv,w
  3911  04EC  1D03               	skipz
  3912  04ED  2CF0               	goto	l1172
  3913  04EE  1006               	bcf	6,0
  3914  04EF  2CF1               	goto	l7403
  3915  04F0                     l1172:	
  3916                           
  3917                           ;led.c: 383: else RB0=1;
  3918  04F0  1406               	bsf	6,0
  3919  04F1                     l7403:	
  3920                           
  3921                           ;led.c: 384: for(k=0;k<1;k++);
  3922  04F1  01E2               	clrf	red_displaydrv@k
  3923  04F2                     l7409:	
  3924  04F2  0AE2               	incf	red_displaydrv@k,f
  3925  04F3  1903               	btfsc	3,2
  3926  04F4  2CF2               	goto	l7409
  3927                           
  3928                           ;led.c: 385: RB3=1;
  3929  04F5  1586               	bsf	6,3
  3930                           
  3931                           ;led.c: 386: for(k=0;k<5;k++);
  3932  04F6  01E2               	clrf	red_displaydrv@k
  3933  04F7                     l7419:	
  3934  04F7  3005               	movlw	5
  3935  04F8  0AE2               	incf	red_displaydrv@k,f
  3936  04F9  0262               	subwf	red_displaydrv@k,w
  3937  04FA  1C03               	skipc
  3938  04FB  2CF7               	goto	l7419
  3939  04FC  3010               	movlw	16
  3940                           
  3941                           ;led.c: 387: RB3=0;
  3942  04FD  1186               	bcf	6,3
  3943                           
  3944                           ;led.c: 388: tempdata >>= 1;
  3945  04FE  1003               	clrc
  3946  04FF  0CE0               	rrf	red_displaydrv@tempdata+1,f
  3947  0500  0CDF               	rrf	red_displaydrv@tempdata,f
  3948  0501  0AE1               	incf	red_displaydrv@i,f
  3949  0502  0261               	subwf	red_displaydrv@i,w
  3950  0503  1803               	btfsc	3,0
  3951  0504  0008               	return
  3952  0505  2CE5               	goto	l7399
  3953  0506                     __end_of_red_displaydrv:	
  3954  0506                     __ptext983:	
  3955 ;; =============== function _gre_displaydrv ends ============
  3956                           
  3957                           
  3958 ;; *************** function _yel_displaydrv *****************
  3959 ;; Defined at:
  3960 ;;		line 393 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  drvword         2    3[COMMON] unsigned int 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  tempdata        2    0[BANK0 ] unsigned int 
  3965 ;;  k               1    3[BANK0 ] unsigned char 
  3966 ;;  i               1    2[BANK0 ] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;		None               void
  3969 ;; Registers used:
  3970 ;;		wreg, status,2, status,0
  3971 ;; Tracked objects:
  3972 ;;		On entry : 60/0
  3973 ;;		On exit  : 60/0
  3974 ;;		Unchanged: FFF9F/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3976 ;;      Params:         2       0       0       0
  3977 ;;      Locals:         0       4       0       0
  3978 ;;      Temps:          2       0       0       0
  3979 ;;      Totals:         4       4       0       0
  3980 ;;Total ram usage:        8 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    1
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_yel_displaying
  3987 ;;		_yel_displaying_end
  3988 ;;		_g_segment_displaying
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991  0506                     _yel_displaydrv:	
  3992                           
  3993                           ;led.c: 394: unsigned int tempdata;
  3994                           ;led.c: 395: unsigned char i;
  3995                           ;led.c: 396: unsigned char k;
  3996                           ;led.c: 397: tempdata = 0x8000;
  3997                           
  3998                           ; Regs used in _yel_displaydrv: [wreg+status,2+status,0]
  3999  0506  3080               	movlw	128
  4000  0507  01DF               	clrf	yel_displaydrv@tempdata
  4001  0508  00E0               	movwf	yel_displaydrv@tempdata+1
  4002                           
  4003                           ;led.c: 398: RB0=0;
  4004  0509  1006               	bcf	6,0
  4005                           
  4006                           ;led.c: 399: RB2=0;
  4007  050A  1106               	bcf	6,2
  4008                           
  4009                           ;led.c: 400: RB5=0;
  4010  050B  1286               	bcf	6,5
  4011                           
  4012                           ;led.c: 401: RB3=0;
  4013  050C  1186               	bcf	6,3
  4014                           
  4015                           ;led.c: 402: for(i=0;i<16;i++)
  4016  050D  01E1               	clrf	yel_displaydrv@i
  4017  050E                     l7443:	
  4018                           
  4019                           ;led.c: 403: {
  4020                           ;led.c: 404: if((drvword & tempdata)==0) RB1=0;
  4021  050E  085F               	movf	yel_displaydrv@tempdata,w
  4022  050F  0573               	andwf	yel_displaydrv@drvword,w
  4023  0510  00F5               	movwf	??_yel_displaydrv
  4024  0511  0860               	movf	yel_displaydrv@tempdata+1,w
  4025  0512  0574               	andwf	yel_displaydrv@drvword+1,w
  4026  0513  00F6               	movwf	??_yel_displaydrv+1
  4027  0514  0475               	iorwf	??_yel_displaydrv,w
  4028  0515  1D03               	skipz
  4029  0516  2D19               	goto	l1183
  4030  0517  1086               	bcf	6,1
  4031  0518  2D1A               	goto	l7447
  4032  0519                     l1183:	
  4033                           
  4034                           ;led.c: 405: else RB1=1;
  4035  0519  1486               	bsf	6,1
  4036  051A                     l7447:	
  4037                           
  4038                           ;led.c: 406: for(k=0;k<1;k++);
  4039  051A  01E2               	clrf	yel_displaydrv@k
  4040  051B                     l7453:	
  4041  051B  0AE2               	incf	yel_displaydrv@k,f
  4042  051C  1903               	btfsc	3,2
  4043  051D  2D1B               	goto	l7453
  4044                           
  4045                           ;led.c: 407: RB3=1;
  4046  051E  1586               	bsf	6,3
  4047                           
  4048                           ;led.c: 408: for(k=0;k<5;k++);
  4049  051F  01E2               	clrf	yel_displaydrv@k
  4050  0520                     l7463:	
  4051  0520  3005               	movlw	5
  4052  0521  0AE2               	incf	yel_displaydrv@k,f
  4053  0522  0262               	subwf	yel_displaydrv@k,w
  4054  0523  1C03               	skipc
  4055  0524  2D20               	goto	l7463
  4056  0525  3010               	movlw	16
  4057                           
  4058                           ;led.c: 409: RB3=0;
  4059  0526  1186               	bcf	6,3
  4060                           
  4061                           ;led.c: 410: tempdata >>= 1;
  4062  0527  1003               	clrc
  4063  0528  0CE0               	rrf	yel_displaydrv@tempdata+1,f
  4064  0529  0CDF               	rrf	yel_displaydrv@tempdata,f
  4065  052A  0AE1               	incf	yel_displaydrv@i,f
  4066  052B  0261               	subwf	yel_displaydrv@i,w
  4067  052C  1803               	btfsc	3,0
  4068  052D  0008               	return
  4069  052E  2D0E               	goto	l7443
  4070  052F                     __end_of_yel_displaydrv:	
  4071  052F                     __ptext982:	
  4072 ;; =============== function _filterAC_DC ends ============
  4073                           
  4074                           
  4075 ;; *************** function _gre_displaydrv *****************
  4076 ;; Defined at:
  4077 ;;		line 415 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  drvword         2    3[COMMON] unsigned int 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  tempdata        2    0[BANK0 ] unsigned int 
  4082 ;;  k               1    3[BANK0 ] unsigned char 
  4083 ;;  i               1    2[BANK0 ] unsigned char 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;		None               void
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0
  4088 ;; Tracked objects:
  4089 ;;		On entry : 60/0
  4090 ;;		On exit  : 60/0
  4091 ;;		Unchanged: FFF9F/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4093 ;;      Params:         2       0       0       0
  4094 ;;      Locals:         0       4       0       0
  4095 ;;      Temps:          2       0       0       0
  4096 ;;      Totals:         4       4       0       0
  4097 ;;Total ram usage:        8 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    1
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_gre_displaying
  4104 ;;		_gre_displaying_end
  4105 ;;		_g_segment_displaying
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108  052F                     _gre_displaydrv:	
  4109                           
  4110                           ;led.c: 416: unsigned int tempdata;
  4111                           ;led.c: 417: unsigned char i;
  4112                           ;led.c: 418: unsigned char k;
  4113                           ;led.c: 419: tempdata = 0x8000;
  4114                           
  4115                           ; Regs used in _gre_displaydrv: [wreg+status,2+status,0]
  4116  052F  3080               	movlw	128
  4117  0530  01DF               	clrf	gre_displaydrv@tempdata
  4118  0531  00E0               	movwf	gre_displaydrv@tempdata+1
  4119                           
  4120                           ;led.c: 420: RB0=0;
  4121  0532  1006               	bcf	6,0
  4122                           
  4123                           ;led.c: 421: RB1=0;
  4124  0533  1086               	bcf	6,1
  4125                           
  4126                           ;led.c: 422: RB5=0;
  4127  0534  1286               	bcf	6,5
  4128                           
  4129                           ;led.c: 423: RB3=0;
  4130  0535  1186               	bcf	6,3
  4131                           
  4132                           ;led.c: 424: for(i=0;i<16;i++)
  4133  0536  01E1               	clrf	gre_displaydrv@i
  4134  0537                     l7487:	
  4135                           
  4136                           ;led.c: 425: {
  4137                           ;led.c: 426: if((drvword & tempdata)==0) RB2=0;
  4138  0537  085F               	movf	gre_displaydrv@tempdata,w
  4139  0538  0573               	andwf	gre_displaydrv@drvword,w
  4140  0539  00F5               	movwf	??_gre_displaydrv
  4141  053A  0860               	movf	gre_displaydrv@tempdata+1,w
  4142  053B  0574               	andwf	gre_displaydrv@drvword+1,w
  4143  053C  00F6               	movwf	??_gre_displaydrv+1
  4144  053D  0475               	iorwf	??_gre_displaydrv,w
  4145  053E  1D03               	skipz
  4146  053F  2D42               	goto	l1194
  4147  0540  1106               	bcf	6,2
  4148  0541  2D43               	goto	l7491
  4149  0542                     l1194:	
  4150                           
  4151                           ;led.c: 427: else RB2=1;
  4152  0542  1506               	bsf	6,2
  4153  0543                     l7491:	
  4154                           
  4155                           ;led.c: 428: for(k=0;k<1;k++);
  4156  0543  01E2               	clrf	gre_displaydrv@k
  4157  0544                     l7497:	
  4158  0544  0AE2               	incf	gre_displaydrv@k,f
  4159  0545  1903               	btfsc	3,2
  4160  0546  2D44               	goto	l7497
  4161                           
  4162                           ;led.c: 429: RB3=1;
  4163  0547  1586               	bsf	6,3
  4164                           
  4165                           ;led.c: 430: for(k=0;k<5;k++);
  4166  0548  01E2               	clrf	gre_displaydrv@k
  4167  0549                     l7507:	
  4168  0549  3005               	movlw	5
  4169  054A  0AE2               	incf	gre_displaydrv@k,f
  4170  054B  0262               	subwf	gre_displaydrv@k,w
  4171  054C  1C03               	skipc
  4172  054D  2D49               	goto	l7507
  4173  054E  3010               	movlw	16
  4174                           
  4175                           ;led.c: 431: RB3=0;
  4176  054F  1186               	bcf	6,3
  4177                           
  4178                           ;led.c: 432: tempdata >>= 1;
  4179  0550  1003               	clrc
  4180  0551  0CE0               	rrf	gre_displaydrv@tempdata+1,f
  4181  0552  0CDF               	rrf	gre_displaydrv@tempdata,f
  4182  0553  0AE1               	incf	gre_displaydrv@i,f
  4183  0554  0261               	subwf	gre_displaydrv@i,w
  4184  0555  1803               	btfsc	3,0
  4185  0556  0008               	return
  4186  0557  2D37               	goto	l7487
  4187  0558                     __end_of_gre_displaydrv:	
  4188  0558                     __ptext967:	
  4189 ;; =============== function _g_segment_displaying ends ============
  4190                           
  4191                           
  4192 ;; *************** function _gre_displaying_end *****************
  4193 ;; Defined at:
  4194 ;;		line 522 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;		None
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  k               1    7[COMMON] unsigned char 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;		None               void
  4201 ;; Registers used:
  4202 ;;		wreg, status,2, status,0, pclath, cstack
  4203 ;; Tracked objects:
  4204 ;;		On entry : 60/0
  4205 ;;		On exit  : 60/0
  4206 ;;		Unchanged: FFF9F/0
  4207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4208 ;;      Params:         0       0       0       0
  4209 ;;      Locals:         1       0       0       0
  4210 ;;      Temps:          0       0       0       0
  4211 ;;      Totals:         1       0       0       0
  4212 ;;Total ram usage:        1 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:    2
  4215 ;; This function calls:
  4216 ;;		_gre_displaydrv
  4217 ;; This function is called by:
  4218 ;;		_g_segment_displaying
  4219 ;;		_down_time_display
  4220 ;;		_study_mode_time_calculation
  4221 ;;		_G_Segment_Wink
  4222 ;;		_usart_data_analyse
  4223 ;;		_main
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226  0558                     _gre_displaying_end:	
  4227  0558                     l7885:	
  4228                           ; Regs used in _gre_displaying_end: [wreg+status,2+status,0+pclath+cstack]
  4229                           
  4230                           
  4231                           ;led.c: 523: unsigned char k;
  4232                           ;led.c: 524: gre_displaydrv(0x0000);
  4233  0558  01F3               	clrf	?_gre_displaydrv
  4234  0559  01F4               	clrf	?_gre_displaydrv+1
  4235  055A  252F  118A         	fcall	_gre_displaydrv
  4236                           
  4237                           ;led.c: 525: gre_displaydrv(0x0000);
  4238  055C  01F3               	clrf	?_gre_displaydrv
  4239  055D  01F4               	clrf	?_gre_displaydrv+1
  4240  055E  252F  118A         	fcall	_gre_displaydrv
  4241                           
  4242                           ;led.c: 526: RB5=1;
  4243  0560  1686               	bsf	6,5
  4244                           
  4245                           ;led.c: 527: for(k=0;k<12;k++);
  4246  0561  01F7               	clrf	gre_displaying_end@k
  4247  0562                     l7895:	
  4248  0562  300C               	movlw	12
  4249  0563  0AF7               	incf	gre_displaying_end@k,f
  4250  0564  0277               	subwf	gre_displaying_end@k,w
  4251  0565  1C03               	skipc
  4252  0566  2D62               	goto	l7895
  4253                           
  4254                           ;led.c: 528: RB5=0;
  4255  0567  1286               	bcf	6,5
  4256  0568  0008               	return
  4257  0569                     __end_of_gre_displaying_end:	
  4258  0569                     __ptext977:	
  4259 ;; =============== function ___lwdiv ends ============
  4260                           
  4261                           
  4262 ;; *************** function ___wmul *****************
  4263 ;; Defined at:
  4264 ;;		line 3 in file "D:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  multiplier      2    3[COMMON] unsigned int 
  4267 ;;  multiplicand    2    5[COMMON] unsigned int 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  product         2    0[BANK0 ] unsigned int 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  2    3[COMMON] unsigned int 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 160/0
  4276 ;;		On exit  : 160/0
  4277 ;;		Unchanged: FFE9F/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4279 ;;      Params:         4       0       0       0
  4280 ;;      Locals:         0       2       0       0
  4281 ;;      Temps:          0       0       0       0
  4282 ;;      Totals:         4       2       0       0
  4283 ;;Total ram usage:        6 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    1
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_usart_data_analyse
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292  0569                     ___wmul:	
  4293                           
  4294                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4295  0569  01DF               	clrf	___wmul@product
  4296  056A  01E0               	clrf	___wmul@product+1
  4297  056B                     l7675:	
  4298  056B  1C73               	btfss	___wmul@multiplier,0
  4299  056C  2D73               	goto	l7679
  4300  056D  0875               	movf	___wmul@multiplicand,w
  4301  056E  07DF               	addwf	___wmul@product,f
  4302  056F  1803               	skipnc
  4303  0570  0AE0               	incf	___wmul@product+1,f
  4304  0571  0876               	movf	___wmul@multiplicand+1,w
  4305  0572  07E0               	addwf	___wmul@product+1,f
  4306  0573                     l7679:	
  4307  0573  1003               	clrc
  4308  0574  0DF5               	rlf	___wmul@multiplicand,f
  4309  0575  0DF6               	rlf	___wmul@multiplicand+1,f
  4310  0576  1003               	clrc
  4311  0577  0CF4               	rrf	___wmul@multiplier+1,f
  4312  0578  0CF3               	rrf	___wmul@multiplier,f
  4313  0579  0874               	movf	___wmul@multiplier+1,w
  4314  057A  0473               	iorwf	___wmul@multiplier,w
  4315  057B  1D03               	skipz
  4316  057C  2D6B               	goto	l7675
  4317  057D  0860               	movf	___wmul@product+1,w
  4318  057E  00F4               	movwf	?___wmul+1
  4319  057F  085F               	movf	___wmul@product,w
  4320  0580  00F3               	movwf	?___wmul
  4321  0581  0008               	return
  4322  0582                     __end_of___wmul:	
  4323  0582                     __ptext972:	
  4324 ;; =============== function _red_displaying_end ends ============
  4325                           
  4326                           
  4327 ;; *************** function _red_displaying *****************
  4328 ;; Defined at:
  4329 ;;		line 437 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  number          2    4[BANK0 ] unsigned int 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  temp_red_var    1    8[BANK0 ] unsigned char 
  4334 ;;  temp_red_var    1    7[BANK0 ] unsigned char 
  4335 ;;  temp_red_var    1    6[BANK0 ] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;		None               void
  4338 ;; Registers used:
  4339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 60/0
  4342 ;;		On exit  : 60/0
  4343 ;;		Unchanged: FFF9F/0
  4344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4345 ;;      Params:         0       2       0       0
  4346 ;;      Locals:         0       3       0       0
  4347 ;;      Temps:          0       0       0       0
  4348 ;;      Totals:         0       5       0       0
  4349 ;;Total ram usage:        5 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    2
  4352 ;; This function calls:
  4353 ;;		___lbdiv
  4354 ;;		___lbmod
  4355 ;;		_red_displaydrv
  4356 ;; This function is called by:
  4357 ;;		_syn_wink_manage
  4358 ;;		_usart_data_analyse
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361  0582                     _red_displaying:	
  4362                           
  4363                           ;led.c: 438: unsigned char temp_red_var0;
  4364                           ;led.c: 439: unsigned char temp_red_var1;
  4365                           ;led.c: 440: unsigned char temp_red_var2;
  4366                           ;led.c: 442: if(number > 99) temp_red_var2 = 99;
  4367                           
  4368                           ; Regs used in _red_displaying: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4369  0582  3000               	movlw	0
  4370  0583  0264               	subwf	red_displaying@number+1,w
  4371  0584  3064               	movlw	100
  4372  0585  1903               	skipnz
  4373  0586  0263               	subwf	red_displaying@number,w
  4374  0587  1C03               	skipc
  4375  0588  2D8B               	goto	l7771
  4376  0589  3063               	movlw	99
  4377  058A  2D8C               	goto	L15
  4378  058B                     l7771:	
  4379                           
  4380                           ;led.c: 443: else temp_red_var2 = number;
  4381  058B  0863               	movf	red_displaying@number,w
  4382  058C                     L15:	
  4383  058C  00E7               	movwf	red_displaying@temp_red_var2
  4384                           
  4385                           ;led.c: 445: temp_red_var0 = temp_red_var2/10;
  4386  058D  300A               	movlw	10
  4387  058E  00F3               	movwf	?___lbdiv
  4388  058F  0867               	movf	red_displaying@temp_red_var2,w
  4389  0590  25E4  118A         	fcall	___lbdiv
  4390  0592  00E6               	movwf	red_displaying@temp_red_var0
  4391  0593  300A               	movlw	10
  4392                           
  4393                           ;led.c: 446: if(temp_red_var0 == 0) temp_red_var0 = 10;
  4394  0594  08E6               	movf	red_displaying@temp_red_var0,f
  4395  0595  1903               	btfsc	3,2
  4396  0596  00E6               	movwf	red_displaying@temp_red_var0
  4397                           
  4398                           ;led.c: 448: temp_red_var1 = temp_red_var2%10;
  4399  0597  00F3               	movwf	?___lbmod
  4400  0598  0867               	movf	red_displaying@temp_red_var2,w
  4401  0599  25FF               	fcall	___lbmod
  4402  059A  00E5               	movwf	red_displaying@temp_red_var1
  4403                           
  4404                           ;led.c: 450: red_displaydrv(REDWORDS[temp_red_var0]);
  4405  059B  1003               	clrc
  4406  059C  0D66               	rlf	red_displaying@temp_red_var0,w
  4407  059D  3E19               	addlw	low (_REDWORDS-__stringbase)
  4408  059E  0084               	movwf	4
  4409  059F  158A  2000  118A   	fcall	stringdir
  4410  05A2  00F3               	movwf	?_red_displaydrv
  4411  05A3  158A  2000  118A   	fcall	stringdir
  4412  05A6  00F4               	movwf	?_red_displaydrv+1
  4413  05A7  24DD               	fcall	_red_displaydrv
  4414                           
  4415                           ;led.c: 451: red_displaydrv(REDWORDS[temp_red_var1]);
  4416  05A8  1003               	clrc
  4417  05A9  0D65               	rlf	red_displaying@temp_red_var1,w
  4418  05AA  3E19               	addlw	low (_REDWORDS-__stringbase)
  4419  05AB  0084               	movwf	4
  4420  05AC  158A  2000  118A   	fcall	stringdir
  4421  05AF  00F3               	movwf	?_red_displaydrv
  4422  05B0  158A  2000  118A   	fcall	stringdir
  4423  05B3  00F4               	movwf	?_red_displaydrv+1
  4424  05B4  24DD  118A         	fcall	_red_displaydrv
  4425                           
  4426                           ;led.c: 453: RB5=1;
  4427  05B6  1686               	bsf	6,5
  4428                           
  4429                           ;led.c: 454: for(temp_red_var2=0;temp_red_var2<12;temp_red_var2++);
  4430  05B7  01E7               	clrf	red_displaying@temp_red_var2
  4431  05B8                     l7793:	
  4432  05B8  300C               	movlw	12
  4433  05B9  0AE7               	incf	red_displaying@temp_red_var2,f
  4434  05BA  0267               	subwf	red_displaying@temp_red_var2,w
  4435  05BB  1C03               	skipc
  4436  05BC  2DB8               	goto	l7793
  4437                           
  4438                           ;led.c: 455: RB5=0;
  4439  05BD  1286               	bcf	6,5
  4440  05BE  0008               	return
  4441  05BF                     __end_of_red_displaying:	
  4442  05BF                     __ptext969:	
  4443 ;; =============== function _gre_displaying ends ============
  4444                           
  4445                           
  4446 ;; *************** function _yel_displaying_end *****************
  4447 ;; Defined at:
  4448 ;;		line 490 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;		None
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;  k               1    7[COMMON] unsigned char 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;		None               void
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0, pclath, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 60/0
  4459 ;;		On exit  : 60/0
  4460 ;;		Unchanged: FFF9F/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4462 ;;      Params:         0       0       0       0
  4463 ;;      Locals:         1       0       0       0
  4464 ;;      Temps:          0       0       0       0
  4465 ;;      Totals:         1       0       0       0
  4466 ;;Total ram usage:        1 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    2
  4469 ;; This function calls:
  4470 ;;		_yel_displaydrv
  4471 ;; This function is called by:
  4472 ;;		_down_time_display
  4473 ;;		_study_mode_time_calculation
  4474 ;;		_usart_data_analyse
  4475 ;;		_main
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478  05BF                     _yel_displaying_end:	
  4479                           
  4480                           ;led.c: 491: unsigned char k;
  4481                           ;led.c: 492: yel_displaydrv(0x0000);
  4482                           
  4483                           ; Regs used in _yel_displaying_end: [wreg+status,2+status,0+pclath+cstack]
  4484  05BF  01F3               	clrf	?_yel_displaydrv
  4485  05C0  01F4               	clrf	?_yel_displaydrv+1
  4486  05C1  2506  118A         	fcall	_yel_displaydrv
  4487                           
  4488                           ;led.c: 493: yel_displaydrv(0x0000);
  4489  05C3  01F3               	clrf	?_yel_displaydrv
  4490  05C4  01F4               	clrf	?_yel_displaydrv+1
  4491  05C5  2506  118A         	fcall	_yel_displaydrv
  4492                           
  4493                           ;led.c: 494: RB5=1;
  4494  05C7  1686               	bsf	6,5
  4495                           
  4496                           ;led.c: 495: for(k=0;k<12;k++);
  4497  05C8  01F7               	clrf	yel_displaying_end@k
  4498  05C9                     l7851:	
  4499  05C9  300C               	movlw	12
  4500  05CA  0AF7               	incf	yel_displaying_end@k,f
  4501  05CB  0277               	subwf	yel_displaying_end@k,w
  4502  05CC  1C03               	skipc
  4503  05CD  2DC9               	goto	l7851
  4504                           
  4505                           ;led.c: 496: RB5=0;
  4506  05CE  1286               	bcf	6,5
  4507  05CF  0008               	return
  4508  05D0                     __end_of_yel_displaying_end:	
  4509  05D0                     __ptext987:	
  4510 ;; =============== function _usartinit ends ============
  4511                           
  4512                           
  4513 ;; *************** function _addr_write *****************
  4514 ;; Defined at:
  4515 ;;		line 320 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  indata          1    wreg     unsigned char 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  indata          1    3[COMMON] unsigned char 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;		None               void
  4522 ;; Registers used:
  4523 ;;		wreg
  4524 ;; Tracked objects:
  4525 ;;		On entry : 160/0
  4526 ;;		On exit  : 160/60
  4527 ;;		Unchanged: FFE9F/0
  4528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4529 ;;      Params:         0       0       0       0
  4530 ;;      Locals:         1       0       0       0
  4531 ;;      Temps:          0       0       0       0
  4532 ;;      Totals:         1       0       0       0
  4533 ;;Total ram usage:        1 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    1
  4536 ;; This function calls:
  4537 ;;		Nothing
  4538 ;; This function is called by:
  4539 ;;		_usart_data_analyse
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542  05D0                     _addr_write:	
  4543                           
  4544                           ; Regs used in _addr_write: [wreg]
  4545                           ;addr_write@indata stored from wreg
  4546  05D0  00F3               	movwf	addr_write@indata
  4547                           
  4548                           ;led.c: 321: EEADR = 0x10;
  4549  05D1  3010               	movlw	16
  4550  05D2  1703               	bsf	3,6	;RP1=1, select bank2
  4551  05D3  008D               	movwf	13	;volatile
  4552                           
  4553                           ;led.c: 322: EEDATA = indata;
  4554  05D4  0873               	movf	addr_write@indata,w
  4555  05D5  008C               	movwf	12	;volatile
  4556                           
  4557                           ;led.c: 323: EEPGD = 0;
  4558  05D6  1683               	bsf	3,5	;RP0=1, select bank3
  4559  05D7  3055               	movlw	85
  4560  05D8  138C               	bcf	12,7
  4561                           
  4562                           ;led.c: 324: WREN = 1;
  4563  05D9  150C               	bsf	12,2
  4564  05DA  138B               	bcf	11,7
  4565                           
  4566                           ;led.c: 326: EECON2 = 0X55;
  4567  05DB  008D               	movwf	13	;volatile
  4568                           
  4569                           ;led.c: 327: EECON2 = 0XAA;
  4570  05DC  30AA               	movlw	170
  4571  05DD  008D               	movwf	13	;volatile
  4572                           
  4573                           ;led.c: 328: WR = 1;
  4574  05DE  148C               	bsf	12,1
  4575                           
  4576                           ;led.c: 329: GIE = 1;
  4577  05DF  178B               	bsf	11,7
  4578                           
  4579                           ;led.c: 330: WREN = 0;
  4580  05E0  110C               	bcf	12,2
  4581  05E1                     l1158:	
  4582                           ;led.c: 331: while(WR);
  4583                           
  4584  05E1  1C8C               	btfss	12,1
  4585  05E2  0008               	return
  4586  05E3  2DE1               	goto	l1158
  4587  05E4                     __end_of_addr_write:	
  4588  05E4                     __ptext975:	
  4589 ;; =============== function ___lbmod ends ============
  4590                           
  4591                           
  4592 ;; *************** function ___lbdiv *****************
  4593 ;; Defined at:
  4594 ;;		line 5 in file "D:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  dividend        1    wreg     unsigned char 
  4597 ;;  divisor         1    3[COMMON] unsigned char 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;  dividend        1    4[COMMON] unsigned char 
  4600 ;;  quotient        1    6[COMMON] unsigned char 
  4601 ;;  counter         1    5[COMMON] unsigned char 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      unsigned char 
  4604 ;; Registers used:
  4605 ;;		wreg, status,2, status,0
  4606 ;; Tracked objects:
  4607 ;;		On entry : 60/0
  4608 ;;		On exit  : 60/0
  4609 ;;		Unchanged: FFF9F/0
  4610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4611 ;;      Params:         1       0       0       0
  4612 ;;      Locals:         3       0       0       0
  4613 ;;      Temps:          0       0       0       0
  4614 ;;      Totals:         4       0       0       0
  4615 ;;Total ram usage:        4 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; Hardware stack levels required when called:    1
  4618 ;; This function calls:
  4619 ;;		Nothing
  4620 ;; This function is called by:
  4621 ;;		_red_displaying
  4622 ;;		_yel_displaying
  4623 ;;		_gre_displaying
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626  05E4                     ___lbdiv:	
  4627                           
  4628                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4629                           ;___lbdiv@dividend stored from wreg
  4630  05E4  00F4               	movwf	___lbdiv@dividend
  4631  05E5  01F6               	clrf	___lbdiv@quotient
  4632  05E6  0873               	movf	___lbdiv@divisor,w
  4633  05E7  1903               	btfsc	3,2
  4634  05E8  2DFD               	goto	l7735
  4635  05E9  01F5               	clrf	___lbdiv@counter
  4636  05EA                     l7721:	
  4637  05EA  0AF5               	incf	___lbdiv@counter,f
  4638  05EB  1BF3               	btfsc	___lbdiv@divisor,7
  4639  05EC  2DF0               	goto	l2489
  4640  05ED  1003               	clrc
  4641  05EE  0DF3               	rlf	___lbdiv@divisor,f
  4642  05EF  2DEA               	goto	l7721
  4643  05F0                     l2489:	
  4644  05F0  1003               	clrc
  4645  05F1  0DF6               	rlf	___lbdiv@quotient,f
  4646  05F2  0873               	movf	___lbdiv@divisor,w
  4647  05F3  0274               	subwf	___lbdiv@dividend,w
  4648  05F4  1C03               	skipc
  4649  05F5  2DFA               	goto	L18
  4650  05F6  0873               	movf	___lbdiv@divisor,w
  4651  05F7  02F4               	subwf	___lbdiv@dividend,f
  4652  05F8  1476               	bsf	___lbdiv@quotient,0
  4653  05F9  1003               	clrc
  4654  05FA                     L18:	
  4655  05FA  0CF3               	rrf	___lbdiv@divisor,f
  4656  05FB  0BF5               	decfsz	___lbdiv@counter,f
  4657  05FC  2DF0               	goto	l2489
  4658  05FD                     l7735:	
  4659  05FD  0876               	movf	___lbdiv@quotient,w
  4660  05FE  0008               	return
  4661  05FF                     __end_of___lbdiv:	
  4662  05FF                     __ptext974:	
  4663 ;; =============== function _addr_read ends ============
  4664                           
  4665                           
  4666 ;; *************** function ___lbmod *****************
  4667 ;; Defined at:
  4668 ;;		line 5 in file "D:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  dividend        1    wreg     unsigned char 
  4671 ;;  divisor         1    3[COMMON] unsigned char 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  dividend        1    5[COMMON] unsigned char 
  4674 ;;  rem             1    7[COMMON] unsigned char 
  4675 ;;  counter         1    6[COMMON] unsigned char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      unsigned char 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0
  4680 ;; Tracked objects:
  4681 ;;		On entry : 60/0
  4682 ;;		On exit  : 60/0
  4683 ;;		Unchanged: FFF9F/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4685 ;;      Params:         1       0       0       0
  4686 ;;      Locals:         3       0       0       0
  4687 ;;      Temps:          1       0       0       0
  4688 ;;      Totals:         5       0       0       0
  4689 ;;Total ram usage:        5 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    1
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_red_displaying
  4696 ;;		_yel_displaying
  4697 ;;		_gre_displaying
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700  05FF                     ___lbmod:	
  4701                           
  4702                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4703                           ;___lbmod@dividend stored from wreg
  4704  05FF  00F5               	movwf	___lbmod@dividend
  4705  0600  3008               	movlw	8
  4706  0601  00F6               	movwf	___lbmod@counter
  4707  0602  01F7               	clrf	___lbmod@rem
  4708  0603                     l7743:	
  4709  0603  0875               	movf	___lbmod@dividend,w
  4710  0604  00F4               	movwf	??___lbmod
  4711  0605  3007               	movlw	7
  4712  0606  1003               	clrc
  4713  0607                     L17:	
  4714  0607  0CF4               	rrf	??___lbmod,f
  4715  0608  3EFF               	addlw	-1
  4716  0609  1003               	clrc
  4717  060A  1D03               	skipz
  4718  060B  2E07               	goto	L17
  4719  060C  0D77               	rlf	___lbmod@rem,w
  4720  060D  0474               	iorwf	??___lbmod,w
  4721  060E  00F7               	movwf	___lbmod@rem
  4722  060F  1003               	clrc
  4723  0610  0DF5               	rlf	___lbmod@dividend,f
  4724  0611  0873               	movf	___lbmod@divisor,w
  4725  0612  0277               	subwf	___lbmod@rem,w
  4726  0613  1C03               	skipc
  4727  0614  2E17               	goto	l7751
  4728  0615  0873               	movf	___lbmod@divisor,w
  4729  0616  02F7               	subwf	___lbmod@rem,f
  4730  0617                     l7751:	
  4731  0617  0BF6               	decfsz	___lbmod@counter,f
  4732  0618  2E03               	goto	l7743
  4733  0619  0877               	movf	___lbmod@rem,w
  4734  061A  0008               	return
  4735  061B                     __end_of___lbmod:	
  4736  061B                     __ptext973:	
  4737 ;; =============== function _red_displaying ends ============
  4738                           
  4739                           
  4740 ;; *************** function _addr_read *****************
  4741 ;; Defined at:
  4742 ;;		line 311 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;		None
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;		None
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      unsigned char 
  4749 ;; Registers used:
  4750 ;;		wreg
  4751 ;; Tracked objects:
  4752 ;;		On entry : 140/20
  4753 ;;		On exit  : 60/40
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4756 ;;      Params:         0       0       0       0
  4757 ;;      Locals:         0       0       0       0
  4758 ;;      Temps:          0       0       0       0
  4759 ;;      Totals:         0       0       0       0
  4760 ;;Total ram usage:        0 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; Hardware stack levels required when called:    1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_usart_data_analyse
  4767 ;;		_main
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770  061B                     _addr_read:	
  4771                           
  4772                           ;led.c: 312: EEADR = 0x10;
  4773                           
  4774                           ; Regs used in _addr_read: [wreg]
  4775  061B  3010               	movlw	16
  4776  061C  1283               	bcf	3,5	;RP0=0, select bank2
  4777  061D  1703               	bsf	3,6	;RP1=1, select bank2
  4778  061E  008D               	movwf	13	;volatile
  4779                           
  4780                           ;led.c: 313: EEPGD = 0;
  4781  061F  1683               	bsf	3,5	;RP0=1, select bank3
  4782  0620  138C               	bcf	12,7
  4783                           
  4784                           ;led.c: 314: RD = 1;
  4785  0621  140C               	bsf	12,0
  4786                           
  4787                           ;led.c: 315: _nop();
  4788  0622  0000               	nop
  4789                           
  4790                           ;led.c: 316: return EEDATA;
  4791  0623  1283               	bcf	3,5	;RP0=0, select bank2
  4792  0624  1703               	bsf	3,6	;RP1=1, select bank2
  4793  0625  080C               	movf	12,w	;volatile
  4794  0626  0008               	return
  4795  0627                     __end_of_addr_read:	
  4796  0627                     __ptext970:	
  4797 ;; =============== function _yel_displaying_end ends ============
  4798                           
  4799                           
  4800 ;; *************** function _yel_displaying *****************
  4801 ;; Defined at:
  4802 ;;		line 469 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  number          2    4[BANK0 ] unsigned int 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;  temp_yel_var    1    8[BANK0 ] unsigned char 
  4807 ;;  temp_yel_var    1    7[BANK0 ] unsigned char 
  4808 ;;  temp_yel_var    1    6[BANK0 ] unsigned char 
  4809 ;; Return value:  Size  Location     Type
  4810 ;;		None               void
  4811 ;; Registers used:
  4812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4813 ;; Tracked objects:
  4814 ;;		On entry : 60/0
  4815 ;;		On exit  : 160/0
  4816 ;;		Unchanged: FFE9F/0
  4817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4818 ;;      Params:         0       2       0       0
  4819 ;;      Locals:         0       3       0       0
  4820 ;;      Temps:          0       0       0       0
  4821 ;;      Totals:         0       5       0       0
  4822 ;;Total ram usage:        5 bytes
  4823 ;; Hardware stack levels used:    1
  4824 ;; Hardware stack levels required when called:    2
  4825 ;; This function calls:
  4826 ;;		___lbdiv
  4827 ;;		___lbmod
  4828 ;;		_yel_displaydrv
  4829 ;; This function is called by:
  4830 ;;		_syn_wink_manage
  4831 ;;		_usart_data_analyse
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834  0627                     _yel_displaying:	
  4835                           
  4836                           ;led.c: 470: unsigned char temp_yel_var0;
  4837                           ;led.c: 471: unsigned char temp_yel_var1;
  4838                           ;led.c: 472: unsigned char temp_yel_var2;
  4839                           ;led.c: 474: if(number > 99) temp_yel_var2 = 99;
  4840                           
  4841                           ; Regs used in _yel_displaying: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4842  0627  3000               	movlw	0
  4843  0628  0264               	subwf	yel_displaying@number+1,w
  4844  0629  3064               	movlw	100
  4845  062A  1903               	skipnz
  4846  062B  0263               	subwf	yel_displaying@number,w
  4847  062C  1C03               	skipc
  4848  062D  2E30               	goto	l7815
  4849  062E  3063               	movlw	99
  4850  062F  2E31               	goto	L13
  4851  0630                     l7815:	
  4852                           
  4853                           ;led.c: 475: else temp_yel_var2 = number;
  4854  0630  0863               	movf	yel_displaying@number,w
  4855  0631                     L13:	
  4856  0631  00E7               	movwf	yel_displaying@temp_yel_var2
  4857                           
  4858                           ;led.c: 477: temp_yel_var0 = temp_yel_var2/10;
  4859  0632  300A               	movlw	10
  4860  0633  00F3               	movwf	?___lbdiv
  4861  0634  0867               	movf	yel_displaying@temp_yel_var2,w
  4862  0635  25E4  118A         	fcall	___lbdiv
  4863  0637  00E6               	movwf	yel_displaying@temp_yel_var0
  4864  0638  300A               	movlw	10
  4865                           
  4866                           ;led.c: 478: if(temp_yel_var0 == 0) temp_yel_var0 = 10;
  4867  0639  08E6               	movf	yel_displaying@temp_yel_var0,f
  4868  063A  1903               	btfsc	3,2
  4869  063B  00E6               	movwf	yel_displaying@temp_yel_var0
  4870                           
  4871                           ;led.c: 480: temp_yel_var1 = temp_yel_var2%10;
  4872  063C  00F3               	movwf	?___lbmod
  4873  063D  0867               	movf	yel_displaying@temp_yel_var2,w
  4874  063E  25FF               	fcall	___lbmod
  4875  063F  00E5               	movwf	yel_displaying@temp_yel_var1
  4876                           
  4877                           ;led.c: 482: yel_displaydrv(YELWORDS[temp_yel_var0]);
  4878  0640  1003               	clrc
  4879  0641  0D66               	rlf	yel_displaying@temp_yel_var0,w
  4880  0642  3E31               	addlw	low (_YELWORDS-__stringbase)
  4881  0643  0084               	movwf	4
  4882  0644  158A  2000  118A   	fcall	stringdir
  4883  0647  00F3               	movwf	?_yel_displaydrv
  4884  0648  158A  2000  118A   	fcall	stringdir
  4885  064B  00F4               	movwf	?_yel_displaydrv+1
  4886  064C  2506               	fcall	_yel_displaydrv
  4887                           
  4888                           ;led.c: 483: yel_displaydrv(YELWORDS[temp_yel_var1]);
  4889  064D  1003               	clrc
  4890  064E  0D65               	rlf	yel_displaying@temp_yel_var1,w
  4891  064F  3E31               	addlw	low (_YELWORDS-__stringbase)
  4892  0650  0084               	movwf	4
  4893  0651  158A  2000  118A   	fcall	stringdir
  4894  0654  00F3               	movwf	?_yel_displaydrv
  4895  0655  158A  2000  118A   	fcall	stringdir
  4896  0658  00F4               	movwf	?_yel_displaydrv+1
  4897  0659  2506  118A         	fcall	_yel_displaydrv
  4898                           
  4899                           ;led.c: 484: RB5=1;
  4900  065B  1686               	bsf	6,5
  4901                           
  4902                           ;led.c: 485: for(temp_yel_var2=0;temp_yel_var2<12;temp_yel_var2++);
  4903  065C  01E7               	clrf	yel_displaying@temp_yel_var2
  4904  065D                     l7837:	
  4905  065D  300C               	movlw	12
  4906  065E  0AE7               	incf	yel_displaying@temp_yel_var2,f
  4907  065F  0267               	subwf	yel_displaying@temp_yel_var2,w
  4908  0660  1C03               	skipc
  4909  0661  2E5D               	goto	l7837
  4910                           
  4911                           ;led.c: 486: RB5=0;
  4912  0662  1286               	bcf	6,5
  4913  0663  0008               	return
  4914  0664                     __end_of_yel_displaying:	
  4915  0664                     __ptext968:	
  4916 ;; =============== function _gre_displaying_end ends ============
  4917                           
  4918                           
  4919 ;; *************** function _gre_displaying *****************
  4920 ;; Defined at:
  4921 ;;		line 500 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;  number          2    4[BANK0 ] unsigned int 
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;  temp_gre_var    1    8[BANK0 ] unsigned char 
  4926 ;;  temp_gre_var    1    7[BANK0 ] unsigned char 
  4927 ;;  temp_gre_var    1    6[BANK0 ] unsigned char 
  4928 ;; Return value:  Size  Location     Type
  4929 ;;		None               void
  4930 ;; Registers used:
  4931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4932 ;; Tracked objects:
  4933 ;;		On entry : 60/0
  4934 ;;		On exit  : 160/0
  4935 ;;		Unchanged: FFE9F/0
  4936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4937 ;;      Params:         0       2       0       0
  4938 ;;      Locals:         0       3       0       0
  4939 ;;      Temps:          0       0       0       0
  4940 ;;      Totals:         0       5       0       0
  4941 ;;Total ram usage:        5 bytes
  4942 ;; Hardware stack levels used:    1
  4943 ;; Hardware stack levels required when called:    2
  4944 ;; This function calls:
  4945 ;;		___lbdiv
  4946 ;;		___lbmod
  4947 ;;		_gre_displaydrv
  4948 ;; This function is called by:
  4949 ;;		_syn_wink_manage
  4950 ;;		_usart_data_analyse
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953  0664                     _gre_displaying:	
  4954                           
  4955                           ;led.c: 501: unsigned char temp_gre_var0;
  4956                           ;led.c: 502: unsigned char temp_gre_var1;
  4957                           ;led.c: 503: unsigned char temp_gre_var2;
  4958                           ;led.c: 505: if(number > 99) temp_gre_var2 = 99;
  4959                           
  4960                           ; Regs used in _gre_displaying: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4961  0664  3000               	movlw	0
  4962  0665  0264               	subwf	gre_displaying@number+1,w
  4963  0666  3064               	movlw	100
  4964  0667  1903               	skipnz
  4965  0668  0263               	subwf	gre_displaying@number,w
  4966  0669  1C03               	skipc
  4967  066A  2E6D               	goto	l7859
  4968  066B  3063               	movlw	99
  4969  066C  2E6E               	goto	L11
  4970  066D                     l7859:	
  4971                           
  4972                           ;led.c: 506: else temp_gre_var2 = number;
  4973  066D  0863               	movf	gre_displaying@number,w
  4974  066E                     L11:	
  4975  066E  00E7               	movwf	gre_displaying@temp_gre_var2
  4976                           
  4977                           ;led.c: 508: temp_gre_var0 = temp_gre_var2/10;
  4978  066F  300A               	movlw	10
  4979  0670  00F3               	movwf	?___lbdiv
  4980  0671  0867               	movf	gre_displaying@temp_gre_var2,w
  4981  0672  25E4  118A         	fcall	___lbdiv
  4982  0674  00E6               	movwf	gre_displaying@temp_gre_var0
  4983  0675  300A               	movlw	10
  4984                           
  4985                           ;led.c: 509: if(temp_gre_var0 == 0) temp_gre_var0 = 10;
  4986  0676  08E6               	movf	gre_displaying@temp_gre_var0,f
  4987  0677  1903               	btfsc	3,2
  4988  0678  00E6               	movwf	gre_displaying@temp_gre_var0
  4989                           
  4990                           ;led.c: 511: temp_gre_var1 = temp_gre_var2%10;
  4991  0679  00F3               	movwf	?___lbmod
  4992  067A  0867               	movf	gre_displaying@temp_gre_var2,w
  4993  067B  25FF               	fcall	___lbmod
  4994  067C  00E5               	movwf	gre_displaying@temp_gre_var1
  4995                           
  4996                           ;led.c: 513: gre_displaydrv(GREWORDS[temp_gre_var0]);
  4997  067D  1003               	clrc
  4998  067E  0D66               	rlf	gre_displaying@temp_gre_var0,w
  4999  067F  3E01               	addlw	low (_GREWORDS-__stringbase)
  5000  0680  0084               	movwf	4
  5001  0681  158A  2000  118A   	fcall	stringdir
  5002  0684  00F3               	movwf	?_gre_displaydrv
  5003  0685  158A  2000  118A   	fcall	stringdir
  5004  0688  00F4               	movwf	?_gre_displaydrv+1
  5005  0689  252F               	fcall	_gre_displaydrv
  5006                           
  5007                           ;led.c: 514: gre_displaydrv(GREWORDS[temp_gre_var1]);
  5008  068A  1003               	clrc
  5009  068B  0D65               	rlf	gre_displaying@temp_gre_var1,w
  5010  068C  3E01               	addlw	low (_GREWORDS-__stringbase)
  5011  068D  0084               	movwf	4
  5012  068E  158A  2000  118A   	fcall	stringdir
  5013  0691  00F3               	movwf	?_gre_displaydrv
  5014  0692  158A  2000  118A   	fcall	stringdir
  5015  0695  00F4               	movwf	?_gre_displaydrv+1
  5016  0696  252F  118A         	fcall	_gre_displaydrv
  5017                           
  5018                           ;led.c: 516: RB5=1;
  5019  0698  1686               	bsf	6,5
  5020                           
  5021                           ;led.c: 517: for(temp_gre_var2=0;temp_gre_var2<12;temp_gre_var2++);
  5022  0699  01E7               	clrf	gre_displaying@temp_gre_var2
  5023  069A                     l7881:	
  5024  069A  300C               	movlw	12
  5025  069B  0AE7               	incf	gre_displaying@temp_gre_var2,f
  5026  069C  0267               	subwf	gre_displaying@temp_gre_var2,w
  5027  069D  1C03               	skipc
  5028  069E  2E9A               	goto	l7881
  5029                           
  5030                           ;led.c: 518: RB5=0;
  5031  069F  1286               	bcf	6,5
  5032  06A0  0008               	return
  5033  06A1                     __end_of_gre_displaying:	
  5034  06A1                     PL2:	
  5035  06A1  0800               	movf	0,w
  5036  06A2  00E3               	movwf	??_study_mode_time_calculation
  5037  06A3  0A84               	incf	4,f
  5038  06A4  0800               	movf	0,w
  5039  06A5  00E4               	movwf	??_study_mode_time_calculation+1
  5040  06A6  1003               	clrc
  5041  06A7  0D6A               	rlf	study_mode_time_calculation@i,w
  5042  06A8  0008               	return
  5043  06A9                     PL3:	
  5044  06A9  0084               	movwf	4
  5045  06AA  0800               	movf	0,w
  5046  06AB  00E3               	movwf	??_study_mode_time_calculation
  5047  06AC  0A84               	incf	4,f
  5048  06AD  0800               	movf	0,w
  5049  06AE  00E4               	movwf	??_study_mode_time_calculation+1
  5050  06AF  0008               	return
  5051  06B0                     PL4:	
  5052  06B0  3064               	movlw	100
  5053  06B1  00F3               	movwf	?___lwdiv
  5054  06B2  01F4               	clrf	?___lwdiv+1
  5055  06B3  1003               	clrc
  5056  06B4  0D6A               	rlf	study_mode_time_calculation@i,w
  5057  06B5  3E2C               	addlw	_previous_study_counter& (0+255)
  5058  06B6  0008               	return
  5059  06B7                     PL5:	
  5060  06B7  1003               	clrc
  5061  06B8  0D6A               	rlf	study_mode_time_calculation@i,w
  5062  06B9  3E20               	addlw	_current_study_counter& (0+255)
  5063  06BA  0084               	movwf	4
  5064  06BB  0008               	return
  5065  06BC                     PL6:	
  5066  06BC  00E5               	movwf	??_study_mode_time_calculation+2
  5067  06BD  0A84               	incf	4,f
  5068  06BE  0800               	movf	0,w
  5069  06BF  00E6               	movwf	??_study_mode_time_calculation+3
  5070  06C0  0863               	movf	??_study_mode_time_calculation,w
  5071  06C1  0265               	subwf	??_study_mode_time_calculation+2,w
  5072  06C2  00E7               	movwf	study_mode_time_calculation@temp_var2
  5073  06C3  0864               	movf	??_study_mode_time_calculation+1,w
  5074  06C4  1C03               	skipc
  5075  06C5  0A64               	incf	??_study_mode_time_calculation+1,w
  5076  06C6  0266               	subwf	??_study_mode_time_calculation+3,w
  5077  06C7  00E8               	movwf	study_mode_time_calculation@temp_var2+1
  5078  06C8  0008               	return
  5079  06C9                     PL7:	
  5080  06C9  0084               	movwf	4
  5081  06CA  0800               	movf	0,w
  5082  06CB  00E5               	movwf	??_study_mode_time_calculation+2
  5083  06CC  0A84               	incf	4,f
  5084  06CD  0800               	movf	0,w
  5085  06CE  00E6               	movwf	??_study_mode_time_calculation+3
  5086  06CF  0864               	movf	??_study_mode_time_calculation+1,w
  5087  06D0  0266               	subwf	??_study_mode_time_calculation+3,w
  5088  06D1  1D03               	skipz
  5089  06D2  0008               	return
  5090  06D3  0863               	movf	??_study_mode_time_calculation,w
  5091  06D4  0265               	subwf	??_study_mode_time_calculation+2,w
  5092  06D5  0008               	return
  5093  06D6                     PL9:	
  5094  06D6  1003               	clrc
  5095  06D7  0D6A               	rlf	study_mode_time_calculation@i,w
  5096  06D8  3E26               	addlw	_display_data& (0+255)
  5097  06D9  0084               	movwf	4
  5098  06DA  0873               	movf	?___lwdiv,w
  5099  06DB  0080               	movwf	0
  5100  06DC  0A84               	incf	4,f
  5101  06DD  0874               	movf	?___lwdiv+1,w
  5102  06DE  0080               	movwf	0
  5103  06DF  0008               	return
  5104  06E0                     PL10:	
  5105  06E0  0084               	movwf	4
  5106  06E1  0863               	movf	??_study_mode_time_calculation,w
  5107  06E2  0080               	movwf	0
  5108  06E3  0A84               	incf	4,f
  5109  06E4  0864               	movf	??_study_mode_time_calculation+1,w
  5110  06E5  0080               	movwf	0
  5111  06E6  0008               	return
  5112  06E7                     PL11:	
  5113  06E7  0863               	movf	??_study_mode_time_calculation,w
  5114  06E8  3E12               	addlw	18
  5115  06E9  00F5               	movwf	?___lwdiv+2
  5116  06EA  0864               	movf	??_study_mode_time_calculation+1,w
  5117  06EB  1803               	skipnc
  5118  06EC  3E01               	addlw	1
  5119  06ED  3E00               	addlw	0
  5120  06EE  00F6               	movwf	?___lwdiv+3
  5121  06EF  0008               	return
  5122  06F0                     PL14:	
  5123  06F0  0873               	movf	?___wmul,w
  5124  06F1  07ED               	addwf	usart_data_analyse@down_time,f
  5125  06F2  1803               	skipnc
  5126  06F3  0AEE               	incf	usart_data_analyse@down_time+1,f
  5127  06F4  0874               	movf	?___wmul+1,w
  5128  06F5  07EE               	addwf	usart_data_analyse@down_time+1,f
  5129  06F6  0008               	return
  5130  06F7                     PL16:	
  5131  06F7  0859               	movf	_usart_temp_buffer+1,w
  5132  06F8  3903               	andlw	3
  5133  06F9  00E8               	movwf	??_usart_data_analyse
  5134  06FA  01E9               	clrf	??_usart_data_analyse+1
  5135  06FB  0869               	movf	??_usart_data_analyse+1,w
  5136  06FC  0008               	return
  5137  06FD                     PL17:	
  5138  06FD  01A7               	clrf	_display_data+1
  5139  06FE  01A8               	clrf	_display_data+2
  5140  06FF  01A9               	clrf	_display_data+3
  5141  0700  01AA               	clrf	_display_data+4
  5142  0701  01AB               	clrf	_display_data+5
  5143  0702  0008               	return
  5144  0703                     PL19:	
  5145  0703  01A8               	clrf	_display_data+2
  5146  0704  01A9               	clrf	_display_data+3
  5147  0705  01D2               	clrf	_syn_wink_display_updata
  5148  0706  0AD2               	incf	_syn_wink_display_updata,f
  5149  0707  01BC               	clrf	_displaying_second_counter
  5150  0708  0008               	return
  5151  0709                     PL20:	
  5152  0709  1003               	clrc
  5153  070A  0D6A               	rlf	study_mode_time_calculation@i,w
  5154  070B  3E20               	addlw	_current_study_counter& (0+255)
  5155  070C  0084               	movwf	4
  5156  070D  1383               	bcf	3,7	;select IRP bank0
  5157  070E  0008               	return
  5158  070F                     PL21:	
  5159  070F  0084               	movwf	4
  5160  0710  0800               	movf	0,w
  5161  0711  0A84               	incf	4,f
  5162  0712  0400               	iorwf	0,w
  5163  0713  0008               	return
  5164  0714                     PL22:	
  5165  0714  082B               	movf	_display_data+5,w
  5166  0715  00E4               	movwf	?_gre_displaying+1
  5167  0716  082A               	movf	_display_data+4,w
  5168  0717  00E3               	movwf	?_gre_displaying
  5169  0718  0008               	return
  5170  0719                     __ptext988:	
  5171 ;; =============== function _addr_write ends ============
  5172                           
  5173                           
  5174 ;; *************** function _ioinit *****************
  5175 ;; Defined at:
  5176 ;;		line 232 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  i               1    3[COMMON] unsigned char 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;		None               void
  5183 ;; Registers used:
  5184 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5185 ;; Tracked objects:
  5186 ;;		On entry : 15F/20
  5187 ;;		On exit  : 17F/0
  5188 ;;		Unchanged: FFE80/0
  5189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5190 ;;      Params:         0       0       0       0
  5191 ;;      Locals:         1       0       0       0
  5192 ;;      Temps:          0       0       0       0
  5193 ;;      Totals:         1       0       0       0
  5194 ;;Total ram usage:        1 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    1
  5197 ;; This function calls:
  5198 ;;		Nothing
  5199 ;; This function is called by:
  5200 ;;		_main
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203  0719                     _ioinit:	
  5204                           
  5205                           ;led.c: 233: unsigned char i;
  5206                           ;led.c: 234: OSCCON=0X08;
  5207                           
  5208                           ; Regs used in _ioinit: [wreg-fsr0h+status,2+status,0]
  5209  0719  3008               	movlw	8
  5210  071A  1683               	bsf	3,5	;RP0=1, select bank1
  5211  071B  008F               	movwf	15	;volatile
  5212                           
  5213                           ;led.c: 235: ANSEL=0X00;
  5214  071C  1703               	bsf	3,6	;RP1=1, select bank3
  5215  071D  0188               	clrf	8	;volatile
  5216                           
  5217                           ;led.c: 236: ANSELH=0X00;
  5218  071E  0189               	clrf	9	;volatile
  5219                           
  5220                           ;led.c: 237: nRBPU = 1;
  5221  071F  1303               	bcf	3,6	;RP1=0, select bank1
  5222  0720  1781               	bsf	1,7
  5223                           
  5224                           ;led.c: 238: PORTB=0B00000000;
  5225  0721  1283               	bcf	3,5	;RP0=0, select bank0
  5226  0722  0186               	clrf	6	;volatile
  5227                           
  5228                           ;led.c: 239: TRISB=0B00000000;
  5229  0723  1683               	bsf	3,5	;RP0=1, select bank1
  5230  0724  0186               	clrf	6	;volatile
  5231                           
  5232                           ;led.c: 240: TRISC=0B00011100;
  5233  0725  301C               	movlw	28
  5234  0726  0087               	movwf	7	;volatile
  5235                           
  5236                           ;led.c: 242: TFG = 0;
  5237  0727  1283               	bcf	3,5	;RP0=0, select bank0
  5238  0728  3007               	movlw	7
  5239  0729  01B8               	clrf	_TFG
  5240                           
  5241                           ;led.c: 243: wdtcounter = 0;
  5242  072A  01D6               	clrf	_wdtcounter
  5243                           
  5244                           ;led.c: 244: ledstate = 0;
  5245  072B  01C9               	clrf	_ledstate
  5246                           
  5247                           ;led.c: 248: lamp_off_flag = 0;
  5248  072C  00C7               	movwf	_lamp_stab_state
  5249                           
  5250                           ;led.c: 250: pulse_down_time_valid_flag = 0;
  5251  072D  01CB               	clrf	_pulse_study_time_flag
  5252                           
  5253                           ;led.c: 252: for(i=0;i<3;i++)
  5254  072E  01F3               	clrf	ioinit@i
  5255  072F                     l7265:	
  5256                           
  5257                           ;led.c: 253: {
  5258                           ;led.c: 254: lamp_chge_counter[i]=0;
  5259  072F  0873               	movf	ioinit@i,w
  5260  0730  3E32               	addlw	_lamp_chge_counter& (0+255)
  5261  0731  0084               	movwf	4
  5262  0732  0180               	clrf	0
  5263                           
  5264                           ;led.c: 255: lamp_on_counter[i] = 0;
  5265  0733  1003               	clrc
  5266  0734  0D73               	rlf	ioinit@i,w
  5267  0735  3EC4               	addlw	_lamp_on_counter& (0+255)
  5268                           
  5269                           ;led.c: 256: lamp_off_counter[i] = 0;
  5270  0736  2785  118A         	fcall	PL8	;call to abstracted procedure
  5271  0738  3EBE               	addlw	_lamp_off_counter& (0+255)
  5272                           
  5273                           ;led.c: 257: previous_study_counter[i] = 0;
  5274  0739  2785  118A         	fcall	PL8	;call to abstracted procedure
  5275  073B  3E2C               	addlw	_previous_study_counter& (0+255)
  5276                           
  5277                           ;led.c: 258: current_study_counter[i] = 0;
  5278  073C  2785  118A         	fcall	PL8	;call to abstracted procedure
  5279  073E  3E20               	addlw	_current_study_counter& (0+255)
  5280  073F  0084               	movwf	4
  5281  0740  0180               	clrf	0
  5282  0741  0A84               	incf	4,f
  5283  0742  0180               	clrf	0
  5284                           
  5285                           ;led.c: 259: study_chge_counter[i] = 0;
  5286  0743  0873               	movf	ioinit@i,w
  5287  0744  3E35               	addlw	_study_chge_counter& (0+255)
  5288  0745  0084               	movwf	4
  5289  0746  0180               	clrf	0
  5290                           
  5291                           ;led.c: 260: display_data[i] = 0;
  5292  0747  1003               	clrc
  5293  0748  0D73               	rlf	ioinit@i,w
  5294  0749  278C  118A         	fcall	PL13	;call to abstracted procedure
  5295                           
  5296                           ;led.c: 261: lamp_off_time[i] = 0;
  5297  074B  0873               	movf	ioinit@i,w
  5298  074C  3ED6               	addlw	_lamp_off_time& (0+255)
  5299  074D  0084               	movwf	4
  5300  074E  0180               	clrf	0
  5301                           
  5302                           ;led.c: 262: pulse_study_time_counter[i] = 0;
  5303  074F  1003               	clrc
  5304  0750  0D73               	rlf	ioinit@i,w
  5305  0751  3ED0               	addlw	_pulse_study_time_counter& (0+255)
  5306                           
  5307                           ;led.c: 263: pulse_down_times[i] = 0;
  5308  0752  2785  118A         	fcall	PL8	;call to abstracted procedure
  5309  0754  3ECA               	addlw	_pulse_down_times& (0+255)
  5310  0755  0084               	movwf	4
  5311  0756  3003               	movlw	3
  5312  0757  0180               	clrf	0
  5313  0758  0A84               	incf	4,f
  5314  0759  0180               	clrf	0
  5315  075A  0AF3               	incf	ioinit@i,f
  5316  075B  0273               	subwf	ioinit@i,w
  5317  075C  1C03               	skipc
  5318  075D  2F2F               	goto	l7265
  5319                           
  5320                           ;led.c: 264: }
  5321                           ;led.c: 265: study_lamp_stab_state = 0x07;
  5322  075E  3007               	movlw	7
  5323  075F  00FA               	movwf	_study_lamp_stab_state
  5324                           
  5325                           ;led.c: 266: study_time_flag = 0;
  5326  0760  1283               	bcf	3,5	;RP0=0, select bank0
  5327  0761  3055               	movlw	85
  5328  0762  01CF               	clrf	_study_time_flag
  5329                           
  5330                           ;led.c: 269: study_to_pulse_flag = 0;
  5331  0763  01D0               	clrf	_study_time_valid_flag
  5332                           
  5333                           ;led.c: 270: sametime_on_counter = 0;
  5334  0764  01CE               	clrf	_sametime_on_counter
  5335                           
  5336                           ;led.c: 272: red_displaying_flag = 0;
  5337  0765  01CC               	clrf	_red_displaying_flag
  5338                           
  5339                           ;led.c: 273: gre_displaying_flag = 0;
  5340  0766  01C5               	clrf	_gre_displaying_flag
  5341                           
  5342                           ;led.c: 274: yel_displaying_flag = 0;
  5343  0767  01D7               	clrf	_yel_displaying_flag
  5344                           
  5345                           ;led.c: 276: displaying_second_counter = 0;
  5346  0768  01BC               	clrf	_displaying_second_counter
  5347                           
  5348                           ;led.c: 278: ten_mm_counter = 0;
  5349  0769  01D3               	clrf	_ten_mm_counter
  5350                           
  5351                           ;led.c: 279: no_lamp_on_counter = 0;
  5352  076A  01CA               	clrf	_no_lamp_on_counter
  5353  076B  01C6               	clrf	_lamp_counter_valid_flag
  5354                           
  5355                           ;led.c: 281: restart_flag = 0x55;
  5356  076C  00CD               	movwf	_restart_flag
  5357  076D  30FF               	movlw	255
  5358                           
  5359                           ;led.c: 283: usart_rx_write = 0;
  5360  076E  01D5               	clrf	_usart_rx_write
  5361                           
  5362                           ;led.c: 284: usart_rx_read = 0;
  5363  076F  01D4               	clrf	_usart_rx_read
  5364                           
  5365                           ;led.c: 285: communication_flag = 0;
  5366  0770  01BB               	clrf	_communication_flag
  5367  0771  01BA               	clrf	_communication_counter
  5368                           
  5369                           ;led.c: 287: address_of_lamp = 0xff;
  5370  0772  00B9               	movwf	_address_of_lamp
  5371  0773  3003               	movlw	3
  5372                           
  5373                           ;led.c: 289: every_second_update_flag = 0;
  5374  0774  01BF               	clrf	_every_second_update_flag
  5375                           
  5376                           ;led.c: 290: every_second_update_counter = 0;
  5377  0775  01BD               	clrf	_every_second_update_counter
  5378                           
  5379                           ;led.c: 291: every_second_update_delay = 0;
  5380  0776  01BE               	clrf	_every_second_update_delay
  5381                           
  5382                           ;led.c: 292: RC5=1;
  5383  0777  1687               	bsf	7,5
  5384                           
  5385                           ;led.c: 294: g_segment_wink_time_counter = 0;;
  5386  0778  01C4               	clrf	_g_segment_wink_time_counter
  5387                           
  5388                           ;led.c: 295: g_segment_wink_state_flag = 0;
  5389  0779  01C3               	clrf	_g_segment_wink_state_flag
  5390                           
  5391                           ;led.c: 296: g_segment_wink_display_flag = 0;
  5392  077A  01C2               	clrf	_g_segment_wink_display_flag
  5393                           
  5394                           ;led.c: 297: g_segment_100ms_counter = 0;
  5395  077B  01C0               	clrf	_g_segment_100ms_counter
  5396                           
  5397                           ;led.c: 298: g_segment_afresh_state = 0;
  5398  077C  01F9               	clrf	_g_segment_afresh_state
  5399                           
  5400                           ;led.c: 299: g_segment_afresh_counter = 0;
  5401  077D  01C1               	clrf	_g_segment_afresh_counter
  5402                           
  5403                           ;led.c: 300: g_segment_afresh_number = 3;
  5404  077E  00F8               	movwf	_g_segment_afresh_number
  5405                           
  5406                           ;led.c: 302: syn_wink_display_state = 0;
  5407  077F  01D1               	clrf	_syn_wink_display_state
  5408                           
  5409                           ;led.c: 303: syn_wink_display_updata = 0;
  5410  0780  01D2               	clrf	_syn_wink_display_updata
  5411                           
  5412                           ;led.c: 305: RB4=0;
  5413  0781  1206               	bcf	6,4
  5414                           
  5415                           ;led.c: 306: RB5=0;
  5416  0782  1286               	bcf	6,5
  5417                           
  5418                           ;led.c: 307: RB6=0;
  5419  0783  1306               	bcf	6,6
  5420  0784  0008               	return
  5421  0785                     __end_of_ioinit:	
  5422  0785                     PL8:	
  5423  0785  0084               	movwf	4
  5424  0786  0180               	clrf	0
  5425  0787  0A84               	incf	4,f
  5426  0788  0180               	clrf	0
  5427  0789  1003               	clrc
  5428  078A  0D73               	rlf	ioinit@i,w
  5429  078B  0008               	return
  5430  078C                     PL13:	
  5431  078C  3E26               	addlw	_display_data& (0+255)
  5432  078D  0084               	movwf	4
  5433  078E  0180               	clrf	0
  5434  078F  0A84               	incf	4,f
  5435  0790  0180               	clrf	0
  5436  0791  0008               	return
  5437                           
  5438                           	psect	text978
  5439  0792                     __ptext978:	
  5440 ;; =============== function ___wmul ends ============
  5441                           
  5442                           
  5443 ;; *************** function _g_segment_afresh_analyse *****************
  5444 ;; Defined at:
  5445 ;;		line 1120 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;		None
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;		None               void
  5452 ;; Registers used:
  5453 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5454 ;; Tracked objects:
  5455 ;;		On entry : 160/0
  5456 ;;		On exit  : 160/0
  5457 ;;		Unchanged: FFE9F/0
  5458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5459 ;;      Params:         0       0       0       0
  5460 ;;      Locals:         0       0       0       0
  5461 ;;      Temps:          0       6       0       0
  5462 ;;      Totals:         0       6       0       0
  5463 ;;Total ram usage:        6 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    1
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_main
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472  0792                     _g_segment_afresh_analyse:	
  5473                           
  5474                           ;led.c: 1121: if(g_segment_afresh_state != study_time_flag)
  5475                           
  5476                           ; Regs used in _g_segment_afresh_analyse: [wreg-fsr0h+status,2+status,0]
  5477  0792  0879               	movf	_g_segment_afresh_state,w
  5478  0793  064F               	xorwf	_study_time_flag,w
  5479  0794  1903               	skipnz
  5480  0795  2FB3               	goto	l7657
  5481                           
  5482                           ;led.c: 1122: {
  5483                           ;led.c: 1123: g_segment_afresh_state = study_time_flag;
  5484  0796  084F               	movf	_study_time_flag,w
  5485  0797  00F9               	movwf	_g_segment_afresh_state
  5486  0798  3003               	movlw	3
  5487                           
  5488                           ;led.c: 1124: g_segment_afresh_counter = 0;
  5489  0799  01C1               	clrf	_g_segment_afresh_counter
  5490                           
  5491                           ;led.c: 1125: g_segment_afresh_number = 3;
  5492  079A  00F8               	movwf	_g_segment_afresh_number
  5493                           
  5494                           ;led.c: 1126: if((study_time_valid_flag&g_segment_afresh_state) != 0)
  5495  079B  0850               	movf	_study_time_valid_flag,w
  5496  079C  0579               	andwf	_g_segment_afresh_state,w
  5497  079D  1D03               	btfss	3,2
  5498  079E  2FA8               	goto	l7655
  5499  079F  2FB3               	goto	l7657
  5500  07A0                     l7649:	
  5501                           
  5502                           ;led.c: 1131: g_segment_afresh_number = 0;
  5503  07A0  01F8               	clrf	_g_segment_afresh_number
  5504                           
  5505                           ;led.c: 1132: break;
  5506  07A1  2FB3               	goto	l7657
  5507  07A2                     l1428:	
  5508                           ;led.c: 1133: case 0x02:
  5509                           
  5510                           
  5511                           ;led.c: 1134: g_segment_afresh_number = 1;
  5512  07A2  01F8               	clrf	_g_segment_afresh_number
  5513  07A3  0AF8               	incf	_g_segment_afresh_number,f
  5514                           
  5515                           ;led.c: 1135: break;
  5516  07A4  2FB3               	goto	l7657
  5517  07A5                     l7651:	
  5518                           
  5519                           ;led.c: 1137: g_segment_afresh_number = 2;
  5520  07A5  3002               	movlw	2
  5521  07A6  00F8               	movwf	_g_segment_afresh_number
  5522                           
  5523                           ;led.c: 1138: break;
  5524  07A7  2FB3               	goto	l7657
  5525  07A8                     l7655:	
  5526  07A8  0879               	movf	_g_segment_afresh_state,w
  5527                           
  5528                           ; Switch size 1, requested type "space"
  5529                           ; Number of cases is 3, Range of values is 1 to 4
  5530                           ; switch strategies available:
  5531                           ; Name         Instructions Cycles
  5532                           ; simple_byte           10     6 (average)
  5533                           ; direct_byte           18    10 (fixed)
  5534                           ; jumptable            263     9 (fixed)
  5535                           ;	Chosen strategy is simple_byte
  5536  07A9  3A01               	xorlw	1	; case 1
  5537  07AA  1903               	skipnz
  5538  07AB  2FA0               	goto	l7649
  5539  07AC  3A03               	xorlw	3	; case 2
  5540  07AD  1903               	skipnz
  5541  07AE  2FA2               	goto	l1428
  5542  07AF  3A06               	xorlw	6	; case 4
  5543  07B0  1903               	skipnz
  5544  07B1  2FA5               	goto	l7651
  5545  07B2  2FB3               	goto	l1424
  5546  07B3                     l1424:	
  5547  07B3                     l7657:	
  5548                           
  5549                           ;led.c: 1142: }
  5550                           ;led.c: 1143: }
  5551                           ;led.c: 1144: if(g_segment_afresh_number < 3)
  5552  07B3  3003               	movlw	3
  5553  07B4  0278               	subwf	_g_segment_afresh_number,w
  5554  07B5  1803               	skipnc
  5555  07B6  0008               	return
  5556  07B7  3064               	movlw	100
  5557                           
  5558                           ;led.c: 1145: {
  5559                           ;led.c: 1146: g_segment_afresh_counter++;
  5560  07B8  0AC1               	incf	_g_segment_afresh_counter,f
  5561                           
  5562                           ;led.c: 1147: if(g_segment_afresh_counter >= 100)
  5563  07B9  0241               	subwf	_g_segment_afresh_counter,w
  5564  07BA  1C03               	skipc
  5565  07BB  0008               	return
  5566                           
  5567                           ;led.c: 1148: {
  5568                           ;led.c: 1149: g_segment_afresh_counter = 0;
  5569  07BC  01C1               	clrf	_g_segment_afresh_counter
  5570                           
  5571                           ;led.c: 1150: if(current_study_counter[g_segment_afresh_number] > previous_study_counter
      +                          [g_segment_afresh_number])
  5572  07BD  1003               	clrc
  5573  07BE  0D78               	rlf	_g_segment_afresh_number,w
  5574  07BF  3E20               	addlw	_current_study_counter& (0+255)
  5575  07C0  27E8  118A         	fcall	PL12	;call to abstracted procedure
  5576  07C2  3E2C               	addlw	_previous_study_counter& (0+255)
  5577  07C3  27F1  118A         	fcall	PL15	;call to abstracted procedure
  5578  07C5  0860               	movf	??_g_segment_afresh_analyse+1,w
  5579  07C6  0262               	subwf	??_g_segment_afresh_analyse+3,w
  5580  07C7  1D03               	skipz
  5581  07C8  2FCB               	goto	u5185
  5582  07C9  085F               	movf	??_g_segment_afresh_analyse,w
  5583  07CA  0261               	subwf	??_g_segment_afresh_analyse+2,w
  5584  07CB                     u5185:	
  5585  07CB  1803               	skipnc
  5586  07CC  0008               	return
  5587                           
  5588                           ;led.c: 1151: {
  5589                           ;led.c: 1152: if((current_study_counter[g_segment_afresh_number] - previous_study_counte
      +                          r[g_segment_afresh_number]) > 140)
  5590  07CD  1003               	clrc
  5591  07CE  0D78               	rlf	_g_segment_afresh_number,w
  5592  07CF  3E2C               	addlw	_previous_study_counter& (0+255)
  5593  07D0  27E8  118A         	fcall	PL12	;call to abstracted procedure
  5594  07D2  3E20               	addlw	_current_study_counter& (0+255)
  5595  07D3  27F1  118A         	fcall	PL15	;call to abstracted procedure
  5596  07D5  085F               	movf	??_g_segment_afresh_analyse,w
  5597  07D6  0261               	subwf	??_g_segment_afresh_analyse+2,w
  5598  07D7  00E3               	movwf	??_g_segment_afresh_analyse+4
  5599  07D8  0860               	movf	??_g_segment_afresh_analyse+1,w
  5600  07D9  1C03               	skipc
  5601  07DA  0A60               	incf	??_g_segment_afresh_analyse+1,w
  5602  07DB  0262               	subwf	??_g_segment_afresh_analyse+3,w
  5603  07DC  00E4               	movwf	??_g_segment_afresh_analyse+5
  5604  07DD  3000               	movlw	0
  5605  07DE  0264               	subwf	??_g_segment_afresh_analyse+5,w
  5606  07DF  308D               	movlw	141
  5607  07E0  1903               	skipnz
  5608  07E1  0263               	subwf	??_g_segment_afresh_analyse+4,w
  5609  07E2  1C03               	skipc
  5610  07E3  0008               	return
  5611  07E4  3003               	movlw	3
  5612                           
  5613                           ;led.c: 1153: {
  5614                           ;led.c: 1154: study_time_valid_flag = 0;
  5615  07E5  01D0               	clrf	_study_time_valid_flag
  5616                           
  5617                           ;led.c: 1155: g_segment_afresh_number = 3;
  5618  07E6  00F8               	movwf	_g_segment_afresh_number
  5619  07E7  0008               	return
  5620  07E8                     __end_of_g_segment_afresh_analyse:	
  5621  07E8                     PL12:	
  5622  07E8  0084               	movwf	4
  5623  07E9  0800               	movf	0,w
  5624  07EA  00DF               	movwf	??_g_segment_afresh_analyse
  5625  07EB  0A84               	incf	4,f
  5626  07EC  0800               	movf	0,w
  5627  07ED  00E0               	movwf	??_g_segment_afresh_analyse+1
  5628  07EE  1003               	clrc
  5629  07EF  0D78               	rlf	_g_segment_afresh_number,w
  5630  07F0  0008               	return
  5631  07F1                     PL15:	
  5632  07F1  0084               	movwf	4
  5633  07F2  0800               	movf	0,w
  5634  07F3  00E1               	movwf	??_g_segment_afresh_analyse+2
  5635  07F4  0A84               	incf	4,f
  5636  07F5  0800               	movf	0,w
  5637  07F6  00E2               	movwf	??_g_segment_afresh_analyse+3
  5638  07F7  0008               	return
  5639                           
  5640                           	psect	text979
  5641  0DAE                     __ptext979:	
  5642 ;; =============== function _g_segment_afresh_analyse ends ============
  5643                           
  5644                           
  5645 ;; *************** function _lamp_err_state_check *****************
  5646 ;; Defined at:
  5647 ;;		line 1026 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;		None
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;		None               void
  5654 ;; Registers used:
  5655 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5656 ;; Tracked objects:
  5657 ;;		On entry : 160/0
  5658 ;;		On exit  : 160/0
  5659 ;;		Unchanged: FFE9F/0
  5660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5661 ;;      Params:         0       0       0       0
  5662 ;;      Locals:         0       0       0       0
  5663 ;;      Temps:          2       0       0       0
  5664 ;;      Totals:         2       0       0       0
  5665 ;;Total ram usage:        2 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    1
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		_main
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674  0DAE                     _lamp_err_state_check:	
  5675                           
  5676                           ;led.c: 1027: if((study_lamp_stab_state & 0x01)==0) restart_flag = 0x55;
  5677                           
  5678                           ; Regs used in _lamp_err_state_check: [wreg-fsr0h+status,2+status,0]
  5679  0DAE  187A               	btfsc	_study_lamp_stab_state,0
  5680  0DAF  2DB2               	goto	l7613
  5681  0DB0  3055               	movlw	85
  5682  0DB1  00CD               	movwf	_restart_flag
  5683  0DB2                     l7613:	
  5684                           
  5685                           ;led.c: 1029: if((study_lamp_stab_state&0x07)==0x07)
  5686  0DB2  087A               	movf	_study_lamp_stab_state,w
  5687  0DB3  3907               	andlw	7
  5688  0DB4  3A07               	xorlw	7
  5689  0DB5  1D03               	skipz
  5690  0DB6  2DC6               	goto	l7621
  5691  0DB7  3064               	movlw	100
  5692                           
  5693                           ;led.c: 1030: {
  5694                           ;led.c: 1031: no_lamp_on_counter++;
  5695  0DB8  0ACA               	incf	_no_lamp_on_counter,f
  5696                           
  5697                           ;led.c: 1032: if(no_lamp_on_counter >= 100)
  5698  0DB9  024A               	subwf	_no_lamp_on_counter,w
  5699  0DBA  1C03               	skipc
  5700  0DBB  2DD3               	goto	l7633
  5701                           
  5702                           ;led.c: 1033: {
  5703                           ;led.c: 1034: no_lamp_on_counter = 0;
  5704  0DBC  01CA               	clrf	_no_lamp_on_counter
  5705                           
  5706                           ;led.c: 1035: study_time_valid_flag = 0;
  5707  0DBD  01D0               	clrf	_study_time_valid_flag
  5708                           
  5709                           ;led.c: 1036: previous_study_counter[0] = 0;
  5710  0DBE  01AC               	clrf	_previous_study_counter
  5711  0DBF  01AD               	clrf	_previous_study_counter+1
  5712                           
  5713                           ;led.c: 1037: previous_study_counter[1] = 0;
  5714  0DC0  01AE               	clrf	_previous_study_counter+2
  5715  0DC1  01AF               	clrf	_previous_study_counter+3
  5716                           
  5717                           ;led.c: 1038: previous_study_counter[2] = 0;
  5718  0DC2  01B0               	clrf	_previous_study_counter+4
  5719  0DC3  01B1               	clrf	_previous_study_counter+5
  5720                           
  5721                           ;led.c: 1040: pulse_down_time_valid_flag = 0;
  5722  0DC4  01C6               	clrf	_lamp_counter_valid_flag
  5723  0DC5  2DD3               	goto	l7633
  5724  0DC6                     l7621:	
  5725                           
  5726                           ;led.c: 1043: else no_lamp_on_counter = 0;
  5727  0DC6  01CA               	clrf	_no_lamp_on_counter
  5728  0DC7  2DD3               	goto	l7633
  5729  0DC8                     l1396:	
  5730  0DC8                     l7623:	
  5731  0DC8  3032               	movlw	50
  5732                           
  5733                           ;led.c: 1048: case 1:
  5734                           ;led.c: 1049: case 2:
  5735                           ;led.c: 1050: case 4:
  5736                           ;led.c: 1051: sametime_on_counter++;
  5737  0DC9  0ACE               	incf	_sametime_on_counter,f
  5738                           
  5739                           ;led.c: 1052: if(sametime_on_counter >= 50)
  5740  0DCA  024E               	subwf	_sametime_on_counter,w
  5741  0DCB  1C03               	skipc
  5742  0DCC  0008               	return
  5743                           
  5744                           ;led.c: 1053: {
  5745                           ;led.c: 1054: sametime_on_counter = 0;
  5746  0DCD  01CE               	clrf	_sametime_on_counter
  5747                           
  5748                           ;led.c: 1055: study_time_valid_flag = 0;
  5749  0DCE  01D0               	clrf	_study_time_valid_flag
  5750                           
  5751                           ;led.c: 1057: pulse_down_time_valid_flag = 0;
  5752  0DCF  01C6               	clrf	_lamp_counter_valid_flag
  5753  0DD0  0008               	return
  5754  0DD1                     l7629:	
  5755                           
  5756                           ;led.c: 1061: sametime_on_counter = 0;
  5757  0DD1  01CE               	clrf	_sametime_on_counter
  5758                           
  5759                           ;led.c: 1062: break;
  5760  0DD2  0008               	return
  5761  0DD3                     l7633:	
  5762  0DD3  087A               	movf	_study_lamp_stab_state,w
  5763  0DD4  3907               	andlw	7
  5764  0DD5  00F3               	movwf	??_lamp_err_state_check
  5765  0DD6  01F4               	clrf	??_lamp_err_state_check+1
  5766                           
  5767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5768                           ; Switch size 1, requested type "space"
  5769                           ; Number of cases is 1, Range of values is 0 to 0
  5770                           ; switch strategies available:
  5771                           ; Name         Instructions Cycles
  5772                           ; simple_byte            4     3 (average)
  5773                           ; direct_byte            9     7 (fixed)
  5774                           ; jumptable            260     6 (fixed)
  5775                           ; rangetable             5     6 (fixed)
  5776                           ; spacedrange            8     9 (fixed)
  5777                           ; locatedrange           1     3 (fixed)
  5778                           ;	Chosen strategy is simple_byte
  5779  0DD7  0874               	movf	??_lamp_err_state_check+1,w
  5780  0DD8  3A00               	xorlw	0	; case 0
  5781  0DD9  1903               	skipnz
  5782  0DDA  2DDC               	goto	l8803
  5783  0DDB  2DD1               	goto	l7629
  5784  0DDC                     l8803:	
  5785                           
  5786                           ; Switch size 1, requested type "space"
  5787                           ; Number of cases is 4, Range of values is 0 to 4
  5788                           ; switch strategies available:
  5789                           ; Name         Instructions Cycles
  5790                           ; simple_byte           13     7 (average)
  5791                           ; direct_byte           17     7 (fixed)
  5792                           ; jumptable            260     6 (fixed)
  5793                           ; rangetable             9     6 (fixed)
  5794                           ; spacedrange           16     9 (fixed)
  5795                           ; locatedrange           5     3 (fixed)
  5796                           ;	Chosen strategy is simple_byte
  5797  0DDC  0873               	movf	??_lamp_err_state_check,w
  5798  0DDD  3A00               	xorlw	0	; case 0
  5799  0DDE  1903               	skipnz
  5800  0DDF  2DC8               	goto	l1396
  5801  0DE0  3A01               	xorlw	1	; case 1
  5802  0DE1  1903               	skipnz
  5803  0DE2  2DC8               	goto	l7623
  5804  0DE3  3A03               	xorlw	3	; case 2
  5805  0DE4  1903               	skipnz
  5806  0DE5  2DC8               	goto	l7623
  5807  0DE6  3A06               	xorlw	6	; case 4
  5808  0DE7  1903               	skipnz
  5809  0DE8  2DC8               	goto	l7623
  5810  0DE9  2DD1               	goto	l7629
  5811  0DEA  0008               	return
  5812  0DEB                     __end_of_lamp_err_state_check:	
  5813                           
  5814                           	psect	text980
  5815  0DEB                     __ptext980:	
  5816 ;; =============== function _lamp_err_state_check ends ============
  5817                           
  5818                           
  5819 ;; *************** function _study_mode_filterAC_DC *****************
  5820 ;; Defined at:
  5821 ;;		line 781 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;		None
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;  i               1    6[COMMON] unsigned char 
  5826 ;;  temp_var1       1    5[COMMON] unsigned char 
  5827 ;;  temp_var3       1    4[COMMON] unsigned char 
  5828 ;;  temp_var2       1    3[COMMON] unsigned char 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5833 ;; Tracked objects:
  5834 ;;		On entry : 60/0
  5835 ;;		On exit  : 60/0
  5836 ;;		Unchanged: FFE9F/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5838 ;;      Params:         0       0       0       0
  5839 ;;      Locals:         4       0       0       0
  5840 ;;      Temps:          0       0       0       0
  5841 ;;      Totals:         4       0       0       0
  5842 ;;Total ram usage:        4 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    1
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_main
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851  0DEB                     _study_mode_filterAC_DC:	
  5852  0DEB  3007               	movlw	7
  5853                           
  5854                           ;led.c: 782: unsigned char i;
  5855                           ;led.c: 783: unsigned char temp_var1;
  5856                           ;led.c: 784: unsigned char temp_var2;
  5857                           ;led.c: 785: unsigned char temp_var3;
  5858                           ;led.c: 787: temp_var1 = 0x01;
  5859                           
  5860                           ; Regs used in _study_mode_filterAC_DC: [wreg-fsr0h+status,2+status,0]
  5861  0DEC  01F5               	clrf	study_mode_filterAC_DC@temp_var1
  5862  0DED  0AF5               	incf	study_mode_filterAC_DC@temp_var1,f
  5863                           
  5864                           ;led.c: 788: lamp_stab_state &= 0x07;
  5865  0DEE  05C7               	andwf	_lamp_stab_state,f
  5866                           
  5867                           ;led.c: 789: temp_var2 = lamp_stab_state ^ study_lamp_stab_state;
  5868  0DEF  0847               	movf	_lamp_stab_state,w
  5869  0DF0  067A               	xorwf	_study_lamp_stab_state,w
  5870  0DF1  00F3               	movwf	study_mode_filterAC_DC@temp_var2
  5871                           
  5872                           ;led.c: 791: if(temp_var2 != 0)
  5873  0DF2  0873               	movf	study_mode_filterAC_DC@temp_var2,w
  5874  0DF3  1903               	btfsc	3,2
  5875  0DF4  2E2E               	goto	l7607
  5876                           
  5877                           ;led.c: 792: {
  5878                           ;led.c: 793: for(i=0;i<3;i++)
  5879  0DF5  01F6               	clrf	study_mode_filterAC_DC@i
  5880  0DF6                     l7571:	
  5881                           
  5882                           ;led.c: 794: {
  5883                           ;led.c: 795: if((temp_var2&temp_var1)==temp_var1)
  5884  0DF6  0873               	movf	study_mode_filterAC_DC@temp_var2,w
  5885  0DF7  0575               	andwf	study_mode_filterAC_DC@temp_var1,w
  5886  0DF8  0675               	xorwf	study_mode_filterAC_DC@temp_var1,w
  5887  0DF9  1D03               	skipz
  5888  0DFA  2E21               	goto	l7599
  5889                           
  5890                           ;led.c: 796: {
  5891                           ;led.c: 797: study_chge_counter[i]++;
  5892  0DFB  0876               	movf	study_mode_filterAC_DC@i,w
  5893  0DFC  3E35               	addlw	_study_chge_counter& (0+255)
  5894  0DFD  0084               	movwf	4
  5895  0DFE  1383               	bcf	3,7	;select IRP bank0
  5896  0DFF  0A80               	incf	0,f
  5897                           
  5898                           ;led.c: 798: if((study_lamp_stab_state&temp_var1)==temp_var1)
  5899  0E00  087A               	movf	_study_lamp_stab_state,w
  5900  0E01  0575               	andwf	study_mode_filterAC_DC@temp_var1,w
  5901  0E02  0675               	xorwf	study_mode_filterAC_DC@temp_var1,w
  5902  0E03  1D03               	skipz
  5903  0E04  2E13               	goto	l7583
  5904                           
  5905                           ;led.c: 799: {
  5906                           ;led.c: 800: if(study_chge_counter[i] >= 10)
  5907  0E05  0876               	movf	study_mode_filterAC_DC@i,w
  5908  0E06  3E35               	addlw	_study_chge_counter& (0+255)
  5909  0E07  0084               	movwf	4
  5910  0E08  300A               	movlw	10
  5911  0E09                     L23:	
  5912  0E09  0200               	subwf	0,w
  5913  0E0A  1C03               	skipc
  5914  0E0B  2E27               	goto	L22
  5915  0E0C                     l7579:	
  5916                           
  5917                           ;led.c: 801: {
  5918                           ;led.c: 802: study_chge_counter[i] = 0;
  5919  0E0C  0876               	movf	study_mode_filterAC_DC@i,w
  5920  0E0D  3E35               	addlw	_study_chge_counter& (0+255)
  5921  0E0E  0084               	movwf	4
  5922  0E0F  0180               	clrf	0
  5923                           
  5924                           ;led.c: 803: study_lamp_stab_state ^= temp_var1;
  5925  0E10  0875               	movf	study_mode_filterAC_DC@temp_var1,w
  5926  0E11  06FA               	xorwf	_study_lamp_stab_state,f
  5927  0E12  2E26               	goto	l7601
  5928  0E13                     l7583:	
  5929                           
  5930                           ;led.c: 806: else
  5931                           ;led.c: 807: {
  5932                           ;led.c: 808: temp_var3 = (~temp_var1)&0x07;
  5933  0E13  0975               	comf	study_mode_filterAC_DC@temp_var1,w
  5934  0E14  00F4               	movwf	study_mode_filterAC_DC@temp_var3
  5935  0E15  3007               	movlw	7
  5936  0E16  05F4               	andwf	study_mode_filterAC_DC@temp_var3,f
  5937                           
  5938                           ;led.c: 809: if((study_lamp_stab_state&temp_var3) == temp_var3)
  5939  0E17  087A               	movf	_study_lamp_stab_state,w
  5940  0E18  0574               	andwf	study_mode_filterAC_DC@temp_var3,w
  5941  0E19  0674               	xorwf	study_mode_filterAC_DC@temp_var3,w
  5942  0E1A  1D03               	skipz
  5943  0E1B  2E0C               	goto	l7579
  5944                           
  5945                           ;led.c: 810: {
  5946                           ;led.c: 811: if(study_chge_counter[i] >= 75)
  5947  0E1C  0876               	movf	study_mode_filterAC_DC@i,w
  5948  0E1D  3E35               	addlw	_study_chge_counter& (0+255)
  5949  0E1E  0084               	movwf	4
  5950  0E1F  304B               	movlw	75
  5951  0E20  2E09               	goto	L23
  5952  0E21                     l7599:	
  5953                           ;led.c: 821: }
  5954                           ;led.c: 822: }
  5955                           ;led.c: 823: }
  5956                           
  5957                           
  5958                           ;led.c: 824: else
  5959                           ;led.c: 825: {
  5960                           ;led.c: 826: study_chge_counter[i] = 0;
  5961  0E21  0876               	movf	study_mode_filterAC_DC@i,w
  5962  0E22  3E35               	addlw	_study_chge_counter& (0+255)
  5963  0E23  0084               	movwf	4
  5964  0E24  1383               	bcf	3,7	;select IRP bank0
  5965  0E25  0180               	clrf	0
  5966  0E26                     l7601:	
  5967                           
  5968                           ;led.c: 827: }
  5969                           ;led.c: 828: temp_var1 <<= 1;
  5970  0E26  1003               	clrc
  5971  0E27                     L22:	
  5972  0E27  3003               	movlw	3
  5973  0E28  0DF5               	rlf	study_mode_filterAC_DC@temp_var1,f
  5974  0E29  0AF6               	incf	study_mode_filterAC_DC@i,f
  5975  0E2A  0276               	subwf	study_mode_filterAC_DC@i,w
  5976  0E2B  1803               	btfsc	3,0
  5977  0E2C  0008               	return
  5978  0E2D  2DF6               	goto	l7571
  5979  0E2E                     l7607:	
  5980                           
  5981                           ;led.c: 831: else
  5982                           ;led.c: 832: {
  5983                           ;led.c: 833: study_chge_counter[0] = 0;
  5984  0E2E  01B5               	clrf	_study_chge_counter
  5985                           
  5986                           ;led.c: 834: study_chge_counter[1] = 0;
  5987  0E2F  01B6               	clrf	_study_chge_counter+1
  5988                           
  5989                           ;led.c: 835: study_chge_counter[2] = 0;
  5990  0E30  01B7               	clrf	_study_chge_counter+2
  5991  0E31  0008               	return
  5992  0E32                     __end_of_study_mode_filterAC_DC:	
  5993                           
  5994                           	psect	text981
  5995  0E32                     __ptext981:	
  5996 ;; =============== function _study_mode_filterAC_DC ends ============
  5997                           
  5998                           
  5999 ;; *************** function _filterAC_DC *****************
  6000 ;; Defined at:
  6001 ;;		line 730 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;		None
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  i               1    6[COMMON] unsigned char 
  6006 ;;  temp_var2       1    5[COMMON] unsigned char 
  6007 ;;  temp_var1       1    4[COMMON] unsigned char 
  6008 ;; Return value:  Size  Location     Type
  6009 ;;		None               void
  6010 ;; Registers used:
  6011 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6012 ;; Tracked objects:
  6013 ;;		On entry : 60/0
  6014 ;;		On exit  : 60/0
  6015 ;;		Unchanged: FFE9F/0
  6016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6017 ;;      Params:         0       0       0       0
  6018 ;;      Locals:         3       0       0       0
  6019 ;;      Temps:          1       0       0       0
  6020 ;;      Totals:         4       0       0       0
  6021 ;;Total ram usage:        4 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; Hardware stack levels required when called:    1
  6024 ;; This function calls:
  6025 ;;		Nothing
  6026 ;; This function is called by:
  6027 ;;		_main
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030  0E32                     _filterAC_DC:	
  6031                           
  6032                           ;led.c: 731: unsigned char i;
  6033                           ;led.c: 732: unsigned char temp_var1;
  6034                           ;led.c: 733: unsigned char temp_var2;
  6035                           ;led.c: 734: lamp_temp_state = ((PORTC>>2)&0x07);
  6036                           
  6037                           ; Regs used in _filterAC_DC: [wreg-fsr0h+status,2+status,0]
  6038  0E32  0807               	movf	7,w	;volatile
  6039  0E33  00F3               	movwf	??_filterAC_DC
  6040  0E34  1003               	clrc
  6041  0E35  0CF3               	rrf	??_filterAC_DC,f
  6042  0E36  1003               	clrc
  6043  0E37  0CF3               	rrf	??_filterAC_DC,f
  6044  0E38  0873               	movf	??_filterAC_DC,w
  6045  0E39  00C8               	movwf	_lamp_temp_state
  6046  0E3A  3007               	movlw	7
  6047  0E3B  05C8               	andwf	_lamp_temp_state,f
  6048                           
  6049                           ;led.c: 735: if(lamp_temp_state == 4)lamp_temp_state = 6;
  6050  0E3C  0848               	movf	_lamp_temp_state,w
  6051  0E3D  3A04               	xorlw	4
  6052  0E3E  1D03               	skipz
  6053  0E3F  2E42               	goto	l7521
  6054  0E40  3006               	movlw	6
  6055  0E41  00C8               	movwf	_lamp_temp_state
  6056  0E42                     l7521:	
  6057                           
  6058                           ;led.c: 737: temp_var1 = lamp_temp_state ^ lamp_stab_state;
  6059  0E42  0848               	movf	_lamp_temp_state,w
  6060  0E43  0647               	xorwf	_lamp_stab_state,w
  6061  0E44  00F4               	movwf	filterAC_DC@temp_var1
  6062                           
  6063                           ;led.c: 738: if(temp_var1!=0)
  6064  0E45  0874               	movf	filterAC_DC@temp_var1,w
  6065  0E46  1903               	btfsc	3,2
  6066  0E47  2E7D               	goto	l7557
  6067                           
  6068                           ;led.c: 739: {
  6069                           ;led.c: 740: temp_var2 = 0x01;
  6070  0E48  01F5               	clrf	filterAC_DC@temp_var2
  6071  0E49  0AF5               	incf	filterAC_DC@temp_var2,f
  6072                           
  6073                           ;led.c: 741: for(i=0;i<3;i++)
  6074  0E4A  01F6               	clrf	filterAC_DC@i
  6075  0E4B                     l7533:	
  6076                           
  6077                           ;led.c: 742: {
  6078                           ;led.c: 743: if((temp_var1 & temp_var2)==temp_var2)
  6079  0E4B  0874               	movf	filterAC_DC@temp_var1,w
  6080  0E4C  0575               	andwf	filterAC_DC@temp_var2,w
  6081  0E4D  0675               	xorwf	filterAC_DC@temp_var2,w
  6082  0E4E  1D03               	skipz
  6083  0E4F  2E63               	goto	l7541
  6084                           
  6085                           ;led.c: 744: {
  6086                           ;led.c: 745: if((lamp_stab_state & temp_var2)==temp_var2)
  6087  0E50  0847               	movf	_lamp_stab_state,w
  6088  0E51  0575               	andwf	filterAC_DC@temp_var2,w
  6089  0E52  0675               	xorwf	filterAC_DC@temp_var2,w
  6090  0E53  1D03               	skipz
  6091  0E54  2E69               	goto	l7543
  6092                           
  6093                           ;led.c: 746: {
  6094                           ;led.c: 747: lamp_chge_counter[i]++;
  6095  0E55  0876               	movf	filterAC_DC@i,w
  6096  0E56  3E32               	addlw	_lamp_chge_counter& (0+255)
  6097  0E57  0084               	movwf	4
  6098  0E58  1383               	bcf	3,7	;select IRP bank0
  6099  0E59  0A80               	incf	0,f
  6100                           
  6101                           ;led.c: 748: if(lamp_chge_counter[i] >= 2)
  6102  0E5A  0876               	movf	filterAC_DC@i,w
  6103  0E5B  3E32               	addlw	_lamp_chge_counter& (0+255)
  6104  0E5C  0084               	movwf	4
  6105  0E5D  3002               	movlw	2
  6106  0E5E  0200               	subwf	0,w
  6107  0E5F  1C03               	skipc
  6108  0E60  2E76               	goto	L24
  6109  0E61                     l7539:	
  6110                           
  6111                           ;led.c: 749: {
  6112                           ;led.c: 750: lamp_stab_state ^= temp_var2;
  6113  0E61  0875               	movf	filterAC_DC@temp_var2,w
  6114  0E62  06C7               	xorwf	_lamp_stab_state,f
  6115  0E63                     l7541:	
  6116                           
  6117                           ;led.c: 751: lamp_chge_counter[i] = 0;
  6118  0E63  0876               	movf	filterAC_DC@i,w
  6119  0E64  3E32               	addlw	_lamp_chge_counter& (0+255)
  6120  0E65  0084               	movwf	4
  6121  0E66  1383               	bcf	3,7	;select IRP bank0
  6122  0E67  0180               	clrf	0
  6123  0E68  2E75               	goto	l7551
  6124  0E69                     l7543:	
  6125                           
  6126                           ;led.c: 754: else
  6127                           ;led.c: 755: {
  6128                           ;led.c: 756: lamp_chge_counter[i]++;
  6129  0E69  0876               	movf	filterAC_DC@i,w
  6130  0E6A  3E32               	addlw	_lamp_chge_counter& (0+255)
  6131  0E6B  0084               	movwf	4
  6132  0E6C  1383               	bcf	3,7	;select IRP bank0
  6133  0E6D  0A80               	incf	0,f
  6134                           
  6135                           ;led.c: 757: if(lamp_chge_counter[i] >= 21)
  6136  0E6E  0876               	movf	filterAC_DC@i,w
  6137  0E6F  3E32               	addlw	_lamp_chge_counter& (0+255)
  6138  0E70  0084               	movwf	4
  6139  0E71  3015               	movlw	21
  6140  0E72  0200               	subwf	0,w
  6141  0E73  1803               	btfsc	3,0
  6142  0E74  2E61               	goto	l7539
  6143  0E75                     l7551:	
  6144                           
  6145                           ;led.c: 767: }
  6146                           ;led.c: 768: temp_var2 <<= 1;
  6147  0E75  1003               	clrc
  6148  0E76                     L24:	
  6149  0E76  3003               	movlw	3
  6150  0E77  0DF5               	rlf	filterAC_DC@temp_var2,f
  6151  0E78  0AF6               	incf	filterAC_DC@i,f
  6152  0E79  0276               	subwf	filterAC_DC@i,w
  6153  0E7A  1803               	btfsc	3,0
  6154  0E7B  0008               	return
  6155  0E7C  2E4B               	goto	l7533
  6156  0E7D                     l7557:	
  6157                           
  6158                           ;led.c: 771: else
  6159                           ;led.c: 772: {
  6160                           ;led.c: 773: lamp_chge_counter[0] = 0;
  6161  0E7D  01B2               	clrf	_lamp_chge_counter
  6162                           
  6163                           ;led.c: 774: lamp_chge_counter[1] = 0;
  6164  0E7E  01B3               	clrf	_lamp_chge_counter+1
  6165                           
  6166                           ;led.c: 775: lamp_chge_counter[2] = 0;
  6167  0E7F  01B4               	clrf	_lamp_chge_counter+2
  6168  0E80  0008               	return
  6169  0E81                     __end_of_filterAC_DC:	
  6170                           
  6171                           	psect	text985
  6172  0D4F                     __ptext985:	
  6173 ;; =============== function _red_displaydrv ends ============
  6174                           
  6175                           
  6176 ;; *************** function _timer1init *****************
  6177 ;; Defined at:
  6178 ;;		line 358 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;		None               void
  6185 ;; Registers used:
  6186 ;;		wreg, status,2
  6187 ;; Tracked objects:
  6188 ;;		On entry : 17F/20
  6189 ;;		On exit  : 17F/0
  6190 ;;		Unchanged: FFE80/0
  6191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6192 ;;      Params:         0       0       0       0
  6193 ;;      Locals:         0       0       0       0
  6194 ;;      Temps:          0       0       0       0
  6195 ;;      Totals:         0       0       0       0
  6196 ;;Total ram usage:        0 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    1
  6199 ;; This function calls:
  6200 ;;		Nothing
  6201 ;; This function is called by:
  6202 ;;		_main
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205  0D4F                     _timer1init:	
  6206                           
  6207                           ;led.c: 359: T1CON=0X21;
  6208                           
  6209                           ; Regs used in _timer1init: [wreg+status,2]
  6210  0D4F  3021               	movlw	33
  6211  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  6212  0D51  0090               	movwf	16	;volatile
  6213                           
  6214                           ;led.c: 360: TMR1IF=0;
  6215  0D52  100C               	bcf	12,0
  6216                           
  6217                           ;led.c: 361: TMR1IE=1;
  6218  0D53  1683               	bsf	3,5	;RP0=1, select bank1
  6219  0D54  30FB               	movlw	251
  6220  0D55  140C               	bsf	12,0
  6221                           
  6222                           ;led.c: 362: TMR1H=0xFB;
  6223  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  6224  0D57  008F               	movwf	15	;volatile
  6225                           
  6226                           ;led.c: 363: TMR1L=0x85;
  6227  0D58  3085               	movlw	133
  6228  0D59  008E               	movwf	14	;volatile
  6229                           
  6230                           ;led.c: 364: PIR1=0;
  6231  0D5A  018C               	clrf	12	;volatile
  6232                           
  6233                           ;led.c: 365: PEIE=1;
  6234  0D5B  170B               	bsf	11,6
  6235                           
  6236                           ;led.c: 366: GIE=1;
  6237  0D5C  178B               	bsf	11,7
  6238  0D5D  0008               	return
  6239  0D5E                     __end_of_timer1init:	
  6240                           
  6241                           	psect	text986
  6242  0D70                     __ptext986:	
  6243 ;; =============== function _timer1init ends ============
  6244                           
  6245                           
  6246 ;; *************** function _usartinit *****************
  6247 ;; Defined at:
  6248 ;;		line 335 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;		None
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;		None               void
  6255 ;; Registers used:
  6256 ;;		wreg, status,2
  6257 ;; Tracked objects:
  6258 ;;		On entry : 17F/0
  6259 ;;		On exit  : 17F/20
  6260 ;;		Unchanged: FFE80/0
  6261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6262 ;;      Params:         0       0       0       0
  6263 ;;      Locals:         0       0       0       0
  6264 ;;      Temps:          0       0       0       0
  6265 ;;      Totals:         0       0       0       0
  6266 ;;Total ram usage:        0 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    1
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		_main
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275  0D70                     _usartinit:	
  6276                           
  6277                           ;led.c: 336: SYNC = 0;
  6278                           
  6279                           ; Regs used in _usartinit: [wreg+status,2]
  6280  0D70  1683               	bsf	3,5	;RP0=1, select bank1
  6281  0D71  1218               	bcf	24,4
  6282                           
  6283                           ;led.c: 337: BRGH = 0;
  6284  0D72  1118               	bcf	24,2
  6285                           
  6286                           ;led.c: 338: BRG16 = 1;
  6287  0D73  1703               	bsf	3,6	;RP1=1, select bank3
  6288  0D74  1587               	bsf	7,3
  6289                           
  6290                           ;led.c: 339: SPBRGH=0X00;SPBRG=0X77;;
  6291  0D75  1303               	bcf	3,6	;RP1=0, select bank1
  6292  0D76  019A               	clrf	26	;volatile
  6293  0D77  3077               	movlw	119
  6294  0D78  0099               	movwf	25	;volatile
  6295                           
  6296                           ;led.c: 340: SPEN = 1;
  6297  0D79  1283               	bcf	3,5	;RP0=0, select bank0
  6298  0D7A  1798               	bsf	24,7
  6299                           
  6300                           ;led.c: 341: CREN = 1;
  6301  0D7B  1618               	bsf	24,4
  6302                           
  6303                           ;led.c: 342: TXIE = 0;
  6304  0D7C  1683               	bsf	3,5	;RP0=1, select bank1
  6305  0D7D  120C               	bcf	12,4
  6306                           
  6307                           ;led.c: 343: TXEN = 1;
  6308  0D7E  1698               	bsf	24,5
  6309                           
  6310                           ;led.c: 344: RX9 = 0;
  6311  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  6312  0D80  1318               	bcf	24,6
  6313                           
  6314                           ;led.c: 345: TX9 = 0;
  6315  0D81  1683               	bsf	3,5	;RP0=1, select bank1
  6316  0D82  1318               	bcf	24,6
  6317                           
  6318                           ;led.c: 347: TRISC6=1;
  6319  0D83  1707               	bsf	7,6
  6320                           
  6321                           ;led.c: 348: TRISC7=1;
  6322  0D84  1787               	bsf	7,7
  6323                           
  6324                           ;led.c: 349: PEIE=1;
  6325  0D85  170B               	bsf	11,6
  6326                           
  6327                           ;led.c: 350: GIE=1;
  6328  0D86  178B               	bsf	11,7
  6329                           
  6330                           ;led.c: 351: RCIE = 1;
  6331  0D87  168C               	bsf	12,5
  6332  0D88  0008               	return
  6333  0D89                     __end_of_usartinit:	
  6334                           
  6335                           	psect	text989
  6336  0EF4                     __ptext989:	
  6337 ;; =============== function _ioinit ends ============
  6338                           
  6339                           
  6340 ;; *************** function _change_DM13H *****************
  6341 ;; Defined at:
  6342 ;;		line 113 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  k               1    6[COMMON] unsigned char 
  6347 ;;  i               1    5[COMMON] unsigned char 
  6348 ;;  temp            1    4[COMMON] unsigned char 
  6349 ;;  ss              1    3[COMMON] unsigned char 
  6350 ;; Return value:  Size  Location     Type
  6351 ;;		None               void
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0
  6354 ;; Tracked objects:
  6355 ;;		On entry : 17F/0
  6356 ;;		On exit  : 17F/0
  6357 ;;		Unchanged: FFE80/0
  6358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6359 ;;      Params:         0       0       0       0
  6360 ;;      Locals:         4       0       0       0
  6361 ;;      Temps:          0       0       0       0
  6362 ;;      Totals:         4       0       0       0
  6363 ;;Total ram usage:        4 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:    1
  6366 ;; This function calls:
  6367 ;;		Nothing
  6368 ;; This function is called by:
  6369 ;;		_main
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372  0EF4                     _change_DM13H:	
  6373                           
  6374                           ;led.c: 115: unsigned char i,ss,k,temp;
  6375                           ;led.c: 118: RB5 = 1;
  6376                           
  6377                           ; Regs used in _change_DM13H: [wreg+status,2+status,0]
  6378  0EF4  1686               	bsf	6,5
  6379                           
  6380                           ;led.c: 119: for(k=0;k<2;k++);
  6381  0EF5  01F6               	clrf	change_DM13H@k
  6382  0EF6                     l6889:	
  6383  0EF6  3002               	movlw	2
  6384  0EF7  0AF6               	incf	change_DM13H@k,f
  6385  0EF8  0276               	subwf	change_DM13H@k,w
  6386  0EF9  1C03               	skipc
  6387  0EFA  2EF6               	goto	l6889
  6388                           
  6389                           ;led.c: 120: RB3 = 0;
  6390  0EFB  1186               	bcf	6,3
  6391                           
  6392                           ;led.c: 121: for(k=0;k<2;k++);
  6393  0EFC  01F6               	clrf	change_DM13H@k
  6394  0EFD                     l6899:	
  6395  0EFD  3002               	movlw	2
  6396  0EFE  0AF6               	incf	change_DM13H@k,f
  6397  0EFF  0276               	subwf	change_DM13H@k,w
  6398  0F00  1C03               	skipc
  6399  0F01  2EFD               	goto	l6899
  6400                           
  6401                           ;led.c: 122: RB3 = 1;
  6402  0F02  1586               	bsf	6,3
  6403                           
  6404                           ;led.c: 123: for(k=0;k<2;k++);
  6405  0F03  01F6               	clrf	change_DM13H@k
  6406  0F04                     l6909:	
  6407  0F04  3002               	movlw	2
  6408  0F05  0AF6               	incf	change_DM13H@k,f
  6409  0F06  0276               	subwf	change_DM13H@k,w
  6410  0F07  1C03               	skipc
  6411  0F08  2F04               	goto	l6909
  6412                           
  6413                           ;led.c: 124: RB3 = 0;
  6414  0F09  1186               	bcf	6,3
  6415                           
  6416                           ;led.c: 125: for(k=0;k<2;k++);
  6417  0F0A  01F6               	clrf	change_DM13H@k
  6418  0F0B                     l6919:	
  6419  0F0B  3002               	movlw	2
  6420  0F0C  0AF6               	incf	change_DM13H@k,f
  6421  0F0D  0276               	subwf	change_DM13H@k,w
  6422  0F0E  1C03               	skipc
  6423  0F0F  2F0B               	goto	l6919
  6424                           
  6425                           ;led.c: 126: RB3 = 1;
  6426  0F10  1586               	bsf	6,3
  6427                           
  6428                           ;led.c: 127: for(k=0;k<2;k++);
  6429  0F11  01F6               	clrf	change_DM13H@k
  6430  0F12                     l6929:	
  6431  0F12  3002               	movlw	2
  6432  0F13  0AF6               	incf	change_DM13H@k,f
  6433  0F14  0276               	subwf	change_DM13H@k,w
  6434  0F15  1C03               	skipc
  6435  0F16  2F12               	goto	l6929
  6436                           
  6437                           ;led.c: 128: RB3 = 0;
  6438  0F17  1186               	bcf	6,3
  6439                           
  6440                           ;led.c: 129: for(k=0;k<2;k++);
  6441  0F18  01F6               	clrf	change_DM13H@k
  6442  0F19                     l6939:	
  6443  0F19  3002               	movlw	2
  6444  0F1A  0AF6               	incf	change_DM13H@k,f
  6445  0F1B  0276               	subwf	change_DM13H@k,w
  6446  0F1C  1C03               	skipc
  6447  0F1D  2F19               	goto	l6939
  6448                           
  6449                           ;led.c: 130: RB3 = 1;
  6450  0F1E  1586               	bsf	6,3
  6451                           
  6452                           ;led.c: 131: for(k=0;k<2;k++);
  6453  0F1F  01F6               	clrf	change_DM13H@k
  6454  0F20                     l6949:	
  6455  0F20  3002               	movlw	2
  6456  0F21  0AF6               	incf	change_DM13H@k,f
  6457  0F22  0276               	subwf	change_DM13H@k,w
  6458  0F23  1C03               	skipc
  6459  0F24  2F20               	goto	l6949
  6460                           
  6461                           ;led.c: 132: RB3 = 0;
  6462  0F25  1186               	bcf	6,3
  6463                           
  6464                           ;led.c: 133: for(k=0;k<2;k++);
  6465  0F26  01F6               	clrf	change_DM13H@k
  6466  0F27                     l6959:	
  6467  0F27  3002               	movlw	2
  6468  0F28  0AF6               	incf	change_DM13H@k,f
  6469  0F29  0276               	subwf	change_DM13H@k,w
  6470  0F2A  1C03               	skipc
  6471  0F2B  2F27               	goto	l6959
  6472                           
  6473                           ;led.c: 134: RB3 = 1;
  6474  0F2C  1586               	bsf	6,3
  6475                           
  6476                           ;led.c: 135: for(k=0;k<2;k++);
  6477  0F2D  01F6               	clrf	change_DM13H@k
  6478  0F2E                     l6969:	
  6479  0F2E  3002               	movlw	2
  6480  0F2F  0AF6               	incf	change_DM13H@k,f
  6481  0F30  0276               	subwf	change_DM13H@k,w
  6482  0F31  1C03               	skipc
  6483  0F32  2F2E               	goto	l6969
  6484                           
  6485                           ;led.c: 136: RB3 = 0;
  6486  0F33  1186               	bcf	6,3
  6487                           
  6488                           ;led.c: 137: for(k=0;k<2;k++);
  6489  0F34  01F6               	clrf	change_DM13H@k
  6490  0F35                     l6979:	
  6491  0F35  3002               	movlw	2
  6492  0F36  0AF6               	incf	change_DM13H@k,f
  6493  0F37  0276               	subwf	change_DM13H@k,w
  6494  0F38  1C03               	skipc
  6495  0F39  2F35               	goto	l6979
  6496                           
  6497                           ;led.c: 138: RB5 = 0;
  6498  0F3A  1286               	bcf	6,5
  6499                           
  6500                           ;led.c: 139: for(k=0;k<2;k++);
  6501  0F3B  01F6               	clrf	change_DM13H@k
  6502  0F3C                     l6989:	
  6503  0F3C  3002               	movlw	2
  6504  0F3D  0AF6               	incf	change_DM13H@k,f
  6505  0F3E  0276               	subwf	change_DM13H@k,w
  6506  0F3F  1C03               	skipc
  6507  0F40  2F3C               	goto	l6989
  6508                           
  6509                           ;led.c: 141: ss = 0B1000000;
  6510  0F41  3040               	movlw	64
  6511  0F42  00F3               	movwf	change_DM13H@ss
  6512                           
  6513                           ;led.c: 142: temp = 0x40;
  6514  0F43  00F4               	movwf	change_DM13H@temp
  6515                           
  6516                           ;led.c: 143: for(i=0; i<=6;i++)
  6517  0F44  01F5               	clrf	change_DM13H@i
  6518  0F45                     l7001:	
  6519                           
  6520                           ;led.c: 144: {
  6521                           ;led.c: 145: if(ss & temp)
  6522  0F45  0873               	movf	change_DM13H@ss,w
  6523  0F46  0574               	andwf	change_DM13H@temp,w
  6524  0F47  1903               	btfsc	3,2
  6525  0F48  2F4C               	goto	l7005
  6526                           
  6527                           ;led.c: 146: {
  6528                           ;led.c: 148: PORTB |= 0x07;
  6529  0F49  3007               	movlw	7
  6530  0F4A  0486               	iorwf	6,f	;volatile
  6531                           
  6532                           ;led.c: 149: }
  6533  0F4B  2F4E               	goto	l7007
  6534  0F4C                     l7005:	
  6535                           
  6536                           ;led.c: 150: else
  6537                           ;led.c: 151: {
  6538                           ;led.c: 153: PORTB &= 0xf8;
  6539  0F4C  30F8               	movlw	248
  6540  0F4D  0586               	andwf	6,f	;volatile
  6541  0F4E                     l7007:	
  6542                           
  6543                           ;led.c: 154: }
  6544                           ;led.c: 156: for(k=0;k<2;k++);
  6545  0F4E  01F6               	clrf	change_DM13H@k
  6546  0F4F                     l7013:	
  6547  0F4F  3002               	movlw	2
  6548  0F50  0AF6               	incf	change_DM13H@k,f
  6549  0F51  0276               	subwf	change_DM13H@k,w
  6550  0F52  1C03               	skipc
  6551  0F53  2F4F               	goto	l7013
  6552                           
  6553                           ;led.c: 157: RB3=1;
  6554  0F54  1586               	bsf	6,3
  6555                           
  6556                           ;led.c: 158: for(k=0;k<6;k++);
  6557  0F55  01F6               	clrf	change_DM13H@k
  6558  0F56                     l7023:	
  6559  0F56  3006               	movlw	6
  6560  0F57  0AF6               	incf	change_DM13H@k,f
  6561  0F58  0276               	subwf	change_DM13H@k,w
  6562  0F59  1C03               	skipc
  6563  0F5A  2F56               	goto	l7023
  6564  0F5B  3007               	movlw	7
  6565                           
  6566                           ;led.c: 159: RB3=0;
  6567                           
  6568                           ;led.c: 160: temp >>= 1;
  6569  0F5C  27FA  158A         	fcall	PL18	;call to abstracted procedure
  6570  0F5E  1C03               	skipc
  6571  0F5F  2F45               	goto	l7001
  6572                           
  6573                           ;led.c: 161: }
  6574                           ;led.c: 163: PORTB |= 0x07;
  6575  0F60  3007               	movlw	7
  6576  0F61  0486               	iorwf	6,f	;volatile
  6577                           
  6578                           ;led.c: 164: for(k=0;k<2;k++);
  6579  0F62  01F6               	clrf	change_DM13H@k
  6580  0F63                     l7039:	
  6581  0F63  3002               	movlw	2
  6582  0F64  0AF6               	incf	change_DM13H@k,f
  6583  0F65  0276               	subwf	change_DM13H@k,w
  6584  0F66  1C03               	skipc
  6585  0F67  2F63               	goto	l7039
  6586                           
  6587                           ;led.c: 165: RB3=1;
  6588  0F68  1586               	bsf	6,3
  6589                           
  6590                           ;led.c: 166: for(k=0;k<2;k++);
  6591  0F69  01F6               	clrf	change_DM13H@k
  6592  0F6A                     l7049:	
  6593  0F6A  3002               	movlw	2
  6594  0F6B  0AF6               	incf	change_DM13H@k,f
  6595  0F6C  0276               	subwf	change_DM13H@k,w
  6596  0F6D  1C03               	skipc
  6597  0F6E  2F6A               	goto	l7049
  6598                           
  6599                           ;led.c: 167: RB3=0;
  6600  0F6F  1186               	bcf	6,3
  6601                           
  6602                           ;led.c: 168: for(k=0;k<2;k++);
  6603  0F70  01F6               	clrf	change_DM13H@k
  6604  0F71                     l7059:	
  6605  0F71  3002               	movlw	2
  6606  0F72  0AF6               	incf	change_DM13H@k,f
  6607  0F73  0276               	subwf	change_DM13H@k,w
  6608  0F74  1C03               	skipc
  6609  0F75  2F71               	goto	l7059
  6610                           
  6611                           ;led.c: 170: PORTB &= 0xf8;
  6612  0F76  30F8               	movlw	248
  6613  0F77  0586               	andwf	6,f	;volatile
  6614                           
  6615                           ;led.c: 171: for(k=0;k<2;k++);
  6616  0F78  01F6               	clrf	change_DM13H@k
  6617  0F79                     l7071:	
  6618  0F79  3002               	movlw	2
  6619  0F7A  0AF6               	incf	change_DM13H@k,f
  6620  0F7B  0276               	subwf	change_DM13H@k,w
  6621  0F7C  1C03               	skipc
  6622  0F7D  2F79               	goto	l7071
  6623                           
  6624                           ;led.c: 172: RB3=1;
  6625  0F7E  1586               	bsf	6,3
  6626                           
  6627                           ;led.c: 173: for(k=0;k<2;k++);
  6628  0F7F  01F6               	clrf	change_DM13H@k
  6629  0F80                     l7081:	
  6630  0F80  3002               	movlw	2
  6631  0F81  0AF6               	incf	change_DM13H@k,f
  6632  0F82  0276               	subwf	change_DM13H@k,w
  6633  0F83  1C03               	skipc
  6634  0F84  2F80               	goto	l7081
  6635  0F85  30F8               	movlw	248
  6636                           
  6637                           ;led.c: 174: RB3=0;
  6638  0F86  1186               	bcf	6,3
  6639                           
  6640                           ;led.c: 176: PORTB &= 0xf8;
  6641  0F87  0586               	andwf	6,f	;volatile
  6642                           
  6643                           ;led.c: 177: for(k=0;k<2;k++);
  6644  0F88  01F6               	clrf	change_DM13H@k
  6645  0F89                     l7093:	
  6646  0F89  3002               	movlw	2
  6647  0F8A  0AF6               	incf	change_DM13H@k,f
  6648  0F8B  0276               	subwf	change_DM13H@k,w
  6649  0F8C  1C03               	skipc
  6650  0F8D  2F89               	goto	l7093
  6651                           
  6652                           ;led.c: 178: RB3=1;
  6653  0F8E  1586               	bsf	6,3
  6654                           
  6655                           ;led.c: 179: for(k=0;k<2;k++);
  6656  0F8F  01F6               	clrf	change_DM13H@k
  6657  0F90                     l7103:	
  6658  0F90  3002               	movlw	2
  6659  0F91  0AF6               	incf	change_DM13H@k,f
  6660  0F92  0276               	subwf	change_DM13H@k,w
  6661  0F93  1C03               	skipc
  6662  0F94  2F90               	goto	l7103
  6663  0F95  3040               	movlw	64
  6664                           
  6665                           ;led.c: 180: RB3=0;
  6666  0F96  1186               	bcf	6,3
  6667                           
  6668                           ;led.c: 183: ss = 0B1000000;
  6669  0F97  00F3               	movwf	change_DM13H@ss
  6670                           
  6671                           ;led.c: 184: temp = 0x40;
  6672  0F98  00F4               	movwf	change_DM13H@temp
  6673                           
  6674                           ;led.c: 185: for(i=0; i<=6;i++)
  6675  0F99  01F5               	clrf	change_DM13H@i
  6676  0F9A                     l7115:	
  6677                           
  6678                           ;led.c: 186: {
  6679                           ;led.c: 187: if(ss & temp)
  6680  0F9A  0873               	movf	change_DM13H@ss,w
  6681  0F9B  0574               	andwf	change_DM13H@temp,w
  6682  0F9C  1903               	btfsc	3,2
  6683  0F9D  2FA1               	goto	l7119
  6684                           
  6685                           ;led.c: 188: {
  6686                           ;led.c: 190: PORTB |= 0x07;
  6687  0F9E  3007               	movlw	7
  6688  0F9F  0486               	iorwf	6,f	;volatile
  6689                           
  6690                           ;led.c: 191: }
  6691  0FA0  2FA3               	goto	l7121
  6692  0FA1                     l7119:	
  6693                           
  6694                           ;led.c: 192: else
  6695                           ;led.c: 193: {
  6696                           ;led.c: 195: PORTB &= 0xf8;
  6697  0FA1  30F8               	movlw	248
  6698  0FA2  0586               	andwf	6,f	;volatile
  6699  0FA3                     l7121:	
  6700                           
  6701                           ;led.c: 196: }
  6702                           ;led.c: 198: for(k=0;k<2;k++);
  6703  0FA3  01F6               	clrf	change_DM13H@k
  6704  0FA4                     l7127:	
  6705  0FA4  3002               	movlw	2
  6706  0FA5  0AF6               	incf	change_DM13H@k,f
  6707  0FA6  0276               	subwf	change_DM13H@k,w
  6708  0FA7  1C03               	skipc
  6709  0FA8  2FA4               	goto	l7127
  6710                           
  6711                           ;led.c: 199: RB3=1;
  6712  0FA9  1586               	bsf	6,3
  6713                           
  6714                           ;led.c: 200: for(k=0;k<6;k++);
  6715  0FAA  01F6               	clrf	change_DM13H@k
  6716  0FAB                     l7137:	
  6717  0FAB  3006               	movlw	6
  6718  0FAC  0AF6               	incf	change_DM13H@k,f
  6719  0FAD  0276               	subwf	change_DM13H@k,w
  6720  0FAE  1C03               	skipc
  6721  0FAF  2FAB               	goto	l7137
  6722  0FB0  3007               	movlw	7
  6723                           
  6724                           ;led.c: 201: RB3=0;
  6725                           
  6726                           ;led.c: 202: temp >>= 1;
  6727  0FB1  27FA  158A         	fcall	PL18	;call to abstracted procedure
  6728  0FB3  1C03               	skipc
  6729  0FB4  2F9A               	goto	l7115
  6730                           
  6731                           ;led.c: 203: }
  6732                           ;led.c: 205: PORTB |= 0x07;
  6733  0FB5  3007               	movlw	7
  6734  0FB6  0486               	iorwf	6,f	;volatile
  6735                           
  6736                           ;led.c: 206: for(k=0;k<2;k++);
  6737  0FB7  01F6               	clrf	change_DM13H@k
  6738  0FB8                     l7153:	
  6739  0FB8  3002               	movlw	2
  6740  0FB9  0AF6               	incf	change_DM13H@k,f
  6741  0FBA  0276               	subwf	change_DM13H@k,w
  6742  0FBB  1C03               	skipc
  6743  0FBC  2FB8               	goto	l7153
  6744                           
  6745                           ;led.c: 207: RB3=1;
  6746  0FBD  1586               	bsf	6,3
  6747                           
  6748                           ;led.c: 208: for(k=0;k<2;k++);
  6749  0FBE  01F6               	clrf	change_DM13H@k
  6750  0FBF                     l7163:	
  6751  0FBF  3002               	movlw	2
  6752  0FC0  0AF6               	incf	change_DM13H@k,f
  6753  0FC1  0276               	subwf	change_DM13H@k,w
  6754  0FC2  1C03               	skipc
  6755  0FC3  2FBF               	goto	l7163
  6756                           
  6757                           ;led.c: 209: RB3=0;
  6758  0FC4  1186               	bcf	6,3
  6759                           
  6760                           ;led.c: 210: for(k=0;k<2;k++);
  6761  0FC5  01F6               	clrf	change_DM13H@k
  6762  0FC6                     l7173:	
  6763  0FC6  3002               	movlw	2
  6764  0FC7  0AF6               	incf	change_DM13H@k,f
  6765  0FC8  0276               	subwf	change_DM13H@k,w
  6766  0FC9  1C03               	skipc
  6767  0FCA  2FC6               	goto	l7173
  6768                           
  6769                           ;led.c: 212: PORTB &= 0xf8;
  6770  0FCB  30F8               	movlw	248
  6771  0FCC  0586               	andwf	6,f	;volatile
  6772                           
  6773                           ;led.c: 213: for(k=0;k<2;k++);
  6774  0FCD  01F6               	clrf	change_DM13H@k
  6775  0FCE                     l7185:	
  6776  0FCE  3002               	movlw	2
  6777  0FCF  0AF6               	incf	change_DM13H@k,f
  6778  0FD0  0276               	subwf	change_DM13H@k,w
  6779  0FD1  1C03               	skipc
  6780  0FD2  2FCE               	goto	l7185
  6781                           
  6782                           ;led.c: 214: RB3=1;
  6783  0FD3  1586               	bsf	6,3
  6784                           
  6785                           ;led.c: 215: for(k=0;k<2;k++);
  6786  0FD4  01F6               	clrf	change_DM13H@k
  6787  0FD5                     l7195:	
  6788  0FD5  3002               	movlw	2
  6789  0FD6  0AF6               	incf	change_DM13H@k,f
  6790  0FD7  0276               	subwf	change_DM13H@k,w
  6791  0FD8  1C03               	skipc
  6792  0FD9  2FD5               	goto	l7195
  6793  0FDA  30F8               	movlw	248
  6794                           
  6795                           ;led.c: 216: RB3=0;
  6796  0FDB  1186               	bcf	6,3
  6797                           
  6798                           ;led.c: 218: PORTB &= 0xf8;
  6799  0FDC  0586               	andwf	6,f	;volatile
  6800                           
  6801                           ;led.c: 219: for(k=0;k<2;k++);
  6802  0FDD  01F6               	clrf	change_DM13H@k
  6803  0FDE                     l7207:	
  6804  0FDE  3002               	movlw	2
  6805  0FDF  0AF6               	incf	change_DM13H@k,f
  6806  0FE0  0276               	subwf	change_DM13H@k,w
  6807  0FE1  1C03               	skipc
  6808  0FE2  2FDE               	goto	l7207
  6809                           
  6810                           ;led.c: 220: RB3=1;
  6811  0FE3  1586               	bsf	6,3
  6812                           
  6813                           ;led.c: 221: for(k=0;k<2;k++);
  6814  0FE4  01F6               	clrf	change_DM13H@k
  6815  0FE5                     l7217:	
  6816  0FE5  3002               	movlw	2
  6817  0FE6  0AF6               	incf	change_DM13H@k,f
  6818  0FE7  0276               	subwf	change_DM13H@k,w
  6819  0FE8  1C03               	skipc
  6820  0FE9  2FE5               	goto	l7217
  6821                           
  6822                           ;led.c: 222: RB3=0;
  6823  0FEA  1186               	bcf	6,3
  6824                           
  6825                           ;led.c: 225: for(k=0;k<2;k++);
  6826  0FEB  01F6               	clrf	change_DM13H@k
  6827  0FEC                     l7227:	
  6828  0FEC  3002               	movlw	2
  6829  0FED  0AF6               	incf	change_DM13H@k,f
  6830  0FEE  0276               	subwf	change_DM13H@k,w
  6831  0FEF  1C03               	skipc
  6832  0FF0  2FEC               	goto	l7227
  6833                           
  6834                           ;led.c: 226: RB5 = 1;
  6835  0FF1  1686               	bsf	6,5
  6836                           
  6837                           ;led.c: 227: for(k=0;k<2;k++);
  6838  0FF2  01F6               	clrf	change_DM13H@k
  6839  0FF3                     l7237:	
  6840  0FF3  3002               	movlw	2
  6841  0FF4  0AF6               	incf	change_DM13H@k,f
  6842  0FF5  0276               	subwf	change_DM13H@k,w
  6843  0FF6  1C03               	skipc
  6844  0FF7  2FF3               	goto	l7237
  6845                           
  6846                           ;led.c: 228: RB5 = 0;
  6847  0FF8  1286               	bcf	6,5
  6848  0FF9  0008               	return
  6849  0FFA                     __end_of_change_DM13H:	
  6850  0FFA                     PL18:	
  6851  0FFA  1186               	bcf	6,3
  6852  0FFB  1003               	clrc
  6853  0FFC  0CF4               	rrf	change_DM13H@temp,f
  6854  0FFD  0AF5               	incf	change_DM13H@i,f
  6855  0FFE  0275               	subwf	change_DM13H@i,w
  6856  0FFF  0008               	return
  6857                           
  6858                           	psect	text990
  6859  0D89                     __ptext990:	
  6860 ;; =============== function _change_DM13H ends ============
  6861                           
  6862                           
  6863 ;; *************** function _ISR *****************
  6864 ;; Defined at:
  6865 ;;		line 1166 in file "D:\work\Ochoa\sanse88+RS485\led.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;		None
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;		None
  6870 ;; Return value:  Size  Location     Type
  6871 ;;		None               void
  6872 ;; Registers used:
  6873 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 60/0
  6877 ;;		Unchanged: FFE9F/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6879 ;;      Params:         0       0       0       0
  6880 ;;      Locals:         0       0       0       0
  6881 ;;      Temps:          3       0       0       0
  6882 ;;      Totals:         3       0       0       0
  6883 ;;Total ram usage:        3 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; This function calls:
  6886 ;;		Nothing
  6887 ;; This function is called by:
  6888 ;;		Interrupt level 1
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891  0D89                     _ISR:	
  6892                           
  6893                           ;led.c: 1167: if(TMR1IF == 1)
  6894  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  6895  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  6896  0D8B  1C0C               	btfss	12,0
  6897  0D8C  2D94               	goto	i1l5719
  6898  0D8D  30FB               	movlw	251
  6899                           
  6900                           ;led.c: 1168: {
  6901                           ;led.c: 1169: TMR1IF = 0;
  6902  0D8E  100C               	bcf	12,0
  6903                           
  6904                           ;led.c: 1170: TMR1H=0xFB;
  6905  0D8F  008F               	movwf	15	;volatile
  6906                           
  6907                           ;led.c: 1171: TMR1L=0x85;
  6908  0D90  3085               	movlw	133
  6909  0D91  008E               	movwf	14	;volatile
  6910                           
  6911                           ;led.c: 1172: TFG=1;
  6912  0D92  01B8               	clrf	_TFG
  6913  0D93  0AB8               	incf	_TFG,f
  6914  0D94                     i1l5719:	
  6915                           
  6916                           ;led.c: 1173: }
  6917                           ;led.c: 1174: if(RCIF == 1)
  6918  0D94  1E8C               	btfss	12,5
  6919  0D95  2DA5               	goto	i1l1442
  6920                           
  6921                           ;led.c: 1175: {
  6922                           ;led.c: 1176: usart_rx_buffer[usart_rx_write] = RCREG;
  6923  0D96  0855               	movf	_usart_rx_write,w
  6924  0D97  3EA0               	addlw	_usart_rx_buffer& (0+255)
  6925  0D98  0084               	movwf	4
  6926  0D99  081A               	movf	26,w	;volatile
  6927  0D9A  1383               	bcf	3,7	;select IRP bank1
  6928  0D9B  0080               	movwf	0
  6929  0D9C  301E               	movlw	30
  6930                           
  6931                           ;led.c: 1177: usart_rx_write++;
  6932  0D9D  0AD5               	incf	_usart_rx_write,f
  6933                           
  6934                           ;led.c: 1178: if(usart_rx_write >= 30) usart_rx_write=0;
  6935  0D9E  0255               	subwf	_usart_rx_write,w
  6936  0D9F  1803               	btfsc	3,0
  6937  0DA0  01D5               	clrf	_usart_rx_write
  6938                           
  6939                           ;led.c: 1179: if(OERR == 1)
  6940  0DA1  1C98               	btfss	24,1
  6941  0DA2  2DA5               	goto	i1l1442
  6942                           
  6943                           ;led.c: 1180: {
  6944                           ;led.c: 1181: CREN = 0;
  6945  0DA3  1218               	bcf	24,4
  6946                           
  6947                           ;led.c: 1182: CREN = 1;
  6948  0DA4  1618               	bsf	24,4
  6949  0DA5                     i1l1442:	
  6950  0DA5  0872               	movf	??_ISR+2,w
  6951  0DA6  008A               	movwf	10
  6952  0DA7  0871               	movf	??_ISR+1,w
  6953  0DA8  0084               	movwf	4
  6954  0DA9  0E70               	swapf	??_ISR^(0+-128),w
  6955  0DAA  0083               	movwf	3
  6956  0DAB  0EFE               	swapf	126,f
  6957  0DAC  0E7E               	swapf	126,w
  6958  0DAD  0009               	retfie
  6959  0DAE                     __end_of_ISR:	
  6960                           
  6961                           	psect	intentry
  6962  0004                     __pintentry:	
  6963                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
  6964                           
  6965  0004                     interrupt_function:	
  6966  007E                     saved_w	set	btemp
  6967  0004  00FE               	movwf	btemp
  6968  0005  0E03               	swapf	3,w
  6969  0006  00F0               	movwf	??_ISR
  6970  0007  0804               	movf	4,w
  6971  0008  00F1               	movwf	??_ISR+1
  6972  0009  080A               	movf	10,w
  6973  000A  00F2               	movwf	??_ISR+2
  6974  000B  158A  2D89         	ljmp	_ISR
  6975                           
  6976                           	psect	text991
  6977  0000                     __ptext991:	
  6978 ;; =============== function _ISR ends ============
  6979                           
  6980  007E                     btemp	set	126	;btemp
  6981  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Jul 21 01:04:52 2023

                        ?_filterAC_DC 0070                  __end_of_change_DM13H 0FFA  
                                   pc 0002                                    _RD 0C60  
                                  _WR 0C61                                    fsr 0004  
                 ___wmul@multiplicand 0075                       yel_displaydrv@i 0061  
                     yel_displaydrv@k 0062                                   _GIE 005F  
                                 _RB0 0030                                   _RB1 0031  
                                 _RB2 0032                                   _RB3 0033  
                                 _RB4 0034                                   _RB5 0035  
                                 _RB6 0036                                   _RC5 003D  
                                 _ISR 0D89                                   _TFG 0038  
                                 _PSA 040B                                   _RX9 00C6  
                                 _TX9 04C6                                   fsr0 0004  
                                 indf 0000                _previous_study_counter 002C  
                  _gre_displaying_end 0558                                  ?_ISR 0070  
                                l1200 0000           yel_displaying@temp_yel_var0 0066  
         yel_displaying@temp_yel_var1 0065           yel_displaying@temp_yel_var2 0067  
                                l1213 0000                                  l1221 0000  
                                l1152 0000                                  l1208 0000  
                                l1161 0000                                  l1226 0000  
                                l1234 0000                                  l1147 0000  
                                l1155 0000                                  l1164 0000  
                                l1172 04F0                                  l1245 049C  
                                l1413 0045                                  l1158 05E1  
                                l1167 0000                                  l1175 0000  
                                l1183 0519                                  l1239 0000  
                                l1424 07B3                                  l1178 0000  
                                l1186 0000                                  l1194 0542  
                                l1428 07A2                                  l1189 0000  
                                l1197 0000                                  l1461 0414  
                                l1517 0EEB                                  l1386 0000  
                                l1396 0DC8                __end_of_yel_displaying 0664  
                                l2462 0000                __end_of_yel_displaydrv 052F  
                                l2472 0000                                  l2492 0000  
                                l7001 0F45                                  l2489 05F0  
                                l2498 0000                                  l7013 0F4F  
                                l7005 0F4C                                  l7103 0F90  
                                l7023 0F56                                  l7015 0000  
                                l7007 0F4E                                  l7201 0000  
                                l7121 0FA3                                  l7105 0000  
                                l7041 0000                                  l7033 0000  
                                l7025 0000                                  l7017 0000  
                                l7211 0000                                  l7131 0000  
                                l7115 0F9A                                  l7107 0000  
                                l7051 0000                                  l7043 0000  
                                l7027 0000                                  l8011 0000  
                                l7221 0000                                  l7141 0000  
                                l7109 0000                                  l7061 0000  
                                l7053 0000                                  l7029 0000  
                                l7301 0000                                  l8013 0000  
                                l7231 0000                                  l7207 0FDE  
                                l7143 0000                                  l7127 0FA4  
                                l7119 0FA1                                  l7071 0F79  
                                l7039 0F63                                  l7311 0000  
                                l7303 0000                                  l7217 0FE5  
                                l7209 0000                                  l7153 0FB8  
                                l7137 0FAB                                  l7129 0000  
                                l7081 0F80                                  l7073 0000  
                                l7065 0000                                  l7049 0F6A  
                                l7321 0000                                  l7313 0000  
                                l7305 0000                                  l7241 0000  
                                l8113 0000                                  l8121 024D  
                                l8033 0000                                  l8025 0000  
                                l8009 0000                                  l7227 0FEC  
                                l7219 0000                                  l7163 0FBF  
                                l7155 0000                                  l7147 0000  
                                l7139 0000                                  l7083 0000  
                                l7075 0000                                  l7059 0F71  
                                l7323 0000                                  l7315 0000  
                                l7307 0000                                  l7251 0000  
                                l7243 0000                                  l7331 0000  
                                l7411 0000                                  l7403 04F1  
                                l8131 025A                                  l8107 0000  
                                l8035 0000                                  l8027 0000  
                                l8019 0160                                  l8211 0000  
                                l8203 0000                                  l7237 0FF3  
                                l7229 0000                                  l7173 0FC6  
                                l7165 0000                                  l7157 0000  
                                l7093 0F89                                  l7085 0000  
                                l7325 0000                                  l7317 0000  
                                l7309 0000                                  l7253 0000  
                                l7245 0000                                  l7341 0000  
                                l7333 0000                                  l7421 0000  
                                l7413 0000                                  l7501 0000  
                                l8133 0000                                  l8117 0245  
                                l8109 0232                                  l8061 0000  
                                l8301 03AE                                  l8213 0000  
                                l7239 0000                                  l7175 0000  
                                l7167 0000                                  l7095 0000  
                                l7087 0000                                  l7327 0000  
                                l7319 0000                                  l7255 0000  
                                l7247 0000                                  l7335 0000  
                                l7351 0000                                  l7343 0000  
                                l7423 0000                                  l7431 0000  
                                l7511 0000                                  l8143 0000  
                                l8135 0000                                  l8127 0000  
                                l8119 0000                                  l8071 01EB  
                                l8047 0198                                  l8039 017F  
                                l8303 0000                                  l8231 0000  
                                l8223 0000                                  l7185 0FCE  
                                l7097 0000                                  l7281 0000  
                                l7273 0000                                  l7265 072F  
                                l7257 0000                                  l7249 0000  
                                l7337 0000                                  l7329 0000  
                                l7361 0000                                  l7353 0000  
                                l7345 0000                                  l7425 0000  
                                l7409 04F2                                  l7433 0000  
                                l7513 0000                                  l7521 0E42  
                                l7601 0E26                                  l8161 02A6  
                                l8145 0000                                  l8137 0000  
                                l8129 0000                                  l8065 01C1  
                                l8049 0000                                  l8057 01AB  
                                l8401 0000                                  l8321 0000  
                                l8305 0000                                  l8233 0000  
                                l8209 031D                                  l7195 0FD5  
                                l7187 0000                                  l7179 0000  
                                l7291 0000                                  l7283 0000  
                                l7275 0000                                  l7267 0000  
                                l7259 0000                                  l7339 0000  
                                l7363 0000                                  l7355 0000  
                                l7347 0000                                  l7371 0000  
                                l7419 04F7                                  l7443 050E  
                                l7435 0000                                  l7427 0000  
                                l7507 0549                                  l7523 0000  
                                l7515 0000                                  l7603 0000  
                                l8171 0000                                  l8163 0000  
                                l8147 026E                                  l8139 0263  
                                l8067 01CC                                  l8075 01FA  
                                l8411 0000                                  l8331 03DC  
                                l8323 0000                                  l8315 03BA  
                                l8251 0000                                  l8235 0000  
                                l8219 0000                                  l7197 0000  
                                l7189 0000                                  l6901 0000  
                                l7293 0000                                  l7285 0000  
                                l7277 0000                                  l7269 0000  
                                l7365 0000                                  l7357 0000  
                                l7349 0000                                  l7381 0000  
                                l7373 0000                                  l7453 051B  
                                l7437 0000                                  l7429 0000  
                                l7509 0000                                  l7541 0E63  
                                l7533 0E4B                                  l7525 0000  
                                l7517 0000                                  l7605 0000  
                                l7621 0DC6                                  l7613 0DB2  
                                l7701 0000                                  l8173 02C0  
                                l8165 02B2                                  l8421 0000  
                                l8413 0000                                  l8341 03ED  
                                l8333 0000                                  l8325 03D5  
                                l8261 0000                                  l8317 03CE  
                                l8253 0000                                  l8245 0000  
                                l8229 0334                                  l8181 0000  
                                l8501 00AB                                  l7199 0000  
                                l6911 0000                                  l6903 0000  
                                l7295 0000                                  l7287 0000  
                                l7279 0000                                  l7367 0000  
                                l7359 0000                                  l7375 0000  
                                l7391 0000                                  l7383 0000  
                                l7463 0520                                  l7455 0000  
                                l7447 051A                                  l7471 0000  
                                l7551 0E75                                  l7543 0E69  
                                l7527 0000                                  l7607 0E2E  
                                l7623 0DC8                                  l7711 02EF  
                                l8079 0000                                  l8407 0447  
                                l8343 0000                                  l8335 0000  
                                l8327 0000                                  l8319 0000  
                                l8271 0000                                  l8263 0000  
                                l8255 0000                                  l8247 0000  
                                l8191 0304                                  l8511 0000  
                                l8503 0000                                  l6921 0000  
                                l6913 0000                                  l7297 0000  
                                l7289 0000                                  l7369 0000  
                                l7377 0000                                  l7393 0000  
                                l7385 0000                                  l7465 0000  
                                l7457 0000                                  l7481 0000  
                                l7473 0000                                  l7553 0000  
                                l7561 0000                                  l7625 0000  
                                l7633 0DD3                                  l7617 0000  
                                l7609 0000                                  l7641 0000  
                                l7705 0000                                  l7721 05EA  
                                l7801 0000                                  l8177 02C2  
                                l8345 0000                                  l8337 03E4  
                                l8329 0000                                  l8281 0393  
                                l8273 0388                                  l8265 0000  
                                l8249 0000                                  l8409 0457  
                                l8185 0000                                  l8441 0000  
                                l8521 0000                                  l8513 0000  
                                l8601 0056                                  l6931 0000  
                                l6923 0000                                  l7299 0000  
                                l7379 0000                                  l7387 0000  
                                l7467 0000                                  l7491 0543  
                                l7475 0000                                  l7555 0000  
                                l7539 0E61                                  l7571 0DF6  
                                l7563 0000                                  l7651 07A5  
                                l7643 0000                                  l7715 0000  
                                l7811 0000                                  l8179 0000  
                                l8419 0000                                  l8355 03F9  
                                l8347 03F2                                  l8339 03E7  
                                l8291 0000                                  l8283 0000  
                                l8275 0000                                  l8267 0000  
                                l8259 037F                                  l8443 0000  
                                l8523 0000                                  l8531 00DF  
                                l8507 00B9                                  l8603 0000  
                                l6941 0000                                  l6933 0000  
                                l6909 0F04                                  l7389 0000  
                                l7469 0000                                  l7477 0000  
                                l7557 0E7D                                  l7581 0000  
                                l7565 0000                                  l7629 0DD1  
                                l7661 0000                                  l7645 0000  
                                l7637 0000                                  l7709 0000  
                                l7733 0000                                  l7725 0000  
                                l7717 0000                                  l7741 0000  
                                l7901 047E                                  l8373 0000  
                                l8365 0400                                  l8293 0000  
                                l8285 0000                                  l8277 0000  
                                l8269 0000                                  l8197 030E  
                                l8189 0301                                  l8453 0000  
                                l8541 0000                                  l8525 00D1  
                                l8517 0000                                  l8533 00E2  
                                l8509 00BC                                  l8461 0000  
                                l8605 0000                                  l8621 0000  
                                l6951 0000                                  l6943 0000  
                                l6919 0F0B                                  l7399 04E5  
                                l7487 0537                                  l7479 0000  
                                l7583 0E13                                  l7575 0000  
                                l7559 0000                                  l7671 0000  
                                l7655 07A8                                  l7719 0000  
                                l7735 05FD                                  l7751 0617  
                                l7743 0603                                  l7807 046B  
                                l7831 0000                                  l7815 0630  
                                l7911 0497                                  l7903 0000  
                                l8375 0000                                  l8295 03A6  
                                l8287 039B                                  l8279 0000  
                                l8367 0415                                  l8447 0000  
                                l8551 0000                                  l8535 0000  
                                l8527 0000                                  l8471 0000  
                                l8463 0000                                  l8455 0000  
                                l8607 005E                                  l8623 0000  
                                l8615 0E83                                  l6961 0000  
                                l6953 0000                                  l6929 0F12  
                                l6881 0000                                  l7497 0544  
                                l7585 0000                                  l7665 0000  
                                l7649 07A0                                  l7657 07B3  
                                l7681 0000                                  l7673 0000  
                                l7729 0000                                  l7753 0000  
                                l7745 0000                                  l7761 0000  
                                l7809 0000                                  l7825 0000  
                                l7841 0000                                  l7913 0000  
                                l7905 0000                                  l8385 0000  
                                l8377 0427                                  l8801 0406  
                                l8289 0000                                  l8449 0000  
                                l8545 0000                                  l8537 0000  
                                l8481 0000                                  l8473 0000  
                                l8465 006F                                  l8561 0000  
                                l8633 0E96                                  l8625 0000  
                                l8617 0000                                  l8609 0000  
                                l6971 0000                                  l6963 0000  
                                l6939 0F19                                  l6891 0000  
                                l6883 0000                                  l7499 0000  
                                l7587 0000                                  l7579 0E0C  
                                l8803 0DDC                                  l7683 0000  
                                l7675 056B                                  l7691 0000  
                                l7747 0000                                  l7739 0000  
                                l7763 0000                                  l7771 058B  
                                l7827 0000                                  l7819 0000  
                                l7851 05C9                                  l7843 0000  
                                l7931 0000                                  l7915 049E  
                                l8387 0000                                  l8299 0000  
                                l8547 0000                                  l8555 0103  
                                l8483 0000                                  l8475 0085  
                                l8651 0000                                  l8643 0000  
                                l8635 0000                                  l8627 0000  
                                l8619 0000                                  l6981 0000  
                                l6973 0000                                  l6949 0F20  
                                l6893 0000                                  l7757 0000  
                                l7781 0000                                  l7837 065D  
                                l7829 0000                                  l7853 0000  
                                l7845 0000                                  l7941 0000  
                                l7933 0000                                  l7925 04B7  
                                l7917 0000                                  l8389 043C  
                                l8549 00F7                                  l8493 0000  
                                l8485 0096                                  l8557 0000  
                                l8661 0000                                  l8653 0000  
                                l8645 0000                                  l6991 0000  
                                l6983 0000                                  l6959 0F27  
                                l7599 0E21                                  l7679 0573  
                                l7759 0000                                  l7783 0000  
                                l7775 0000                                  l7767 0000  
                                l7839 0000                                  l7871 0000  
                                l7863 0000                                  l7855 0000  
                                l7943 04DC                                  l7927 0000  
                                l7919 0000                                  l7951 0000  
                                l8399 0000                                  l8487 0000  
                                l8583 003C                                  l8591 0048  
                                l8575 0032                                  l8567 0026  
                                l8671 0000                                  l8655 0000  
                                l8647 0000                                  l8639 0000  
                                l6969 0F2E                                  l6889 0EF6  
                                l7689 0000                                  l7793 05B8  
                                l7785 0000                                  l7881 069A  
                                l7873 0000                                  l7929 04BD  
                                l7961 0122                                  l7953 0000  
                                l8497 0000                                  l8489 0000  
                                l8593 004A                                  l8585 003E  
                                l8577 0000                                  l8569 0000  
                                l8673 0000                                  l8665 0000  
                                l8657 0000                                  l8681 0EDC  
                                l8649 0EB6                                  l6995 0000  
                                l6979 0F35                                  l6899 0EFD  
                                l7699 02D8                                  l7795 0000  
                                l7787 0000                                  l7883 0000  
                                l7875 0000                                  l7859 066D  
                                l7939 04D6                                  l7971 0000  
                                l7963 0000                                  l7955 0000  
                                l8499 0000                                  l8587 0000  
                                l8579 0000                                  l8691 0000  
                                l8675 0000                                  l8667 0000  
                                l8659 0000                                  l6989 0F3C  
                                l7797 0461                                  l7869 0000  
                                l7885 0558                                  l7981 013E  
                                l7965 012B                                  l7973 0135  
                                l7949 0000                                  l8597 0000  
                                l8693 0000                                  l8685 0000  
                                l8677 0ED6                                  l8669 0000  
                                l7799 0000                                  l7895 0562  
                                l7887 0000                                  l7991 0155  
                                l7975 0000                                  l7967 012F  
                                l8599 0054                                  l8687 0000  
                                l8695 0EEE                                  l8679 0ED9  
                                l7897 0000                                  l7889 0000  
                                l7993 0158                                  l7969 0132  
                                l7899 0000                                  l7987 014C  
                                l7979 0000                                  l7989 0000  
                                l8799 03C0                                  _BRGH 04C2  
                                _CREN 00C4                                  _PEIE 005E  
                                u5245 02E1                                  u5185 07CB  
                                _RCIE 0465                                  _RCIF 0065  
                                _PIR1 000C                                  u5484 010C  
                                u5485 010A                                  _OERR 00C1  
                                _SPEN 00C7                                  _TXIE 0464  
                                _WREN 0C62                                  _TXEN 04C5  
                                _SYNC 04C4                                  _main 0E81  
                                btemp 007E                   ?_gre_displaying_end 0070  
                                start 000D                _study_mode_filterAC_DC 0DEB  
               red_displaydrv@drvword 0073              __size_of_syn_wink_manage 0056  
                      _G_Segment_Wink 001E                                 ??_ISR 0070  
               yel_displaydrv@drvword 0073                   _gre_displaying_flag 0045  
                               ?_main 0070           _g_segment_wink_display_flag 0042  
                     __end_of___lbdiv 05FF                                 _EEADR 010D  
                               _BRG16 0C3B                  ??_gre_displaying_end 0077  
                     __end_of___lbmod 061B                                 _EEPGD 0C67  
                        filterAC_DC@i 0076                                 _ANSEL 0188  
                               _T1CON 0010                       __end_of___lwdiv 02F4  
                               _RCREG 001A                                 _TMR1H 000F  
                               _TMR1L 000E                                 _SPBRG 0099  
                               _PORTB 0006                                 _PORTC 0007  
                               _TRISB 0086                                 _TRISC 0087  
           _displaying_second_counter 003C                                 _nRBPU 040F  
                       _lamp_off_time 00D6                                 main@i 00D9  
                               main@k 00DB                       ?_yel_displaying 0063  
                     ?_yel_displaydrv 0073                                 pclath 000A  
       __size_of_lamp_err_state_check 003D           usart_data_analyse@down_time 006D  
                               status 0003                                 wtemp0 007E  
                     ___lbdiv@divisor 0073                       ___lbdiv@counter 0075  
              __end_of_G_Segment_Wink 0060           __size_of_yel_displaying_end 0011  
                        __end_of_main 0EF4                       red_displaydrv@i 0061  
                     red_displaydrv@k 0062                      ??_red_displaying 0078  
                    ??_red_displaydrv 0075                red_displaydrv@tempdata 005F  
         _every_second_update_counter 003D                                ??_main 0078  
              yel_displaydrv@tempdata 005F                    _usart_data_analyse 02F4  
          usart_data_analyse@CheckSum 006A                                _EEDATA 010C  
                              _EECON2 018D                                _ANSELH 0189  
          g_segment_displaying@number 0063                                i1l1442 0DA5  
                              i1l5711 0000                                i1l5723 0000  
                              i1l5715 0000                                i1l5725 0000  
                              i1l5717 0000                                i1l5719 0D94  
                              _OSCCON 008F                                _TMR1IE 0460  
                              _TMR1IF 0060                                _SPBRGH 009A  
          ??_g_segment_afresh_analyse 005F                                _WDTCON 0105  
                 ?_usart_data_analyse 0070                                _TRISC6 043E  
                              _TRISC7 043F                        _gre_displaying 0664  
                      _gre_displaydrv 052F                 __size_of_change_DM13H 0106  
                     ?_G_Segment_Wink 0070                                ___wmul 0569  
                           ??___lbdiv 0074                             ??___lbmod 0074  
                           ??___lwdiv 0077                                _ioinit 0719  
                __size_of_filterAC_DC 004F                         _usart_rx_read 0054  
                ??_usart_data_analyse 0068                     ??_syn_wink_manage 0068  
                              clrloop 07F9                _syn_wink_display_state 0051  
                              saved_w 007E        usart_data_analyse@temp_pointer 006C  
                       change_DM13H@i 0075                         change_DM13H@k 0076  
                        _change_DM13H 0EF4                      ___lbdiv@dividend 0074  
                  _red_displaying_end 0461                __end_of_gre_displaying 06A1  
              __end_of_gre_displaydrv 0558                       ___lbmod@divisor 0073  
        __end_of_g_segment_displaying 04DD                       ___lbmod@counter 0076  
            G_Segment_Wink@temp_data1 0067              G_Segment_Wink@temp_data2 0065  
             _lamp_counter_valid_flag 0046                   ?_red_displaying_end 0070  
                  __size_of_addr_read 000C                        __pcstackCOMMON 0070  
                 red_displaying_end@k 0077                   yel_displaying_end@k 0077  
                    ___lbdiv@quotient 0076                    _communication_flag 003B  
                          _addr_write 05D0                 _current_study_counter 0020  
                ??_red_displaying_end 0077                            __pbssBANK0 0020  
                          __pbssBANK1 00A0                 _communication_counter 003A  
                     ?_gre_displaying 0063                       ?_gre_displaydrv 0073  
               _study_time_valid_flag 0050               ?_study_mode_filterAC_DC 0070  
                          __pmaintext 0E81                     _down_time_display 0060  
                             ?___wmul 0073                            __pintentry 0004  
                   _lamp_chge_counter 0032                    ?_down_time_display 0070  
                             ?_ioinit 0070   __end_of_study_mode_time_calculation 02CA  
         _study_mode_time_calculation 015B                   ??_down_time_display 0078  
                    ??_yel_displaying 0078                      ??_yel_displaydrv 0075  
                   __end_of_addr_read 0627                       G_Segment_Wink@i 0066  
      __end_of_study_mode_filterAC_DC 0E32      __end_of_g_segment_afresh_analyse 07E8  
                  __size_of_usartinit 0019                     _usart_temp_buffer 0058  
           __end_of_down_time_display 0105                               ___lbdiv 05E4  
                             ___lbmod 05FF                       __size_of___wmul 0019  
                     _study_time_flag 004F                               ___lwdiv 02CA  
        __end_of_lamp_err_state_check 0DEB                       __size_of_ioinit 006C  
                      _ten_mm_counter 0053                  _g_segment_displaying 0472  
         __size_of_gre_displaying_end 0011                          __size_of_ISR 0025  
                         ?_addr_write 0070  study_mode_time_calculation@temp_var1 0069  
study_mode_time_calculation@temp_var2 0067                        _usart_rx_write 0055  
         red_displaying@temp_red_var0 0066           red_displaying@temp_red_var1 0065  
         red_displaying@temp_red_var2 0067                   gre_displaying_end@k 0077  
             _syn_wink_display_updata 0052                  end_of_initialization 0D6D  
                    ??_G_Segment_Wink 0078                               ioinit@i 0073  
          __end_of_yel_displaying_end 05D0                       _lamp_on_counter 00C4  
                     _syn_wink_manage 0105                 _study_lamp_stab_state 007A  
              gre_displaydrv@tempdata 005F                            _timer1init 0D4F  
                      change_DM13H@ss 0073                     __end_of_usartinit 0D89  
               ?_g_segment_displaying 0070                          _display_data 0026  
              _g_segment_afresh_state 0079                       _lamp_temp_state 0048  
                 _red_displaying_flag 004C                      ___lbmod@dividend 0075  
                 _yel_displaying_flag 0057                       _address_of_lamp 0039  
                          _wdtcounter 0056           _g_segment_wink_time_counter 0044  
                    _pulse_down_times 00CA                       _lamp_stab_state 0047  
     study_mode_filterAC_DC@temp_var1 0075       study_mode_filterAC_DC@temp_var2 0073  
     study_mode_filterAC_DC@temp_var3 0074                           ___lbmod@rem 0077  
          __size_of_down_time_display 00A5                  red_displaying@number 0063  
                 __size_of_addr_write 0014                  yel_displaying@number 0063  
                       ??_filterAC_DC 0073          study_mode_time_calculation@i 006A  
                      __end_of___wmul 0582                   _sametime_on_counter 004E  
   __size_of_g_segment_afresh_analyse 0056             ?_g_segment_afresh_analyse 0070  
         __size_of_usart_data_analyse 016D                        __end_of_ioinit 0785  
                 start_initialization 0D5E                           __end_of_ISR 0DAE  
                    ??_gre_displaying 0078                      ??_gre_displaydrv 0075  
             __size_of_red_displaying 003D               __size_of_red_displaydrv 0029  
            _every_second_update_flag 003F               __end_of_syn_wink_manage 015B  
                _lamp_err_state_check 0DAE                              ??___wmul 0077  
                         ?_timer1init 0070             _g_segment_wink_state_flag 0043  
              ??_g_segment_displaying 0078                              ??_ioinit 0073  
                 __end_of_filterAC_DC 0E81                  filterAC_DC@temp_var1 0074  
                filterAC_DC@temp_var2 0075                           __pbssCOMMON 0078  
         __size_of_red_displaying_end 0011                         __pcstackBANK0 005F  
                       __pcstackBANK1 00D9                    _study_chge_counter 0035  
                   _communication_err 000F                 ?_lamp_err_state_check 0070  
                           _addr_read 061B                    ?_communication_err 0070  
__size_of_study_mode_time_calculation 016F                      ___lwdiv@dividend 0075  
                 ??_communication_err 0078                              ?___lbdiv 0073  
                            ?___lbmod 0073                             __ptext960 001E  
                           __ptext961 0060                             __ptext970 0627  
                           __ptext962 000F                             __ptext971 0461  
                           __ptext963 02F4                             __ptext980 0DEB  
                           __ptext972 0582                             __ptext964 015B  
                           __ptext981 0E32                             __ptext973 061B  
                           __ptext965 0105                             __ptext990 0D89  
                           __ptext982 052F                             __ptext974 05FF  
                           __ptext966 0472                             __ptext991 0000  
                           __ptext983 0506                             __ptext975 05E4  
                           __ptext967 0558                             __ptext984 04DD  
                           __ptext976 02CA                             __ptext968 0664  
                           __ptext985 0D4F                             __ptext977 0569  
                           __ptext969 05BF                             __ptext986 0D70  
                           __ptext978 0792                             __ptext987 05D0  
                           __ptext979 0DAE                             __ptext988 0719  
                           __ptext989 0EF4                              ?___lwdiv 0073  
                           __pstrings 0800               syn_wink_manage@tempdata 0069  
                        ??_addr_write 0073             __end_of_communication_err 001E  
                    ___lwdiv@quotient 0060                   __size_of_timer1init 000F  
                          ?_addr_read 0070                      ?_syn_wink_manage 0070  
                   interrupt_function 0004                              _GREWORDS 0806  
                      ___wmul@product 005F                              _REDWORDS 081E  
                  _no_lamp_on_counter 004A                 gre_displaydrv@drvword 0073  
                  __end_of_addr_write 05E4                           _filterAC_DC 0E32  
           _every_second_update_delay 003E            __end_of_gre_displaying_end 0569  
                            _YELWORDS 0836                    _yel_displaying_end 05BF  
                         __stringbase 0805                     ___wmul@multiplier 0073  
                           _usartinit 0D70                   ?_yel_displaying_end 0070  
                      _red_displaying 0582                        _red_displaydrv 04DD  
              ??_lamp_err_state_check 0073                         ?_change_DM13H 0070  
             __size_of_yel_displaying 003D               __size_of_yel_displaydrv 0029  
                ??_yel_displaying_end 0077                      __size_of___lbdiv 001B  
                    __size_of___lbmod 001C                      __size_of___lwdiv 002A  
             study_mode_filterAC_DC@i 0076           gre_displaying@temp_gre_var0 0066  
         gre_displaying@temp_gre_var1 0065           gre_displaying@temp_gre_var2 0067  
              __end_of_red_displaying 05BF                __end_of_red_displaydrv 0506  
               g_segment_displaying@k 0064                syn_wink_manage@channel 006A  
            ??_study_mode_filterAC_DC 0073                            ?_usartinit 0070  
                     ___lwdiv@divisor 0073                       ___lwdiv@counter 005F  
          __size_of_communication_err 000F                        ??_change_DM13H 0073  
             _g_segment_100ms_counter 0040                       gre_displaydrv@i 0061  
                     gre_displaydrv@k 0062                           ??_addr_read 0073  
                            _ledstate 0049                      _lamp_off_counter 00BE  
                       __size_of_main 0073                  gre_displaying@number 0063  
                            clear_ram 07F8                       _usart_rx_buffer 00A0  
               _pulse_study_time_flag 004B                          ??_timer1init 0073  
             __size_of_G_Segment_Wink 0042            __end_of_usart_data_analyse 0461  
                     ?_red_displaying 0063                       ?_red_displaydrv 0073  
        ?_study_mode_time_calculation 0070                      change_DM13H@temp 0074  
                        _restart_flag 004D                              intlevel1 0000  
                  __end_of_timer1init 0D5E                             stringcode 0800  
            _pulse_study_time_counter 00D0              _g_segment_afresh_analyse 0792  
                    addr_write@indata 0073              _g_segment_afresh_counter 0041  
       __size_of_g_segment_displaying 006B            __end_of_red_displaying_end 0472  
                         ??_usartinit 0073                              stringdir 0800  
                 usart_data_analyse@k 006F                              stringtab 0800  
     __size_of_study_mode_filterAC_DC 0047         ??_study_mode_time_calculation 0063  
       usart_data_analyse@TableLength 006B               _g_segment_afresh_number 0078  
                      _yel_displaying 0627                        _yel_displaydrv 0506  
             __size_of_gre_displaying 003D               __size_of_gre_displaydrv 0029  
