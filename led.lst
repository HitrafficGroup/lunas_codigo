

HI-TECH Software PICC Macro Assembler V9.60
                                                      Fri Feb 06 19:49:52 2015


     1                           	processor	16F883
     2                           	opt	pw 79
     3                           	psect	config,global,class=CONFIG,delta=2
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	const1,local,class=CONST,delta=2
     6                           	psect	const2,local,class=CONST,delta=2
     7                           	psect	const3,local,class=CONST,delta=2
     8                           	psect	text7,local,class=CODE,delta=2
     9                           	psect	text18,local,class=CODE,delta=2
    10                           	psect	text22,local,class=CODE,delta=2
    11                           	psect	text23,local,class=CODE,delta=2
    12                           	psect	text24,local,class=CODE,delta=2
    13                           	psect	intcode,global,class=CODE,delta=2
    14                           	psect	intsave_0,global,ovrld,class=COMBANK,spa
      +                          ce=1,delta=1
    15                           	psect	intret,global,class=CODE,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	intsave,global,class=BANK0,space=1,delta
      +                          =1
    18                           	psect	text26,local,class=CODE,delta=2
    19                           	psect	text28,local,class=CODE,delta=2
    20                           	psect	rbss_0,global,class=BANK0,space=1,delta=
      +                          1
    21                           	psect	rbss_2,global,class=BANK2,space=1,delta=
      +                          1
    22                           	psect	rbss_1,global,class=BANK1,space=1,delta=
      +                          1
    23                           	psect	temp,global,ovrld,class=BANK0,space=1,de
      +                          lta=1
    24  0000                     
    25  0000                     
    26  0000                     
    27  0000                     
    28  0000                     
    29  0000                     
    30  0000                     
    31  0000                     
    32  0000                     
    33  0000                     	;#
    34                           
    35                           	psect	config
    36  2007  2FF2               	dw	12274	;#
    37                           
    38                           	psect	const1
    39  0571  0782               	addwf	2
    40  0572                     _REDWORDS
    41  0572  3454               	retlw	84
    42  0573  3415               	retlw	21
    43  0574  3400               	retlw	0
    44  0575  3405               	retlw	5
    45  0576  3451               	retlw	81
    46  0577  3414               	retlw	20
    47  0578  3441               	retlw	65
    48  0579  3415               	retlw	21
    49  057A  3405               	retlw	5
    50  057B  3405               	retlw	5
    51  057C  3445               	retlw	69
    52  057D  3411               	retlw	17
    53  057E  3455               	retlw	85
    54  057F  3411               	retlw	17
    55  0580  3400               	retlw	0
    56  0581  3415               	retlw	21
    57  0582  3455               	retlw	85
    58  0583  3415               	retlw	21
    59  0584  3445               	retlw	69
    60  0585  3415               	retlw	21
    61  0586  3400               	retlw	0
    62  0587  3400               	retlw	0
    63  0588  3401               	retlw	1
    64  0589  3400               	retlw	0
    65                           
    66                           	psect	const2
    67  05A3  0782               	addwf	2
    68  05A4                     _GREWORDS
    69  05A4  34FC               	retlw	252
    70  05A5  343F               	retlw	63
    71  05A6  3400               	retlw	0
    72  05A7  340F               	retlw	15
    73  05A8  34F3               	retlw	243
    74  05A9  343C               	retlw	60
    75  05AA  34C3               	retlw	195
    76  05AB  343F               	retlw	63
    77  05AC  340F               	retlw	15
    78  05AD  340F               	retlw	15
    79  05AE  34CF               	retlw	207
    80  05AF  3433               	retlw	51
    81  05B0  34FF               	retlw	255
    82  05B1  3433               	retlw	51
    83  05B2  3400               	retlw	0
    84  05B3  343F               	retlw	63
    85  05B4  34FF               	retlw	255
    86  05B5  343F               	retlw	63
    87  05B6  34CF               	retlw	207
    88  05B7  343F               	retlw	63
    89  05B8  3400               	retlw	0
    90  05B9  3400               	retlw	0
    91  05BA  3403               	retlw	3
    92  05BB  3400               	retlw	0
    93                           
    94                           	psect	const3
    95  058A  0782               	addwf	2
    96  058B                     _YELWORDS
    97  058B  3454               	retlw	84
    98  058C  3415               	retlw	21
    99  058D  3400               	retlw	0
   100  058E  3405               	retlw	5
   101  058F  3451               	retlw	81
   102  0590  3414               	retlw	20
   103  0591  3441               	retlw	65
   104  0592  3415               	retlw	21
   105  0593  3405               	retlw	5
   106  0594  3405               	retlw	5
   107  0595  3445               	retlw	69
   108  0596  3411               	retlw	17
   109  0597  3455               	retlw	85
   110  0598  3411               	retlw	17
   111  0599  3400               	retlw	0
   112  059A  3415               	retlw	21
   113  059B  3455               	retlw	85
   114  059C  3415               	retlw	21
   115  059D  3445               	retlw	69
   116  059E  3415               	retlw	21
   117  059F  3400               	retlw	0
   118  05A0  3400               	retlw	0
   119  05A1  3401               	retlw	1
   120  05A2  3400               	retlw	0
   121                           
   122                           	psect	text7
   123  00BC                     _gre_displaydrv
   124                           ;	_i assigned to ?a_gre_displaydrv+0
   125  0000                     _gre_displaydrv$i	set	?a_gre_displaydrv
   126                           ;	_k assigned to ?a_gre_displaydrv+1
   127  0000                     _gre_displaydrv$k	set	?a_gre_displaydrv+1
   128                           ;	_tempdata assigned to ?a_gre_displaydrv+2
   129  0000                     _gre_displaydrv$tempdata	set	?a_gre_displaydrv+
      +                          2
   130                           ;led.c: 302: void gre_displaydrv(unsigned int d
      +                          rvword)
   131  00BC  0183               	clrf	3	;select bank 0
   132  00BD  01D7               	clrf	?a_gre_displaydrv+2
   133  00BE  3080               	movlw	128
   134  00BF  00D8               	movwf	?a_gre_displaydrv+3
   135                           ;led.c: 308: RB0=0;
   136  00C0  1006               	bcf	6,0
   137                           ;led.c: 309: RB1=0;
   138  00C1  1086               	bcf	6,1
   139                           ;led.c: 310: RB5=0;
   140  00C2  1286               	bcf	6,5
   141                           ;led.c: 311: RB3=0;
   142  00C3  1186               	bcf	6,3
   143                           ;led.c: 312: for(i=0;i<16;i++)
   144  00C4  01D5               	clrf	?a_gre_displaydrv
   145  00C5                     l39
   146                           ;led.c: 313: {
   147  00C5  0854               	movf	?_gre_displaydrv+1,w
   148  00C6  00FA               	movwf	btemp+1
   149  00C7  0853               	movf	?_gre_displaydrv,w
   150  00C8  00F9               	movwf	btemp
   151  00C9  0857               	movf	?a_gre_displaydrv+2,w
   152  00CA  05F9               	andwf	btemp
   153  00CB  0858               	movf	?a_gre_displaydrv+3,w
   154  00CC  05FA               	andwf	btemp+1
   155  00CD  087A               	movf	btemp+1,w
   156  00CE  0479               	iorwf	btemp,w
   157  00CF  1D03               	btfss	3,2
   158  00D0  28D3               	goto	l42
   159  00D1  1106               	bcf	6,2
   160  00D2  28D4               	goto	l43
   161  00D3                     l42
   162                           ;led.c: 315: else RB2=1;
   163  00D3  1506               	bsf	6,2
   164  00D4                     l43
   165                           ;led.c: 316: for(k=0;k<1;k++);
   166  00D4  01D6               	clrf	?a_gre_displaydrv+1
   167  00D5                     l44
   168  00D5  0AD6               	incf	?a_gre_displaydrv+1
   169  00D6  3001               	movlw	1
   170  00D7  0256               	subwf	?a_gre_displaydrv+1,w
   171  00D8  1C03               	btfss	3,0
   172  00D9  28D5               	goto	l44
   173                           ;led.c: 317: RB3=1;
   174  00DA  1586               	bsf	6,3
   175                           ;led.c: 318: for(k=0;k<5;k++);
   176  00DB  01D6               	clrf	?a_gre_displaydrv+1
   177  00DC                     l47
   178  00DC  0AD6               	incf	?a_gre_displaydrv+1
   179  00DD  3005               	movlw	5
   180  00DE  0256               	subwf	?a_gre_displaydrv+1,w
   181  00DF  1C03               	btfss	3,0
   182  00E0  28DC               	goto	l47
   183                           ;led.c: 319: RB3=0;
   184  00E1  1186               	bcf	6,3
   185                           ;led.c: 320: tempdata >>= 1;
   186  00E2  1003               	bcf	3,0
   187  00E3  0CD8               	rrf	?a_gre_displaydrv+3
   188  00E4  0CD7               	rrf	?a_gre_displaydrv+2
   189  00E5  0AD5               	incf	?a_gre_displaydrv
   190  00E6  3010               	movlw	16
   191  00E7  0255               	subwf	?a_gre_displaydrv,w
   192  00E8  1803               	btfsc	3,0
   193  00E9  0008               	return
   194  00EA  28C5               	goto	l39
   195  00EB                     _gre_displaying
   196                           ;	_temp_gre_var0 assigned to ?a_gre_displaying+
      +                          0
   197  0000                     _gre_displaying$temp_gre_var0	set	?a_gre_displa
      +                          ying
   198                           ;	_temp_gre_var1 assigned to ?a_gre_displaying+
      +                          1
   199  0000                     _gre_displaying$temp_gre_var1	set	?a_gre_displa
      +                          ying+1
   200                           ;	_temp_gre_var2 assigned to ?a_gre_displaying+
      +                          2
   201  0000                     _gre_displaying$temp_gre_var2	set	?a_gre_displa
      +                          ying+2
   202                           ;led.c: 387: void gre_displaying(unsigned int n
      +                          umber)
   203  00EB  3000               	movlw	0
   204  00EC  0183               	clrf	3	;select bank 0
   205  00ED  024D               	subwf	?_gre_displaying+1,w
   206  00EE  3064               	movlw	100
   207  00EF  1903               	btfsc	3,2
   208  00F0  024C               	subwf	?_gre_displaying,w
   209  00F1  1C03               	btfss	3,0
   210  00F2  28F5               	goto	l73
   211  00F3  3063               	movlw	99
   212  00F4  28F6               	goto	L3
   213  00F5                     l73
   214                           ;led.c: 394: else temp_gre_var2 = number;
   215  00F5  084C               	movf	?_gre_displaying,w
   216  00F6                     L3
   217  00F6  00D0               	movwf	?a_gre_displaying+2
   218                           ;led.c: 396: temp_gre_var0 = temp_gre_var2/10;
   219  00F7  300A               	movlw	10
   220  00F8  00FA               	movwf	btemp+1
   221  00F9  0850               	movf	?a_gre_displaying+2,w
   222  00FA  118A  204C         	fcall	lbdiv
   223  00FC  00CE               	movwf	?a_gre_displaying
   224                           ;led.c: 397: if((temp_gre_var0 == 0)&&(1 == 0))
      +                           temp_gre_var0 = 10;
   225                           ;led.c: 399: temp_gre_var1 = temp_gre_var2%10;
   226  00FD  300A               	movlw	10
   227  00FE  00FA               	movwf	btemp+1
   228  00FF  0850               	movf	?a_gre_displaying+2,w
   229  0100  118A  204C         	fcall	lbmod
   230  0102  0879               	movf	btemp,w
   231  0103  00CF               	movwf	?a_gre_displaying+1
   232                           ;led.c: 401: gre_displaydrv(GREWORDS[temp_gre_v
      +                          ar0]);
   233  0104  3005               	movlw	_GREWORDS shr (0+8)
   234  0105  008A               	movwf	10
   235  0106  084E               	movf	?a_gre_displaying,w
   236  0107  074E               	addwf	?a_gre_displaying,w
   237  0108  00D1               	movwf	?a_gre_displaying+3
   238  0109  25A3               	call	((_GREWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
   239  010A  00D3               	movwf	?_gre_displaydrv
   240  010B  0A51               	incf	?a_gre_displaying+3,w
   241  010C  25A3               	call	((_GREWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
   242  010D  00D4               	movwf	?_gre_displaydrv+1
   243  010E  118A  20BC         	fcall	_gre_displaydrv
   244                           ;led.c: 402: gre_displaydrv(GREWORDS[temp_gre_v
      +                          ar1]);
   245  0110  3005               	movlw	_GREWORDS shr (0+8)
   246  0111  008A               	movwf	10
   247  0112  084F               	movf	?a_gre_displaying+1,w
   248  0113  074F               	addwf	?a_gre_displaying+1,w
   249  0114  00D1               	movwf	?a_gre_displaying+3
   250  0115  25A3               	call	((_GREWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
   251  0116  00D3               	movwf	?_gre_displaydrv
   252  0117  0A51               	incf	?a_gre_displaying+3,w
   253  0118  25A3               	call	((_GREWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
   254  0119  00D4               	movwf	?_gre_displaydrv+1
   255  011A  118A  20BC         	fcall	_gre_displaydrv
   256                           ;led.c: 404: RB5=1;
   257  011C  1686               	bsf	6,5
   258                           ;led.c: 405: for(temp_gre_var2=0;temp_gre_var2<
      +                          12;temp_gre_var2++);
   259  011D  01D0               	clrf	?a_gre_displaying+2
   260  011E                     l76
   261  011E  0AD0               	incf	?a_gre_displaying+2
   262  011F  300C               	movlw	12
   263  0120  0250               	subwf	?a_gre_displaying+2,w
   264  0121  1C03               	btfss	3,0
   265  0122  291E               	goto	l76
   266                           ;led.c: 406: RB5=0;
   267  0123  1286               	bcf	6,5
   268                           ;led.c: 407: }
   269  0124  0008               	return	;W free
   270  0125                     _gre_displaying_end
   271                           ;	_k assigned to ?a_gre_displaying_end+0
   272  0000                     _gre_displaying_end$k	set	?a_gre_displaying_end
   273                           ;led.c: 409: void gre_displaying_end(void)
   274  0125  0183               	clrf	3	;select bank 0
   275  0126  01D3               	clrf	?_gre_displaydrv
   276  0127  01D4               	clrf	?_gre_displaydrv+1
   277  0128  20BC               	fcall	_gre_displaydrv
   278                           ;led.c: 413: gre_displaydrv(0x0000);
   279  0129  01D3               	clrf	?_gre_displaydrv
   280  012A  01D4               	clrf	?_gre_displaydrv+1
   281  012B  20BC               	fcall	_gre_displaydrv
   282                           ;led.c: 414: RB5=1;
   283  012C  1686               	bsf	6,5
   284                           ;led.c: 415: for(k=0;k<12;k++);
   285  012D  01D0               	clrf	?a_gre_displaying_end
   286  012E                     l80
   287  012E  0AD0               	incf	?a_gre_displaying_end
   288  012F  300C               	movlw	12
   289  0130  0250               	subwf	?a_gre_displaying_end,w
   290  0131  1C03               	btfss	3,0
   291  0132  292E               	goto	l80
   292                           ;led.c: 416: RB5=0;
   293  0133  1286               	bcf	6,5
   294                           ;led.c: 417: }
   295  0134  0008               	return	;W free
   296  0135                     _yel_displaydrv
   297                           ;	_i assigned to ?a_yel_displaydrv+0
   298  0000                     _yel_displaydrv$i	set	?a_yel_displaydrv
   299                           ;	_k assigned to ?a_yel_displaydrv+1
   300  0000                     _yel_displaydrv$k	set	?a_yel_displaydrv+1
   301                           ;	_tempdata assigned to ?a_yel_displaydrv+2
   302  0000                     _yel_displaydrv$tempdata	set	?a_yel_displaydrv+
      +                          2
   303                           ;led.c: 280: void yel_displaydrv(unsigned int d
      +                          rvword)
   304  0135  0183               	clrf	3	;select bank 0
   305  0136  01D7               	clrf	?a_yel_displaydrv+2
   306  0137  3080               	movlw	128
   307  0138  00D8               	movwf	?a_yel_displaydrv+3
   308                           ;led.c: 286: RB0=0;
   309  0139  1006               	bcf	6,0
   310                           ;led.c: 287: RB2=0;
   311  013A  1106               	bcf	6,2
   312                           ;led.c: 288: RB5=0;
   313  013B  1286               	bcf	6,5
   314                           ;led.c: 289: RB3=0;
   315  013C  1186               	bcf	6,3
   316                           ;led.c: 290: for(i=0;i<16;i++)
   317  013D  01D5               	clrf	?a_yel_displaydrv
   318  013E                     l27
   319                           ;led.c: 291: {
   320  013E  0854               	movf	?_yel_displaydrv+1,w
   321  013F  00FA               	movwf	btemp+1
   322  0140  0853               	movf	?_yel_displaydrv,w
   323  0141  00F9               	movwf	btemp
   324  0142  0857               	movf	?a_yel_displaydrv+2,w
   325  0143  05F9               	andwf	btemp
   326  0144  0858               	movf	?a_yel_displaydrv+3,w
   327  0145  05FA               	andwf	btemp+1
   328  0146  087A               	movf	btemp+1,w
   329  0147  0479               	iorwf	btemp,w
   330  0148  1D03               	btfss	3,2
   331  0149  294C               	goto	l30
   332  014A  1086               	bcf	6,1
   333  014B  294D               	goto	l31
   334  014C                     l30
   335                           ;led.c: 293: else RB1=1;
   336  014C  1486               	bsf	6,1
   337  014D                     l31
   338                           ;led.c: 294: for(k=0;k<1;k++);
   339  014D  01D6               	clrf	?a_yel_displaydrv+1
   340  014E                     l32
   341  014E  0AD6               	incf	?a_yel_displaydrv+1
   342  014F  3001               	movlw	1
   343  0150  0256               	subwf	?a_yel_displaydrv+1,w
   344  0151  1C03               	btfss	3,0
   345  0152  294E               	goto	l32
   346                           ;led.c: 295: RB3=1;
   347  0153  1586               	bsf	6,3
   348                           ;led.c: 296: for(k=0;k<5;k++);
   349  0154  01D6               	clrf	?a_yel_displaydrv+1
   350  0155                     l35
   351  0155  0AD6               	incf	?a_yel_displaydrv+1
   352  0156  3005               	movlw	5
   353  0157  0256               	subwf	?a_yel_displaydrv+1,w
   354  0158  1C03               	btfss	3,0
   355  0159  2955               	goto	l35
   356                           ;led.c: 297: RB3=0;
   357  015A  1186               	bcf	6,3
   358                           ;led.c: 298: tempdata >>= 1;
   359  015B  1003               	bcf	3,0
   360  015C  0CD8               	rrf	?a_yel_displaydrv+3
   361  015D  0CD7               	rrf	?a_yel_displaydrv+2
   362  015E  0AD5               	incf	?a_yel_displaydrv
   363  015F  3010               	movlw	16
   364  0160  0255               	subwf	?a_yel_displaydrv,w
   365  0161  1803               	btfsc	3,0
   366  0162  0008               	return
   367  0163  293E               	goto	l27
   368  0164                     _yel_displaying
   369                           ;	_temp_yel_var0 assigned to ?a_yel_displaying+
      +                          0
   370  0000                     _yel_displaying$temp_yel_var0	set	?a_yel_displa
      +                          ying
   371                           ;	_temp_yel_var1 assigned to ?a_yel_displaying+
      +                          1
   372  0000                     _yel_displaying$temp_yel_var1	set	?a_yel_displa
      +                          ying+1
   373                           ;	_temp_yel_var2 assigned to ?a_yel_displaying+
      +                          2
   374  0000                     _yel_displaying$temp_yel_var2	set	?a_yel_displa
      +                          ying+2
   375                           ;led.c: 356: void yel_displaying(unsigned int n
      +                          umber)
   376  0164  3000               	movlw	0
   377  0165  0183               	clrf	3	;select bank 0
   378  0166  024D               	subwf	?_yel_displaying+1,w
   379  0167  3064               	movlw	100
   380  0168  1903               	btfsc	3,2
   381  0169  024C               	subwf	?_yel_displaying,w
   382  016A  1C03               	btfss	3,0
   383  016B  296E               	goto	l62
   384  016C  3063               	movlw	99
   385  016D  296F               	goto	L2
   386  016E                     l62
   387                           ;led.c: 363: else temp_yel_var2 = number;
   388  016E  084C               	movf	?_yel_displaying,w
   389  016F                     L2
   390  016F  00D0               	movwf	?a_yel_displaying+2
   391                           ;led.c: 365: temp_yel_var0 = temp_yel_var2/10;
   392  0170  300A               	movlw	10
   393  0171  00FA               	movwf	btemp+1
   394  0172  0850               	movf	?a_yel_displaying+2,w
   395  0173  118A  204C         	fcall	lbdiv
   396  0175  00CE               	movwf	?a_yel_displaying
   397                           ;led.c: 366: if((temp_yel_var0 == 0)&&(1 == 0))
      +                           temp_yel_var0 = 10;
   398                           ;led.c: 368: temp_yel_var1 = temp_yel_var2%10;
   399  0176  300A               	movlw	10
   400  0177  00FA               	movwf	btemp+1
   401  0178  0850               	movf	?a_yel_displaying+2,w
   402  0179  118A  204C         	fcall	lbmod
   403  017B  0879               	movf	btemp,w
   404  017C  00CF               	movwf	?a_yel_displaying+1
   405                           ;led.c: 370: yel_displaydrv(YELWORDS[temp_yel_v
      +                          ar0]);
   406  017D  3005               	movlw	_YELWORDS shr (0+8)
   407  017E  008A               	movwf	10
   408  017F  084E               	movf	?a_yel_displaying,w
   409  0180  074E               	addwf	?a_yel_displaying,w
   410  0181  00D1               	movwf	?a_yel_displaying+3
   411  0182  258A               	call	((_YELWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
   412  0183  00D3               	movwf	?_yel_displaydrv
   413  0184  0A51               	incf	?a_yel_displaying+3,w
   414  0185  258A               	call	((_YELWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
   415  0186  00D4               	movwf	?_yel_displaydrv+1
   416  0187  118A  2135         	fcall	_yel_displaydrv
   417                           ;led.c: 371: yel_displaydrv(YELWORDS[temp_yel_v
      +                          ar1]);
   418  0189  3005               	movlw	_YELWORDS shr (0+8)
   419  018A  008A               	movwf	10
   420  018B  084F               	movf	?a_yel_displaying+1,w
   421  018C  074F               	addwf	?a_yel_displaying+1,w
   422  018D  00D1               	movwf	?a_yel_displaying+3
   423  018E  258A               	call	((_YELWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
   424  018F  00D3               	movwf	?_yel_displaydrv
   425  0190  0A51               	incf	?a_yel_displaying+3,w
   426  0191  258A               	call	((_YELWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
   427  0192  00D4               	movwf	?_yel_displaydrv+1
   428  0193  118A  2135         	fcall	_yel_displaydrv
   429                           ;led.c: 372: RB5=1;
   430  0195  1686               	bsf	6,5
   431                           ;led.c: 373: for(temp_yel_var2=0;temp_yel_var2<
      +                          12;temp_yel_var2++);
   432  0196  01D0               	clrf	?a_yel_displaying+2
   433  0197                     l65
   434  0197  0AD0               	incf	?a_yel_displaying+2
   435  0198  300C               	movlw	12
   436  0199  0250               	subwf	?a_yel_displaying+2,w
   437  019A  1C03               	btfss	3,0
   438  019B  2997               	goto	l65
   439                           ;led.c: 374: RB5=0;
   440  019C  1286               	bcf	6,5
   441                           ;led.c: 375: }
   442  019D  0008               	return	;W free
   443  019E                     _yel_displaying_end
   444                           ;	_k assigned to ?a_yel_displaying_end+0
   445  0000                     _yel_displaying_end$k	set	?a_yel_displaying_end
   446                           ;led.c: 377: void yel_displaying_end(void)
   447  019E  0183               	clrf	3	;select bank 0
   448  019F  01D3               	clrf	?_yel_displaydrv
   449  01A0  01D4               	clrf	?_yel_displaydrv+1
   450  01A1  2135               	fcall	_yel_displaydrv
   451                           ;led.c: 381: yel_displaydrv(0x0000);
   452  01A2  01D3               	clrf	?_yel_displaydrv
   453  01A3  01D4               	clrf	?_yel_displaydrv+1
   454  01A4  2135               	fcall	_yel_displaydrv
   455                           ;led.c: 382: RB5=1;
   456  01A5  1686               	bsf	6,5
   457                           ;led.c: 383: for(k=0;k<12;k++);
   458  01A6  01CD               	clrf	?a_yel_displaying_end
   459  01A7                     l69
   460  01A7  0ACD               	incf	?a_yel_displaying_end
   461  01A8  300C               	movlw	12
   462  01A9  024D               	subwf	?a_yel_displaying_end,w
   463  01AA  1C03               	btfss	3,0
   464  01AB  29A7               	goto	l69
   465                           ;led.c: 384: RB5=0;
   466  01AC  1286               	bcf	6,5
   467                           ;led.c: 385: }
   468  01AD  0008               	return	;W free
   469  01AE                     _syn_wink_manage
   470                           ;	_tempdata assigned to ?a_syn_wink_manage+0
   471  0000                     _syn_wink_manage$tempdata	set	?a_syn_wink_manag
      +                          e
   472                           ;	_channel assigned to ?a_syn_wink_manage+1
   473  0000                     _syn_wink_manage$channel	set	?a_syn_wink_manage
      +                          +1
   474                           ;_channel stored from w
   475  01AE  0183               	clrf	3	;select bank 0
   476  01AF  00C6               	movwf	?a_syn_wink_manage+1
   477                           ;led.c: 451: void syn_wink_manage(unsigned char
      +                           channel)
   478  01B0  3001               	movlw	1
   479  01B1  00C7               	movwf	?a_syn_wink_manage+2
   480  01B2  0846               	movf	?a_syn_wink_manage+1,w
   481  01B3  00F9               	movwf	btemp
   482  01B4  0AF9               	incf	btemp
   483  01B5  29B8               	goto	u274
   484  01B6                     u275
   485  01B6  1003               	bcf	3,0
   486  01B7  0DC7               	rlf	?a_syn_wink_manage+2
   487  01B8                     u274
   488  01B8  0BF9               	decfsz	btemp
   489  01B9  29B6               	goto	u275
   490  01BA  0847               	movf	?a_syn_wink_manage+2,w
   491  01BB  00C5               	movwf	?a_syn_wink_manage
   492                           ;led.c: 458: if(syn_wink_display_updata == 1)
   493  01BC  0B2F               	decfsz	_syn_wink_display_updata,w
   494  01BD  29EE               	goto	l101
   495                           ;led.c: 459: {
   496  01BE  01AF               	clrf	_syn_wink_display_updata
   497                           ;led.c: 461: if((lamp_stab_state&tempdata) == 0
      +                          )
   498  01BF  082B               	movf	_lamp_stab_state,w
   499  01C0  0545               	andwf	?a_syn_wink_manage,w
   500  01C1  1D03               	btfss	3,2
   501  01C2  29EA               	goto	l102
   502                           ;led.c: 462: {
   503  01C3  08C6               	movf	?a_syn_wink_manage+1
   504  01C4  1D03               	btfss	3,2
   505  01C5  29D2               	goto	l103
   506  01C6  1683               	bsf	3,5
   507  01C7  083B               	movf	_display_data^(0+128),w
   508  01C8  1283               	bcf	3,5
   509  01C9  00CC               	movwf	?_red_displaying
   510  01CA  1683               	bsf	3,5
   511  01CB  083C               	movf	(_display_data+1)^(0+128),w
   512  01CC  1283               	bcf	3,5
   513  01CD  00CD               	movwf	?_red_displaying+1
   514  01CE  158A  2452  118A   	fcall	_red_displaying
   515  01D1  29E7               	goto	l104
   516  01D2                     l103
   517                           ;led.c: 464: else if(channel == 1) yel_displayi
      +                          ng(display_data[1]);
   518  01D2  0B46               	decfsz	?a_syn_wink_manage+1,w
   519  01D3  29DE               	goto	l105
   520  01D4  1683               	bsf	3,5
   521  01D5  083D               	movf	(_display_data+2)^(0+128),w
   522  01D6  1283               	bcf	3,5
   523  01D7  00CC               	movwf	?_yel_displaying
   524  01D8  1683               	bsf	3,5
   525  01D9  083E               	movf	(_display_data+3)^(0+128),w
   526  01DA  1283               	bcf	3,5
   527  01DB  00CD               	movwf	?_yel_displaying+1
   528  01DC  2164               	fcall	_yel_displaying
   529  01DD  29E7               	goto	l104
   530  01DE                     l105
   531                           ;led.c: 465: else gre_displaying(display_data[2
      +                          ]);
   532  01DE  1683               	bsf	3,5
   533  01DF  083F               	movf	(_display_data+4)^(0+128),w
   534  01E0  1283               	bcf	3,5
   535  01E1  00CC               	movwf	?_gre_displaying
   536  01E2  1683               	bsf	3,5
   537  01E3  0840               	movf	(_display_data+5)^(0+128),w
   538  01E4  1283               	bcf	3,5
   539  01E5  00CD               	movwf	?_gre_displaying+1
   540  01E6  20EB               	fcall	_gre_displaying
   541  01E7                     l104
   542                           ;led.c: 466: syn_wink_display_state = 1;
   543  01E7  01AE               	clrf	_syn_wink_display_state
   544  01E8  0AAE               	incf	_syn_wink_display_state
   545                           ;led.c: 467: }
   546  01E9  29EE               	goto	l101
   547  01EA                     l102
   548                           ;led.c: 468: else
   549  01EA  158A  248C  118A   	fcall	_red_displaying_end
   550                           ;led.c: 471: syn_wink_display_state = 0;
   551  01ED  01AE               	clrf	_syn_wink_display_state
   552  01EE                     l101
   553                           ;led.c: 472: }
   554  01EE  0B2E               	decfsz	_syn_wink_display_state,w
   555  01EF  29F9               	goto	l108
   556                           ;led.c: 476: {
   557  01F0  082B               	movf	_lamp_stab_state,w
   558  01F1  0545               	andwf	?a_syn_wink_manage,w
   559  01F2  1903               	btfsc	3,2
   560  01F3  0008               	return
   561                           ;led.c: 478: {
   562  01F4  158A  248C  118A   	fcall	_red_displaying_end
   563                           ;led.c: 480: syn_wink_display_state = 0;
   564  01F7  01AE               	clrf	_syn_wink_display_state
   565                           ;led.c: 481: }
   566  01F8  0008               	return
   567  01F9                     l108
   568                           ;led.c: 483: else
   569  01F9  082B               	movf	_lamp_stab_state,w
   570  01FA  0545               	andwf	?a_syn_wink_manage,w
   571  01FB  1D03               	btfss	3,2
   572  01FC  0008               	return
   573                           ;led.c: 486: {
   574  01FD  08C6               	movf	?a_syn_wink_manage+1
   575  01FE  1D03               	btfss	3,2
   576  01FF  2A0C               	goto	l112
   577  0200  1683               	bsf	3,5
   578  0201  083B               	movf	_display_data^(0+128),w
   579  0202  1283               	bcf	3,5
   580  0203  00CC               	movwf	?_red_displaying
   581  0204  1683               	bsf	3,5
   582  0205  083C               	movf	(_display_data+1)^(0+128),w
   583  0206  1283               	bcf	3,5
   584  0207  00CD               	movwf	?_red_displaying+1
   585  0208  158A  2452  118A   	fcall	_red_displaying
   586  020B  2A21               	goto	l113
   587  020C                     l112
   588                           ;led.c: 488: else if(channel == 1) yel_displayi
      +                          ng(display_data[1]);
   589  020C  0B46               	decfsz	?a_syn_wink_manage+1,w
   590  020D  2A18               	goto	l114
   591  020E  1683               	bsf	3,5
   592  020F  083D               	movf	(_display_data+2)^(0+128),w
   593  0210  1283               	bcf	3,5
   594  0211  00CC               	movwf	?_yel_displaying
   595  0212  1683               	bsf	3,5
   596  0213  083E               	movf	(_display_data+3)^(0+128),w
   597  0214  1283               	bcf	3,5
   598  0215  00CD               	movwf	?_yel_displaying+1
   599  0216  2164               	fcall	_yel_displaying
   600  0217  2A21               	goto	l113
   601  0218                     l114
   602                           ;led.c: 489: else gre_displaying(display_data[2
      +                          ]);
   603  0218  1683               	bsf	3,5
   604  0219  083F               	movf	(_display_data+4)^(0+128),w
   605  021A  1283               	bcf	3,5
   606  021B  00CC               	movwf	?_gre_displaying
   607  021C  1683               	bsf	3,5
   608  021D  0840               	movf	(_display_data+5)^(0+128),w
   609  021E  1283               	bcf	3,5
   610  021F  00CD               	movwf	?_gre_displaying+1
   611  0220  20EB               	fcall	_gre_displaying
   612  0221                     l113
   613                           ;led.c: 490: syn_wink_display_state = 1;
   614  0221  01AE               	clrf	_syn_wink_display_state
   615  0222  0AAE               	incf	_syn_wink_display_state
   616                           ;led.c: 491: }
   617  0223  0008               	return
   618  0224                     _down_time_display
   619                           ;led.c: 506: void down_time_display(void)
   620  0224  1683               	bsf	3,5
   621  0225  1303               	bcf	3,6	;carry unused
   622  0226  083C               	movf	(_display_data+1)^(0+128),w
   623  0227  043B               	iorwf	_display_data^(0+128),w
   624  0228  1903               	btfsc	3,2
   625  0229  2A41               	goto	l123
   626                           ;led.c: 513: {
   627  022A  08A6               	movf	_red_displaying_flag^(0+128)
   628  022B  1D03               	btfss	3,2
   629  022C  2A41               	goto	l123
   630                           ;led.c: 515: {
   631                           ;led.c: 517: red_displaying_flag = 1;
   632  022D  01A6               	clrf	_red_displaying_flag^(0+128)
   633  022E  0AA6               	incf	_red_displaying_flag^(0+128)
   634                           ;led.c: 520: gre_displaying_flag = 0;
   635  022F  01A3               	clrf	_gre_displaying_flag^(0+128)
   636                           ;led.c: 521: yel_displaying_flag = 0;
   637  0230  01B1               	clrf	_yel_displaying_flag^(0+128)
   638                           ;led.c: 522: display_data[2] = 0;
   639  0231  01BF               	clrf	(_display_data+4)^(0+128)
   640  0232  01C0               	clrf	(_display_data+5)^(0+128)
   641                           ;led.c: 523: display_data[1] = 0;
   642  0233  01BD               	clrf	(_display_data+2)^(0+128)
   643  0234  01BE               	clrf	(_display_data+3)^(0+128)
   644                           ;led.c: 525: syn_wink_display_updata = 1;
   645  0235  1283               	bcf	3,5
   646  0236  01AF               	clrf	_syn_wink_display_updata
   647  0237  0AAF               	incf	_syn_wink_display_updata
   648                           ;led.c: 526: if(study_or_pulse_mode == 1) displ
      +                          aying_second_counter = lamp_off_time[0];
   649  0238  1683               	bsf	3,5
   650  0239  0B2A               	decfsz	_study_or_pulse_mode^(0+128),w
   651  023A  2A40               	goto	l126
   652  023B  1283               	bcf	3,5
   653  023C  0833               	movf	_lamp_off_time,w
   654  023D  1683               	bsf	3,5
   655  023E  00A2               	movwf	_displaying_second_counter^(0+128)
   656  023F  2A41               	goto	l123
   657  0240                     l126
   658                           ;led.c: 527: else displaying_second_counter = 0
      +                          ;
   659  0240  01A2               	clrf	_displaying_second_counter^(0+128)
   660  0241                     l123
   661                           ;led.c: 528: }
   662  0241  083E               	movf	(_display_data+3)^(0+128),w
   663  0242  043D               	iorwf	(_display_data+2)^(0+128),w
   664  0243  1903               	btfsc	3,2
   665  0244  2A54               	goto	l128
   666                           ;led.c: 532: {
   667  0245  08B1               	movf	_yel_displaying_flag^(0+128)
   668  0246  1D03               	btfss	3,2
   669  0247  2A54               	goto	l128
   670                           ;led.c: 534: {
   671                           ;led.c: 536: yel_displaying_flag = 1;
   672  0248  01B1               	clrf	_yel_displaying_flag^(0+128)
   673  0249  0AB1               	incf	_yel_displaying_flag^(0+128)
   674                           ;led.c: 537: displaying_second_counter = 0;
   675  024A  01A2               	clrf	_displaying_second_counter^(0+128)
   676                           ;led.c: 540: red_displaying_flag = 0;
   677  024B  01A6               	clrf	_red_displaying_flag^(0+128)
   678                           ;led.c: 541: gre_displaying_flag = 0;
   679  024C  01A3               	clrf	_gre_displaying_flag^(0+128)
   680                           ;led.c: 542: display_data[0] = 0;
   681  024D  01BB               	clrf	_display_data^(0+128)
   682  024E  01BC               	clrf	(_display_data+1)^(0+128)
   683                           ;led.c: 543: display_data[2] = 0;
   684  024F  01BF               	clrf	(_display_data+4)^(0+128)
   685  0250  01C0               	clrf	(_display_data+5)^(0+128)
   686                           ;led.c: 545: syn_wink_display_updata = 1;
   687  0251  1283               	bcf	3,5
   688  0252  01AF               	clrf	_syn_wink_display_updata
   689  0253  0AAF               	incf	_syn_wink_display_updata
   690  0254                     l128
   691                           ;led.c: 546: }
   692  0254  1683               	bsf	3,5
   693  0255  0840               	movf	(_display_data+5)^(0+128),w
   694  0256  043F               	iorwf	(_display_data+4)^(0+128),w
   695  0257  1903               	btfsc	3,2
   696  0258  2A70               	goto	l131
   697                           ;led.c: 550: {
   698  0259  08A3               	movf	_gre_displaying_flag^(0+128)
   699  025A  1D03               	btfss	3,2
   700  025B  2A70               	goto	l131
   701                           ;led.c: 552: {
   702                           ;led.c: 554: gre_displaying_flag = 1;
   703  025C  01A3               	clrf	_gre_displaying_flag^(0+128)
   704  025D  0AA3               	incf	_gre_displaying_flag^(0+128)
   705                           ;led.c: 557: red_displaying_flag = 0;
   706  025E  01A6               	clrf	_red_displaying_flag^(0+128)
   707                           ;led.c: 558: yel_displaying_flag = 0;
   708  025F  01B1               	clrf	_yel_displaying_flag^(0+128)
   709                           ;led.c: 559: display_data[0] = 0;
   710  0260  01BB               	clrf	_display_data^(0+128)
   711  0261  01BC               	clrf	(_display_data+1)^(0+128)
   712                           ;led.c: 560: display_data[1] = 0;
   713  0262  01BD               	clrf	(_display_data+2)^(0+128)
   714  0263  01BE               	clrf	(_display_data+3)^(0+128)
   715                           ;led.c: 562: syn_wink_display_updata = 1;
   716  0264  1283               	bcf	3,5
   717  0265  01AF               	clrf	_syn_wink_display_updata
   718  0266  0AAF               	incf	_syn_wink_display_updata
   719                           ;led.c: 563: if(study_or_pulse_mode == 1) displ
      +                          aying_second_counter = lamp_off_time[2];
   720  0267  1683               	bsf	3,5
   721  0268  0B2A               	decfsz	_study_or_pulse_mode^(0+128),w
   722  0269  2A6F               	goto	l134
   723  026A  1283               	bcf	3,5
   724  026B  0835               	movf	_lamp_off_time+2,w
   725  026C  1683               	bsf	3,5
   726  026D  00A2               	movwf	_displaying_second_counter^(0+128)
   727  026E  2A70               	goto	l131
   728  026F                     l134
   729                           ;led.c: 564: else displaying_second_counter = 0
      +                          ;
   730  026F  01A2               	clrf	_displaying_second_counter^(0+128)
   731  0270                     l131
   732                           ;led.c: 565: }
   733  0270  0B26               	decfsz	_red_displaying_flag^(0+128),w
   734  0271  2A98               	goto	l136
   735                           ;led.c: 569: {
   736  0272  0AA2               	incf	_displaying_second_counter^(0+128)
   737                           ;led.c: 571: if(displaying_second_counter >= 10
      +                          0)
   738  0273  3064               	movlw	100
   739  0274  0222               	subwf	_displaying_second_counter^(0+128),w
   740  0275  1C03               	btfss	3,0
   741  0276  2A95               	goto	l137
   742                           ;led.c: 572: {
   743  0277  01A2               	clrf	_displaying_second_counter^(0+128)
   744                           ;led.c: 574: if(1==0)
   745                           ;led.c: 589: else
   746  0278  3000               	movlw	0
   747  0279  023C               	subwf	(_display_data+1)^(0+128),w
   748  027A  3002               	movlw	2
   749  027B  1903               	btfsc	3,2
   750  027C  023B               	subwf	_display_data^(0+128),w
   751  027D  1803               	btfsc	3,0
   752  027E  2A87               	goto	l143
   753                           ;led.c: 592: {
   754  027F  158A  248C  118A   	fcall	_red_displaying_end
   755                           ;led.c: 594: red_displaying_flag = 0;
   756  0282  1683               	bsf	3,5
   757  0283  01A6               	clrf	_red_displaying_flag^(0+128)
   758                           ;led.c: 595: display_data[0] = 0;
   759  0284  01BB               	clrf	_display_data^(0+128)
   760  0285  01BC               	clrf	(_display_data+1)^(0+128)
   761                           ;led.c: 596: }
   762  0286  2A95               	goto	l137
   763  0287                     l143
   764                           ;led.c: 597: else
   765  0287  08BB               	movf	_display_data^(0+128)
   766  0288  1903               	btfsc	3,2
   767  0289  03BC               	decf	(_display_data+1)^(0+128)
   768  028A  03BB               	decf	_display_data^(0+128)
   769                           ;led.c: 601: syn_wink_display_updata = 1;
   770  028B  1283               	bcf	3,5
   771  028C  01AF               	clrf	_syn_wink_display_updata
   772  028D  0AAF               	incf	_syn_wink_display_updata
   773                           ;led.c: 602: if(display_data[0] == 1) displayin
      +                          g_second_counter = 2;
   774  028E  1683               	bsf	3,5
   775  028F  033B               	decf	_display_data^(0+128),w
   776  0290  043C               	iorwf	(_display_data+1)^(0+128),w
   777  0291  1D03               	btfss	3,2
   778  0292  2A95               	goto	l137
   779  0293  3002               	movlw	2
   780  0294  00A2               	movwf	_displaying_second_counter^(0+128)
   781  0295                     l137
   782                           ;led.c: 603: }
   783  0295  3000               	movlw	0
   784  0296  21AE  118A         	fcall	_syn_wink_manage
   785  0298                     l136
   786                           ;led.c: 607: }
   787  0298  1683               	bsf	3,5
   788  0299  0B31               	decfsz	_yel_displaying_flag^(0+128),w
   789  029A  2ABF               	goto	l146
   790                           ;led.c: 610: {
   791  029B  0AA2               	incf	_displaying_second_counter^(0+128)
   792                           ;led.c: 612: if(displaying_second_counter >= 10
      +                          0)
   793  029C  3064               	movlw	100
   794  029D  0222               	subwf	_displaying_second_counter^(0+128),w
   795  029E  1C03               	btfss	3,0
   796  029F  2ABC               	goto	l147
   797                           ;led.c: 613: {
   798  02A0  01A2               	clrf	_displaying_second_counter^(0+128)
   799                           ;led.c: 615: if(1==0)
   800                           ;led.c: 630: else
   801  02A1  3000               	movlw	0
   802  02A2  023E               	subwf	(_display_data+3)^(0+128),w
   803  02A3  3002               	movlw	2
   804  02A4  1903               	btfsc	3,2
   805  02A5  023D               	subwf	(_display_data+2)^(0+128),w
   806  02A6  1803               	btfsc	3,0
   807  02A7  2AAE               	goto	l153
   808                           ;led.c: 633: {
   809  02A8  219E               	fcall	_yel_displaying_end
   810                           ;led.c: 635: yel_displaying_flag = 0;
   811  02A9  1683               	bsf	3,5
   812  02AA  01B1               	clrf	_yel_displaying_flag^(0+128)
   813                           ;led.c: 636: display_data[1] = 0;
   814  02AB  01BD               	clrf	(_display_data+2)^(0+128)
   815  02AC  01BE               	clrf	(_display_data+3)^(0+128)
   816                           ;led.c: 637: }
   817  02AD  2ABC               	goto	l147
   818  02AE                     l153
   819                           ;led.c: 638: else
   820  02AE  08BD               	movf	(_display_data+2)^(0+128)
   821  02AF  1903               	btfsc	3,2
   822  02B0  03BE               	decf	(_display_data+3)^(0+128)
   823  02B1  03BD               	decf	(_display_data+2)^(0+128)
   824                           ;led.c: 642: syn_wink_display_updata = 1;
   825  02B2  1283               	bcf	3,5
   826  02B3  01AF               	clrf	_syn_wink_display_updata
   827  02B4  0AAF               	incf	_syn_wink_display_updata
   828                           ;led.c: 643: if(display_data[1] == 1) displayin
      +                          g_second_counter = 2;
   829  02B5  1683               	bsf	3,5
   830  02B6  033D               	decf	(_display_data+2)^(0+128),w
   831  02B7  043E               	iorwf	(_display_data+3)^(0+128),w
   832  02B8  1D03               	btfss	3,2
   833  02B9  2ABC               	goto	l147
   834  02BA  3002               	movlw	2
   835  02BB  00A2               	movwf	_displaying_second_counter^(0+128)
   836  02BC                     l147
   837                           ;led.c: 644: }
   838  02BC  3001               	movlw	1
   839  02BD  21AE  118A         	fcall	_syn_wink_manage
   840  02BF                     l146
   841                           ;led.c: 648: }
   842  02BF  1683               	bsf	3,5
   843  02C0  0B23               	decfsz	_gre_displaying_flag^(0+128),w
   844  02C1  2AE6               	goto	l156
   845                           ;led.c: 651: {
   846  02C2  0AA2               	incf	_displaying_second_counter^(0+128)
   847                           ;led.c: 653: if(displaying_second_counter >= 10
      +                          0)
   848  02C3  3064               	movlw	100
   849  02C4  0222               	subwf	_displaying_second_counter^(0+128),w
   850  02C5  1C03               	btfss	3,0
   851  02C6  2AE3               	goto	l157
   852                           ;led.c: 654: {
   853  02C7  01A2               	clrf	_displaying_second_counter^(0+128)
   854                           ;led.c: 656: if(1==0)
   855                           ;led.c: 671: else
   856  02C8  3000               	movlw	0
   857  02C9  0240               	subwf	(_display_data+5)^(0+128),w
   858  02CA  3002               	movlw	2
   859  02CB  1903               	btfsc	3,2
   860  02CC  023F               	subwf	(_display_data+4)^(0+128),w
   861  02CD  1803               	btfsc	3,0
   862  02CE  2AD5               	goto	l163
   863                           ;led.c: 674: {
   864  02CF  2125               	fcall	_gre_displaying_end
   865                           ;led.c: 676: gre_displaying_flag = 0;
   866  02D0  1683               	bsf	3,5
   867  02D1  01A3               	clrf	_gre_displaying_flag^(0+128)
   868                           ;led.c: 677: display_data[2] = 0;
   869  02D2  01BF               	clrf	(_display_data+4)^(0+128)
   870  02D3  01C0               	clrf	(_display_data+5)^(0+128)
   871                           ;led.c: 678: }
   872  02D4  2AE3               	goto	l157
   873  02D5                     l163
   874                           ;led.c: 679: else
   875  02D5  08BF               	movf	(_display_data+4)^(0+128)
   876  02D6  1903               	btfsc	3,2
   877  02D7  03C0               	decf	(_display_data+5)^(0+128)
   878  02D8  03BF               	decf	(_display_data+4)^(0+128)
   879                           ;led.c: 683: syn_wink_display_updata = 1;
   880  02D9  1283               	bcf	3,5
   881  02DA  01AF               	clrf	_syn_wink_display_updata
   882  02DB  0AAF               	incf	_syn_wink_display_updata
   883                           ;led.c: 684: if(display_data[2] == 1) displayin
      +                          g_second_counter = 2;
   884  02DC  1683               	bsf	3,5
   885  02DD  033F               	decf	(_display_data+4)^(0+128),w
   886  02DE  0440               	iorwf	(_display_data+5)^(0+128),w
   887  02DF  3002               	movlw	2
   888  02E0  1D03               	btfss	3,2
   889  02E1  2AE4               	goto	L4
   890  02E2  00A2               	movwf	_displaying_second_counter^(0+128)
   891  02E3                     l157
   892                           ;led.c: 685: }
   893  02E3  3002               	movlw	2
   894  02E4                     L4
   895  02E4  21AE  118A         	fcall	_syn_wink_manage
   896  02E6                     l156
   897                           ;led.c: 689: }
   898  02E6  1283               	bcf	3,5
   899  02E7  0008               	return	;W free
   900                           
   901                           	psect	text18
   902  02E8                     _seek_down_pulse
   903                           ;	_temp_var3 assigned to ?a_seek_down_pulse+0
   904  0000                     _seek_down_pulse$temp_var3	set	?a_seek_down_pul
      +                          se
   905                           ;	_temp_var1 assigned to ?a_seek_down_pulse+1
   906  0000                     _seek_down_pulse$temp_var1	set	?a_seek_down_pul
      +                          se+1
   907                           ;	_i assigned to ?a_seek_down_pulse+2
   908  0000                     _seek_down_pulse$i	set	?a_seek_down_pulse+2
   909                           ;led.c: 740: void seek_down_pulse(void)
   910  02E8  0183               	clrf	3	;select bank 0
   911  02E9  01C6               	clrf	?a_seek_down_pulse+1
   912  02EA  0AC6               	incf	?a_seek_down_pulse+1
   913                           ;led.c: 747: for(i=0;i<3;i++)
   914  02EB  01C7               	clrf	?a_seek_down_pulse+2
   915  02EC                     l179
   916                           ;led.c: 748: {
   917  02EC  0946               	comf	?a_seek_down_pulse+1,w
   918  02ED  3907               	andlw	7
   919  02EE  00C5               	movwf	?a_seek_down_pulse
   920                           ;led.c: 750: if(i != 1)
   921  02EF  0347               	decf	?a_seek_down_pulse+2,w
   922  02F0  1903               	btfsc	3,2
   923  02F1  2C12               	goto	l182
   924                           ;led.c: 751: {
   925  02F2  082B               	movf	_lamp_stab_state,w
   926  02F3  0546               	andwf	?a_seek_down_pulse+1,w
   927  02F4  1D03               	btfss	3,2
   928  02F5  2BDD               	goto	l183
   929                           ;led.c: 753: {
   930  02F6  082A               	movf	_lamp_on_flag,w
   931  02F7  0546               	andwf	?a_seek_down_pulse+1,w
   932  02F8  1D03               	btfss	3,2
   933  02F9  2BBE               	goto	l184
   934                           ;led.c: 755: {
   935  02FA  0846               	movf	?a_seek_down_pulse+1,w
   936  02FB  04AA               	iorwf	_lamp_on_flag
   937                           ;led.c: 757: lamp_off_flag &= ~temp_var1;
   938  02FC  0946               	comf	?a_seek_down_pulse+1,w
   939  02FD  05A9               	andwf	_lamp_off_flag
   940                           ;led.c: 758: if((lamp_off_counter[i] >= (80-34)
      +                          )&&(lamp_off_counter[i] <= (160+5)))
   941  02FE  0847               	movf	?a_seek_down_pulse+2,w
   942  02FF  0747               	addwf	?a_seek_down_pulse+2,w
   943  0300  3E36               	addlw	_lamp_off_counter
   944  0301  0084               	movwf	4
   945  0302  1383               	bcf	3,7
   946  0303  0800               	movf	0,w
   947  0304  00F9               	movwf	btemp
   948  0305  0A84               	incf	4
   949  0306  0800               	movf	0,w
   950  0307  00FA               	movwf	btemp+1
   951  0308  3000               	movlw	0
   952  0309  027A               	subwf	btemp+1,w
   953  030A  302E               	movlw	46
   954  030B  1903               	btfsc	3,2
   955  030C  0279               	subwf	btemp,w
   956  030D  0847               	movf	?a_seek_down_pulse+2,w
   957  030E  1C03               	btfss	3,0
   958  030F  2BB6               	goto	L13
   959  0310  0747               	addwf	?a_seek_down_pulse+2,w
   960  0311  3E36               	addlw	_lamp_off_counter
   961  0312  0084               	movwf	4
   962  0313  0800               	movf	0,w
   963  0314  00F9               	movwf	btemp
   964  0315  0A84               	incf	4
   965  0316  0800               	movf	0,w
   966  0317  00FA               	movwf	btemp+1
   967  0318  3000               	movlw	0
   968  0319  027A               	subwf	btemp+1,w
   969  031A  30A6               	movlw	166
   970  031B  1903               	btfsc	3,2
   971  031C  0279               	subwf	btemp,w
   972                           ;led.c: 759: {
   973  031D  0847               	movf	?a_seek_down_pulse+2,w
   974  031E  1803               	btfsc	3,0
   975  031F  2BB6               	goto	L13
   976  0320  0747               	addwf	?a_seek_down_pulse+2,w
   977  0321  3E3C               	addlw	_lamp_on_counter
   978  0322  0084               	movwf	4
   979  0323  0800               	movf	0,w
   980  0324  00F9               	movwf	btemp
   981  0325  0A84               	incf	4
   982  0326  0800               	movf	0,w
   983  0327  00FA               	movwf	btemp+1
   984  0328  3003               	movlw	3
   985  0329  027A               	subwf	btemp+1,w
   986  032A  3084               	movlw	132
   987  032B  1903               	btfsc	3,2
   988  032C  0279               	subwf	btemp,w
   989  032D  1C03               	btfss	3,0
   990  032E  2BB5               	goto	l185
   991                           ;led.c: 761: {
   992  032F  1683               	bsf	3,5
   993  0330  0B2A               	decfsz	_study_or_pulse_mode^(0+128),w
   994  0331  2B84               	goto	l187
   995                           ;led.c: 763: {
   996  0332  01A5               	clrf	_pulse_to_study^(0+128)
   997                           ;led.c: 765: if(communication_flag == 0)
   998  0333  08A1               	movf	_communication_flag^(0+128)
   999                           ;led.c: 766: {
  1000  0334  1283               	bcf	3,5
  1001  0335  1D03               	btfss	3,2
  1002  0336  2B92               	goto	L14
  1003  0337  082B               	movf	_lamp_stab_state,w
  1004  0338  0645               	xorwf	?a_seek_down_pulse,w
  1005  0339  1D03               	btfss	3,2
  1006  033A  2B91               	goto	l197
  1007                           ;led.c: 768: {
  1008                           ;led.c: 775: else
  1009  033B  1703               	bsf	3,6
  1010  033C  0824               	movf	_pulse_down_time_valid_flag^(0+256),w
  1011  033D  1303               	bcf	3,6	;carry unused
  1012  033E  0546               	andwf	?a_seek_down_pulse+1,w
  1013  033F  0646               	xorwf	?a_seek_down_pulse+1,w
  1014  0340  1D03               	btfss	3,2
  1015  0341  2B6B               	goto	l193
  1016                           ;led.c: 778: {
  1017  0342  08C7               	movf	?a_seek_down_pulse+2
  1018  0343  1683               	bsf	3,5
  1019  0344  1D03               	btfss	3,2
  1020  0345  2B47               	goto	l195
  1021  0346  01A6               	clrf	_red_displaying_flag^(0+128)
  1022  0347                     l195
  1023                           ;led.c: 780: if(i==2)gre_displaying_flag = 0;
  1024  0347  1283               	bcf	3,5
  1025  0348  0847               	movf	?a_seek_down_pulse+2,w
  1026  0349  3A02               	xorlw	2
  1027  034A  1683               	bsf	3,5
  1028  034B  1903               	btfsc	3,2
  1029  034C  01A3               	clrf	_gre_displaying_flag^(0+128)
  1030                           ;led.c: 781: display_data[i] = (pulse_down_time
      +                          s[i]+18)/100;
  1031  034D  3064               	movlw	100
  1032  034E  00FB               	movwf	btemp+2
  1033  034F  01FC               	clrf	btemp+3
  1034  0350  1283               	bcf	3,5
  1035  0351  0847               	movf	?a_seek_down_pulse+2,w
  1036  0352  0747               	addwf	?a_seek_down_pulse+2,w
  1037  0353  3E28               	addlw	_pulse_down_times^(0+256)
  1038  0354  0084               	movwf	4
  1039  0355  1783               	bsf	3,7
  1040  0356  0800               	movf	0,w
  1041  0357  00F9               	movwf	btemp
  1042  0358  0A84               	incf	4
  1043  0359  0800               	movf	0,w
  1044  035A  00FA               	movwf	btemp+1
  1045  035B  3012               	movlw	18
  1046  035C  07F9               	addwf	btemp
  1047  035D  1803               	btfsc	3,0
  1048  035E  0AFA               	incf	btemp+1
  1049  035F  118A  2082         	fcall	lwdiv
  1050  0361  0847               	movf	?a_seek_down_pulse+2,w
  1051  0362  0747               	addwf	?a_seek_down_pulse+2,w
  1052  0363  3EBB               	addlw	_display_data
  1053  0364  0084               	movwf	4
  1054  0365  1383               	bcf	3,7
  1055  0366  087D               	movf	btemp+4,w
  1056  0367  0080               	movwf	0
  1057  0368  0A84               	incf	4
  1058  0369  087E               	movf	btemp+5,w
  1059  036A  0080               	movwf	0
  1060  036B                     l193
  1061                           ;led.c: 782: }
  1062  036B  300A               	movlw	10
  1063  036C  00FB               	movwf	btemp+2
  1064  036D  01FC               	clrf	btemp+3
  1065  036E  0847               	movf	?a_seek_down_pulse+2,w
  1066  036F  0747               	addwf	?a_seek_down_pulse+2,w
  1067  0370  3E36               	addlw	_lamp_off_counter
  1068  0371  0084               	movwf	4
  1069  0372  0800               	movf	0,w
  1070  0373  00F9               	movwf	btemp
  1071  0374  0A84               	incf	4
  1072  0375  0800               	movf	0,w
  1073  0376  00FA               	movwf	btemp+1
  1074  0377  118A  2082  118A   	fcall	lwdiv
  1075  037A  087D               	movf	btemp+4,w
  1076  037B  3EFD               	addlw	-3
  1077  037C  00C8               	movwf	?a_seek_down_pulse+3
  1078  037D  0847               	movf	?a_seek_down_pulse+2,w
  1079  037E  3E33               	addlw	_lamp_off_time
  1080  037F  0084               	movwf	4
  1081  0380  1383               	bcf	3,7
  1082  0381  0848               	movf	?a_seek_down_pulse+3,w
  1083  0382  0080               	movwf	0
  1084                           ;led.c: 785: }
  1085  0383  2B91               	goto	l197
  1086  0384                     l187
  1087                           ;led.c: 788: else
  1088  0384  082E               	movf	_study_to_pulse_flag^(0+128),w
  1089  0385  1283               	bcf	3,5
  1090  0386  0546               	andwf	?a_seek_down_pulse+1,w
  1091  0387  0646               	xorwf	?a_seek_down_pulse+1,w
  1092  0388  1D03               	btfss	3,2
  1093  0389  2B8E               	goto	l198
  1094  038A  0946               	comf	?a_seek_down_pulse+1,w
  1095  038B  1683               	bsf	3,5
  1096  038C  05AE               	andwf	_study_to_pulse_flag^(0+128)
  1097  038D  2B91               	goto	l197
  1098  038E                     l198
  1099                           ;led.c: 791: else study_to_pulse_flag |= temp_v
      +                          ar1;
  1100  038E  0846               	movf	?a_seek_down_pulse+1,w
  1101  038F  1683               	bsf	3,5
  1102  0390  04AE               	iorwf	_study_to_pulse_flag^(0+128)
  1103  0391                     l197
  1104                           ;led.c: 792: }
  1105  0391  1283               	bcf	3,5
  1106  0392                     L14
  1107  0392  1703               	bsf	3,6
  1108  0393  0825               	movf	_pulse_study_time_flag^(0+256),w
  1109  0394  1303               	bcf	3,6	;carry unused
  1110  0395  0546               	andwf	?a_seek_down_pulse+1,w
  1111  0396  1D03               	btfss	3,2
  1112  0397  2BB5               	goto	l185
  1113                           ;led.c: 795: {
  1114  0398  0846               	movf	?a_seek_down_pulse+1,w
  1115  0399  1703               	bsf	3,6
  1116  039A  04A5               	iorwf	_pulse_study_time_flag^(0+256)
  1117                           ;led.c: 797: pulse_study_time_counter[i]=lamp_o
      +                          ff_counter[i]/10;
  1118  039B  300A               	movlw	10
  1119  039C  00FB               	movwf	btemp+2
  1120  039D  01FC               	clrf	btemp+3
  1121  039E  1303               	bcf	3,6	;carry unused
  1122  039F  0847               	movf	?a_seek_down_pulse+2,w
  1123  03A0  0747               	addwf	?a_seek_down_pulse+2,w
  1124  03A1  3E36               	addlw	_lamp_off_counter
  1125  03A2  0084               	movwf	4
  1126  03A3  0800               	movf	0,w
  1127  03A4  00F9               	movwf	btemp
  1128  03A5  0A84               	incf	4
  1129  03A6  0800               	movf	0,w
  1130  03A7  00FA               	movwf	btemp+1
  1131  03A8  118A  2082  118A   	fcall	lwdiv
  1132  03AB  0847               	movf	?a_seek_down_pulse+2,w
  1133  03AC  0747               	addwf	?a_seek_down_pulse+2,w
  1134  03AD  3E2E               	addlw	_pulse_study_time_counter^(0+256)
  1135  03AE  0084               	movwf	4
  1136  03AF  1783               	bsf	3,7
  1137  03B0  087D               	movf	btemp+4,w
  1138  03B1  0080               	movwf	0
  1139  03B2  0A84               	incf	4
  1140  03B3  087E               	movf	btemp+5,w
  1141  03B4  0080               	movwf	0
  1142  03B5                     l185
  1143                           ;led.c: 798: }
  1144  03B5  0847               	movf	?a_seek_down_pulse+2,w
  1145  03B6                     L13
  1146  03B6  0747               	addwf	?a_seek_down_pulse+2,w
  1147  03B7  3E3C               	addlw	_lamp_on_counter
  1148  03B8  0084               	movwf	4
  1149  03B9  1383               	bcf	3,7
  1150  03BA  0180               	clrf	0
  1151  03BB  0A84               	incf	4
  1152  03BC  0180               	clrf	0
  1153                           ;led.c: 802: }
  1154  03BD  2C12               	goto	l182
  1155  03BE                     l184
  1156                           ;led.c: 803: else
  1157  03BE  0847               	movf	?a_seek_down_pulse+2,w
  1158  03BF  0747               	addwf	?a_seek_down_pulse+2,w
  1159  03C0  3E3C               	addlw	_lamp_on_counter
  1160  03C1  0084               	movwf	4
  1161  03C2  1383               	bcf	3,7
  1162  03C3  3001               	movlw	1
  1163  03C4  0780               	addwf	0
  1164  03C5  0A84               	incf	4
  1165  03C6  1803               	btfsc	3,0
  1166  03C7  0A80               	incf	0
  1167                           ;led.c: 806: if(lamp_on_counter[i] >= 50000) la
      +                          mp_on_counter[i] = 50000;
  1168  03C8  0847               	movf	?a_seek_down_pulse+2,w
  1169  03C9  0747               	addwf	?a_seek_down_pulse+2,w
  1170  03CA  3E3C               	addlw	_lamp_on_counter
  1171  03CB  0084               	movwf	4
  1172  03CC  1383               	bcf	3,7
  1173  03CD  0800               	movf	0,w
  1174  03CE  00F9               	movwf	btemp
  1175  03CF  0A84               	incf	4
  1176  03D0  0800               	movf	0,w
  1177  03D1  00FA               	movwf	btemp+1
  1178  03D2  30C3               	movlw	195
  1179  03D3  027A               	subwf	btemp+1,w
  1180  03D4  3050               	movlw	80
  1181  03D5  1903               	btfsc	3,2
  1182  03D6  0279               	subwf	btemp,w
  1183  03D7  1C03               	btfss	3,0
  1184  03D8  2C13               	goto	L11
  1185  03D9  0847               	movf	?a_seek_down_pulse+2,w
  1186  03DA  0747               	addwf	?a_seek_down_pulse+2,w
  1187  03DB  3E3C               	addlw	_lamp_on_counter
  1188  03DC  2C0C               	goto	L10
  1189                           ;led.c: 807: }
  1190  03DD                     l183
  1191                           ;led.c: 809: else
  1192  03DD  0829               	movf	_lamp_off_flag,w
  1193  03DE  0546               	andwf	?a_seek_down_pulse+1,w
  1194  03DF  1D03               	btfss	3,2
  1195  03E0  2BEE               	goto	l204
  1196                           ;led.c: 812: {
  1197  03E1  0846               	movf	?a_seek_down_pulse+1,w
  1198  03E2  04A9               	iorwf	_lamp_off_flag
  1199                           ;led.c: 814: lamp_off_counter[i]=0;
  1200  03E3  0847               	movf	?a_seek_down_pulse+2,w
  1201  03E4  0747               	addwf	?a_seek_down_pulse+2,w
  1202  03E5  3E36               	addlw	_lamp_off_counter
  1203  03E6  0084               	movwf	4
  1204  03E7  1383               	bcf	3,7
  1205  03E8  0180               	clrf	0
  1206  03E9  0A84               	incf	4
  1207  03EA  0180               	clrf	0
  1208                           ;led.c: 815: lamp_on_flag &= ~temp_var1;
  1209  03EB  0946               	comf	?a_seek_down_pulse+1,w
  1210  03EC  05AA               	andwf	_lamp_on_flag
  1211                           ;led.c: 816: }
  1212  03ED  2C12               	goto	l182
  1213  03EE                     l204
  1214                           ;led.c: 817: else
  1215  03EE  0847               	movf	?a_seek_down_pulse+2,w
  1216  03EF  0747               	addwf	?a_seek_down_pulse+2,w
  1217  03F0  3E36               	addlw	_lamp_off_counter
  1218  03F1  0084               	movwf	4
  1219  03F2  1383               	bcf	3,7
  1220  03F3  3001               	movlw	1
  1221  03F4  0780               	addwf	0
  1222  03F5  0A84               	incf	4
  1223  03F6  1803               	btfsc	3,0
  1224  03F7  0A80               	incf	0
  1225                           ;led.c: 820: if(lamp_off_counter[i] >= 50000) l
      +                          amp_off_counter[i]=50000;
  1226  03F8  0847               	movf	?a_seek_down_pulse+2,w
  1227  03F9  0747               	addwf	?a_seek_down_pulse+2,w
  1228  03FA  3E36               	addlw	_lamp_off_counter
  1229  03FB  0084               	movwf	4
  1230  03FC  1383               	bcf	3,7
  1231  03FD  0800               	movf	0,w
  1232  03FE  00F9               	movwf	btemp
  1233  03FF  0A84               	incf	4
  1234  0400  0800               	movf	0,w
  1235  0401  00FA               	movwf	btemp+1
  1236  0402  30C3               	movlw	195
  1237  0403  027A               	subwf	btemp+1,w
  1238  0404  3050               	movlw	80
  1239  0405  1903               	btfsc	3,2
  1240  0406  0279               	subwf	btemp,w
  1241  0407  1C03               	btfss	3,0
  1242  0408  2C13               	goto	L11
  1243  0409  0847               	movf	?a_seek_down_pulse+2,w
  1244  040A  0747               	addwf	?a_seek_down_pulse+2,w
  1245  040B  3E36               	addlw	_lamp_off_counter
  1246  040C                     L10
  1247  040C  0084               	movwf	4
  1248  040D  3050               	movlw	80
  1249  040E  0080               	movwf	0
  1250  040F  0A84               	incf	4
  1251  0410  30C3               	movlw	195
  1252  0411  0080               	movwf	0
  1253  0412                     l182
  1254                           ;led.c: 821: }
  1255  0412  1003               	bcf	3,0
  1256  0413                     L11
  1257  0413  0DC6               	rlf	?a_seek_down_pulse+1
  1258  0414  0AC7               	incf	?a_seek_down_pulse+2
  1259  0415  3003               	movlw	3
  1260  0416  0247               	subwf	?a_seek_down_pulse+2,w
  1261  0417  1803               	btfsc	3,0
  1262  0418  0008               	return
  1263  0419  2AEC               	goto	l179
  1264                           
  1265                           	psect	text22
  1266  050C                     _G_Segment_Wink
  1267                           ;	_i assigned to ?a_G_Segment_Wink+0
  1268  0000                     _G_Segment_Wink$i	set	?a_G_Segment_Wink
  1269                           ;	_temp_data2 assigned to ?a_G_Segment_Wink+1
  1270  0000                     _G_Segment_Wink$temp_data2	set	?a_G_Segment_Win
      +                          k+1
  1271                           ;	_temp_data1 assigned to ?a_G_Segment_Wink+2
  1272  0000                     _G_Segment_Wink$temp_data1	set	?a_G_Segment_Win
      +                          k+2
  1273                           ;led.c: 1140: void G_Segment_Wink(void)
  1274  050C  1683               	bsf	3,5
  1275  050D  1303               	bcf	3,6	;carry unused
  1276  050E  08A1               	movf	_communication_flag^(0+128)
  1277                           ;led.c: 1146: {
  1278  050F  1283               	bcf	3,5
  1279  0510  1D03               	btfss	3,2
  1280  0511  2D6F               	goto	L28
  1281  0512  01C7               	clrf	?a_G_Segment_Wink+2
  1282  0513  0AC7               	incf	?a_G_Segment_Wink+2
  1283                           ;led.c: 1148: for(i=0;i<3;i++)
  1284  0514  01C5               	clrf	?a_G_Segment_Wink
  1285  0515                     l294
  1286                           ;led.c: 1149: {
  1287  0515  01C6               	clrf	?a_G_Segment_Wink+1
  1288                           ;led.c: 1151: if(study_lamp_stab_state == ((~te
      +                          mp_data1)&0x07))
  1289  0516  0847               	movf	?a_G_Segment_Wink+2,w
  1290  0517  00C8               	movwf	?a_G_Segment_Wink+3
  1291  0518  01C9               	clrf	?a_G_Segment_Wink+4
  1292  0519  09C8               	comf	?a_G_Segment_Wink+3
  1293  051A  09C9               	comf	?a_G_Segment_Wink+4
  1294  051B  3007               	movlw	7
  1295  051C  05C8               	andwf	?a_G_Segment_Wink+3
  1296  051D  01C9               	clrf	?a_G_Segment_Wink+4
  1297  051E  1683               	bsf	3,5
  1298  051F  0829               	movf	_study_lamp_stab_state^(0+128),w
  1299  0520  1303               	bcf	3,6	;carry unused
  1300  0521  1283               	bcf	3,5
  1301  0522  00CA               	movwf	?a_G_Segment_Wink+5
  1302  0523  01CB               	clrf	?a_G_Segment_Wink+6
  1303  0524  0849               	movf	?a_G_Segment_Wink+4,w
  1304  0525  064B               	xorwf	?a_G_Segment_Wink+6,w
  1305  0526  1D03               	btfss	3,2
  1306  0527  2D2A               	goto	u1405
  1307  0528  0848               	movf	?a_G_Segment_Wink+3,w
  1308  0529  064A               	xorwf	?a_G_Segment_Wink+5,w
  1309  052A                     u1405
  1310  052A  1D03               	btfss	3,2
  1311  052B  2D40               	goto	l297
  1312                           ;led.c: 1152: {
  1313  052C  1683               	bsf	3,5
  1314  052D  08AA               	movf	_study_or_pulse_mode^(0+128)
  1315  052E  1903               	btfsc	3,2
  1316  052F  2D39               	goto	l298
  1317                           ;led.c: 1154: {
  1318  0530  1283               	bcf	3,5
  1319  0531  0345               	decf	?a_G_Segment_Wink,w
  1320  0532  1903               	btfsc	3,2
  1321  0533  2D38               	goto	l299
  1322                           ;led.c: 1156: {
  1323  0534  1703               	bsf	3,6
  1324  0535  0824               	movf	_pulse_down_time_valid_flag^(0+256),w
  1325  0536  1303               	bcf	3,6	;carry unused
  1326  0537  2D3B               	goto	L27
  1327                           ;led.c: 1158: }
  1328  0538                     l299
  1329                           ;led.c: 1159: else
  1330  0538  1683               	bsf	3,5
  1331                           ;led.c: 1162: }
  1332  0539                     l298
  1333                           ;led.c: 1164: else
  1334  0539  082C               	movf	_study_time_valid_flag^(0+128),w
  1335  053A  1283               	bcf	3,5
  1336  053B                     L27
  1337  053B  0547               	andwf	?a_G_Segment_Wink+2,w
  1338  053C  1D03               	btfss	3,2
  1339  053D  2D40               	goto	l297
  1340  053E  01C6               	clrf	?a_G_Segment_Wink+1
  1341  053F  0AC6               	incf	?a_G_Segment_Wink+1
  1342  0540                     l297
  1343                           ;led.c: 1167: }
  1344  0540  0B46               	decfsz	?a_G_Segment_Wink+1,w
  1345  0541  2D57               	goto	l305
  1346                           ;led.c: 1171: {
  1347  0542  01C6               	clrf	?a_G_Segment_Wink+1
  1348                           ;led.c: 1173: if(g_segment_wink_state_flag != t
      +                          emp_data1)
  1349  0543  0826               	movf	_g_segment_wink_state_flag,w
  1350  0544  0647               	xorwf	?a_G_Segment_Wink+2,w
  1351  0545  1903               	btfsc	3,2
  1352  0546  2D4C               	goto	l306
  1353                           ;led.c: 1174: {
  1354  0547  3009               	movlw	9
  1355  0548  00A7               	movwf	_g_segment_wink_time_counter
  1356                           ;led.c: 1176: g_segment_wink_state_flag = temp_
      +                          data1;
  1357  0549  0847               	movf	?a_G_Segment_Wink+2,w
  1358  054A  00A6               	movwf	_g_segment_wink_state_flag
  1359  054B  2D52               	goto	L26
  1360                           ;led.c: 1177: g_segment_wink_display_flag = 0;
  1361                           ;led.c: 1178: }
  1362  054C                     l306
  1363                           ;led.c: 1179: else
  1364  054C  0BA7               	decfsz	_g_segment_wink_time_counter
  1365                           ;led.c: 1182: if(g_segment_wink_time_counter ==
      +                           0)
  1366  054D  2D59               	goto	l311
  1367                           ;led.c: 1183: {
  1368  054E  300A               	movlw	10
  1369  054F  00A7               	movwf	_g_segment_wink_time_counter
  1370                           ;led.c: 1185: if(g_segment_wink_display_flag ==
      +                           1) g_segment_wink_display_flag = 0;
  1371  0550  0B25               	decfsz	_g_segment_wink_display_flag,w
  1372  0551  2D54               	goto	l309
  1373  0552                     L26
  1374  0552  01A5               	clrf	_g_segment_wink_display_flag
  1375  0553  2D59               	goto	l311
  1376  0554                     l309
  1377                           ;led.c: 1186: else g_segment_wink_display_flag 
      +                          = 1;
  1378  0554  01A5               	clrf	_g_segment_wink_display_flag
  1379  0555  0AA5               	incf	_g_segment_wink_display_flag
  1380                           ;led.c: 1187: }
  1381  0556  2D59               	goto	l311
  1382  0557                     l305
  1383                           ;led.c: 1190: else
  1384  0557  0947               	comf	?a_G_Segment_Wink+2,w
  1385  0558  05A6               	andwf	_g_segment_wink_state_flag
  1386  0559                     l311
  1387                           ;led.c: 1193: }
  1388  0559  0826               	movf	_g_segment_wink_state_flag,w
  1389  055A  0647               	xorwf	?a_G_Segment_Wink+2,w
  1390  055B  1D03               	btfss	3,2
  1391  055C  2D67               	goto	l312
  1392                           ;led.c: 1196: {
  1393  055D  0B25               	decfsz	_g_segment_wink_display_flag,w
  1394  055E  2D64               	goto	l313
  1395  055F  0845               	movf	?a_G_Segment_Wink,w
  1396  0560  158A  249C  118A   	fcall	_g_segment_displaying
  1397  0563  2D67               	goto	l312
  1398  0564                     l313
  1399                           ;led.c: 1198: else gre_displaying_end();
  1400  0564  118A  2125  118A   	fcall	_gre_displaying_end
  1401  0567                     l312
  1402                           ;led.c: 1199: }
  1403  0567  1003               	bcf	3,0
  1404  0568  0DC7               	rlf	?a_G_Segment_Wink+2
  1405  0569  0AC5               	incf	?a_G_Segment_Wink
  1406  056A  3003               	movlw	3
  1407  056B  0245               	subwf	?a_G_Segment_Wink,w
  1408  056C  1803               	btfsc	3,0
  1409  056D  0008               	return
  1410  056E  2D15               	goto	l294
  1411                           ;led.c: 1201: }
  1412                           ;led.c: 1203: else g_segment_wink_state_flag = 
      +                          0;
  1413  056F                     L28
  1414  056F  01A6               	clrf	_g_segment_wink_state_flag
  1415                           ;led.c: 1204: }
  1416  0570  0008               	return	;W free
  1417                           
  1418                           	psect	text23
  1419  041A                     _g_segment_afresh_analyse
  1420                           ;led.c: 1206: void g_segment_afresh_analyse(voi
      +                          d)
  1421  041A  1683               	bsf	3,5
  1422  041B  1303               	bcf	3,6	;carry unused
  1423  041C  08AA               	movf	_study_or_pulse_mode^(0+128)
  1424                           ;led.c: 1212: {
  1425  041D  1283               	bcf	3,5
  1426  041E  1903               	btfsc	3,2
  1427  041F  2C94               	goto	L29
  1428  0420  0824               	movf	_g_segment_afresh_state,w
  1429  0421  1703               	bsf	3,6
  1430  0422  0625               	xorwf	_pulse_study_time_flag^(0+256),w
  1431  0423  1903               	btfsc	3,2
  1432  0424  2C3E               	goto	l318
  1433                           ;led.c: 1214: {
  1434  0425  0825               	movf	_pulse_study_time_flag^(0+256),w
  1435  0426  1303               	bcf	3,6	;carry unused
  1436  0427  00A4               	movwf	_g_segment_afresh_state
  1437                           ;led.c: 1216: g_segment_afresh_counter = 0;
  1438  0428  01A2               	clrf	_g_segment_afresh_counter
  1439                           ;led.c: 1217: g_segment_afresh_number = 3;
  1440  0429  3003               	movlw	3
  1441  042A  00A3               	movwf	_g_segment_afresh_number
  1442                           ;led.c: 1218: if((pulse_down_time_valid_flag&g_
      +                          segment_afresh_state) != 0)
  1443  042B  1703               	bsf	3,6
  1444  042C  0824               	movf	_pulse_down_time_valid_flag^(0+256),w
  1445  042D  1303               	bcf	3,6	;carry unused
  1446  042E  0524               	andwf	_g_segment_afresh_state,w
  1447  042F  1D03               	btfss	3,2
  1448  0430  2C37               	goto	l321
  1449  0431  2C3E               	goto	l318
  1450                           ;led.c: 1219: {
  1451  0432                     l322
  1452                           ;led.c: 1221: {
  1453                           ;led.c: 1223: g_segment_afresh_number = 0;
  1454  0432  01A3               	clrf	_g_segment_afresh_number
  1455                           ;led.c: 1224: break;
  1456  0433  2C3E               	goto	l318
  1457  0434                     l323
  1458                           ;led.c: 1225: case 0x04:
  1459                           ;led.c: 1226: g_segment_afresh_number = 2;
  1460  0434  3002               	movlw	2
  1461  0435  00A3               	movwf	_g_segment_afresh_number
  1462                           ;led.c: 1227: break;
  1463                           ;led.c: 1228: default:
  1464                           ;led.c: 1229: break;
  1465  0436  2C3E               	goto	l318
  1466  0437                     l321
  1467  0437  0824               	movf	_g_segment_afresh_state,w
  1468  0438  3A01               	xorlw	1
  1469  0439  1903               	btfsc	3,2
  1470  043A  2C32               	goto	l322
  1471  043B  3A05               	xorlw	5
  1472  043C  1903               	btfsc	3,2
  1473  043D  2C34               	goto	l323
  1474  043E                     l318
  1475                           ;led.c: 1231: }
  1476  043E  3003               	movlw	3
  1477  043F  1303               	bcf	3,6	;carry unused
  1478  0440  0223               	subwf	_g_segment_afresh_number,w
  1479  0441  1803               	btfsc	3,0
  1480  0442  0008               	return
  1481                           ;led.c: 1234: {
  1482  0443  0AA2               	incf	_g_segment_afresh_counter
  1483                           ;led.c: 1236: if(g_segment_afresh_counter >= 10
      +                          0)
  1484  0444  3064               	movlw	100
  1485  0445  0222               	subwf	_g_segment_afresh_counter,w
  1486  0446  1C03               	btfss	3,0
  1487  0447  0008               	return
  1488                           ;led.c: 1237: {
  1489  0448  01A2               	clrf	_g_segment_afresh_counter
  1490                           ;led.c: 1239: if(pulse_study_time_counter[g_seg
      +                          ment_afresh_number] > pulse_down_times[g_segmen
      +                          t_afresh_number])
  1491  0449  0823               	movf	_g_segment_afresh_number,w
  1492  044A  0723               	addwf	_g_segment_afresh_number,w
  1493  044B  3E2E               	addlw	_pulse_study_time_counter^(0+256)
  1494  044C  0084               	movwf	4
  1495  044D  1783               	bsf	3,7
  1496  044E  0800               	movf	0,w
  1497  044F  00F9               	movwf	btemp
  1498  0450  0A84               	incf	4
  1499  0451  0800               	movf	0,w
  1500  0452  00FA               	movwf	btemp+1
  1501  0453  0879               	movf	btemp,w
  1502  0454  00C5               	movwf	?a_g_segment_afresh_analyse
  1503  0455  087A               	movf	btemp+1,w
  1504  0456  00C6               	movwf	?a_g_segment_afresh_analyse+1
  1505  0457  0823               	movf	_g_segment_afresh_number,w
  1506  0458  0723               	addwf	_g_segment_afresh_number,w
  1507  0459  3E28               	addlw	_pulse_down_times^(0+256)
  1508  045A  0084               	movwf	4
  1509  045B  1783               	bsf	3,7
  1510  045C  0800               	movf	0,w
  1511  045D  00F9               	movwf	btemp
  1512  045E  0A84               	incf	4
  1513  045F  0800               	movf	0,w
  1514  0460  00FA               	movwf	btemp+1
  1515  0461  0846               	movf	?a_g_segment_afresh_analyse+1,w
  1516  0462  027A               	subwf	btemp+1,w
  1517  0463  1D03               	btfss	3,2
  1518  0464  2C67               	goto	u1585
  1519  0465  0845               	movf	?a_g_segment_afresh_analyse,w
  1520  0466  0279               	subwf	btemp,w
  1521  0467                     u1585
  1522  0467  1803               	btfsc	3,0
  1523  0468  0008               	return
  1524                           ;led.c: 1240: {
  1525  0469  0823               	movf	_g_segment_afresh_number,w
  1526  046A  0723               	addwf	_g_segment_afresh_number,w
  1527  046B  3E28               	addlw	_pulse_down_times^(0+256)
  1528  046C  0084               	movwf	4
  1529  046D  1783               	bsf	3,7
  1530  046E  0800               	movf	0,w
  1531  046F  00F9               	movwf	btemp
  1532  0470  0A84               	incf	4
  1533  0471  0800               	movf	0,w
  1534  0472  00FA               	movwf	btemp+1
  1535  0473  0879               	movf	btemp,w
  1536  0474  00C5               	movwf	?a_g_segment_afresh_analyse
  1537  0475  087A               	movf	btemp+1,w
  1538  0476  00C6               	movwf	?a_g_segment_afresh_analyse+1
  1539  0477  0823               	movf	_g_segment_afresh_number,w
  1540  0478  0723               	addwf	_g_segment_afresh_number,w
  1541  0479  3E2E               	addlw	_pulse_study_time_counter^(0+256)
  1542  047A  0084               	movwf	4
  1543  047B  1783               	bsf	3,7
  1544  047C  0800               	movf	0,w
  1545  047D  00F9               	movwf	btemp
  1546  047E  0A84               	incf	4
  1547  047F  0800               	movf	0,w
  1548  0480  00FA               	movwf	btemp+1
  1549  0481  0845               	movf	?a_g_segment_afresh_analyse,w
  1550  0482  02F9               	subwf	btemp
  1551  0483  1C03               	btfss	3,0
  1552  0484  03FA               	decf	btemp+1
  1553  0485  0846               	movf	?a_g_segment_afresh_analyse+1,w
  1554  0486  02FA               	subwf	btemp+1
  1555  0487  3000               	movlw	0
  1556  0488  027A               	subwf	btemp+1,w
  1557  0489  308D               	movlw	141
  1558  048A  1903               	btfsc	3,2
  1559  048B  0279               	subwf	btemp,w
  1560  048C  1C03               	btfss	3,0
  1561  048D  0008               	return
  1562                           ;led.c: 1242: {
  1563  048E  1703               	bsf	3,6
  1564  048F  01A4               	clrf	_pulse_down_time_valid_flag^(0+256)
  1565                           ;led.c: 1244: g_segment_afresh_number = 3;
  1566  0490  3003               	movlw	3
  1567  0491  1303               	bcf	3,6	;carry unused
  1568  0492  00A3               	movwf	_g_segment_afresh_number
  1569                           ;led.c: 1245: }
  1570  0493  0008               	return
  1571                           ;led.c: 1250: else
  1572  0494                     L29
  1573  0494  0824               	movf	_g_segment_afresh_state,w
  1574  0495  1683               	bsf	3,5
  1575  0496  062B               	xorwf	_study_time_flag^(0+128),w
  1576  0497  1903               	btfsc	3,2
  1577  0498  2CB8               	goto	l330
  1578                           ;led.c: 1253: {
  1579  0499  082B               	movf	_study_time_flag^(0+128),w
  1580  049A  1283               	bcf	3,5
  1581  049B  00A4               	movwf	_g_segment_afresh_state
  1582                           ;led.c: 1255: g_segment_afresh_counter = 0;
  1583  049C  01A2               	clrf	_g_segment_afresh_counter
  1584                           ;led.c: 1256: g_segment_afresh_number = 3;
  1585  049D  3003               	movlw	3
  1586  049E  00A3               	movwf	_g_segment_afresh_number
  1587                           ;led.c: 1257: if((study_time_valid_flag&g_segme
      +                          nt_afresh_state) != 0)
  1588  049F  1683               	bsf	3,5
  1589  04A0  082C               	movf	_study_time_valid_flag^(0+128),w
  1590  04A1  1283               	bcf	3,5
  1591  04A2  0524               	andwf	_g_segment_afresh_state,w
  1592  04A3  1D03               	btfss	3,2
  1593  04A4  2CAE               	goto	l333
  1594  04A5  2CB8               	goto	l330
  1595                           ;led.c: 1258: {
  1596  04A6                     l334
  1597                           ;led.c: 1260: {
  1598                           ;led.c: 1262: g_segment_afresh_number = 0;
  1599  04A6  01A3               	clrf	_g_segment_afresh_number
  1600                           ;led.c: 1263: break;
  1601  04A7  2CB8               	goto	l330
  1602  04A8                     l335
  1603                           ;led.c: 1264: case 0x02:
  1604                           ;led.c: 1265: g_segment_afresh_number = 1;
  1605  04A8  01A3               	clrf	_g_segment_afresh_number
  1606  04A9  0AA3               	incf	_g_segment_afresh_number
  1607                           ;led.c: 1266: break;
  1608  04AA  2CB8               	goto	l330
  1609  04AB                     l336
  1610                           ;led.c: 1267: case 0x04:
  1611                           ;led.c: 1268: g_segment_afresh_number = 2;
  1612  04AB  3002               	movlw	2
  1613  04AC  00A3               	movwf	_g_segment_afresh_number
  1614                           ;led.c: 1269: break;
  1615                           ;led.c: 1270: default:
  1616                           ;led.c: 1271: break;
  1617  04AD  2CB8               	goto	l330
  1618  04AE                     l333
  1619  04AE  0824               	movf	_g_segment_afresh_state,w
  1620  04AF  3A01               	xorlw	1
  1621  04B0  1903               	btfsc	3,2
  1622  04B1  2CA6               	goto	l334
  1623  04B2  3A03               	xorlw	3
  1624  04B3  1903               	btfsc	3,2
  1625  04B4  2CA8               	goto	l335
  1626  04B5  3A06               	xorlw	6
  1627  04B6  1903               	btfsc	3,2
  1628  04B7  2CAB               	goto	l336
  1629  04B8                     l330
  1630                           ;led.c: 1273: }
  1631  04B8  3003               	movlw	3
  1632  04B9  1283               	bcf	3,5
  1633  04BA  0223               	subwf	_g_segment_afresh_number,w
  1634  04BB  1803               	btfsc	3,0
  1635  04BC  0008               	return
  1636                           ;led.c: 1276: {
  1637  04BD  0AA2               	incf	_g_segment_afresh_counter
  1638                           ;led.c: 1278: if(g_segment_afresh_counter >= 10
      +                          0)
  1639  04BE  3064               	movlw	100
  1640  04BF  0222               	subwf	_g_segment_afresh_counter,w
  1641  04C0  1C03               	btfss	3,0
  1642  04C1  0008               	return
  1643                           ;led.c: 1279: {
  1644  04C2  01A2               	clrf	_g_segment_afresh_counter
  1645                           ;led.c: 1281: if(current_study_counter[g_segmen
      +                          t_afresh_number] > previous_study_counter[g_seg
      +                          ment_afresh_number])
  1646  04C3  0823               	movf	_g_segment_afresh_number,w
  1647  04C4  0723               	addwf	_g_segment_afresh_number,w
  1648  04C5  3EB5               	addlw	_current_study_counter
  1649  04C6  0084               	movwf	4
  1650  04C7  1383               	bcf	3,7
  1651  04C8  0800               	movf	0,w
  1652  04C9  00F9               	movwf	btemp
  1653  04CA  0A84               	incf	4
  1654  04CB  0800               	movf	0,w
  1655  04CC  00FA               	movwf	btemp+1
  1656  04CD  0879               	movf	btemp,w
  1657  04CE  00C5               	movwf	?a_g_segment_afresh_analyse
  1658  04CF  087A               	movf	btemp+1,w
  1659  04D0  00C6               	movwf	?a_g_segment_afresh_analyse+1
  1660  04D1  0823               	movf	_g_segment_afresh_number,w
  1661  04D2  0723               	addwf	_g_segment_afresh_number,w
  1662  04D3  3EC1               	addlw	_previous_study_counter
  1663  04D4  0084               	movwf	4
  1664  04D5  1383               	bcf	3,7
  1665  04D6  0800               	movf	0,w
  1666  04D7  00F9               	movwf	btemp
  1667  04D8  0A84               	incf	4
  1668  04D9  0800               	movf	0,w
  1669  04DA  00FA               	movwf	btemp+1
  1670  04DB  0846               	movf	?a_g_segment_afresh_analyse+1,w
  1671  04DC  027A               	subwf	btemp+1,w
  1672  04DD  1D03               	btfss	3,2
  1673  04DE  2CE1               	goto	u1645
  1674  04DF  0845               	movf	?a_g_segment_afresh_analyse,w
  1675  04E0  0279               	subwf	btemp,w
  1676  04E1                     u1645
  1677  04E1  1803               	btfsc	3,0
  1678  04E2  0008               	return
  1679                           ;led.c: 1282: {
  1680  04E3  0823               	movf	_g_segment_afresh_number,w
  1681  04E4  0723               	addwf	_g_segment_afresh_number,w
  1682  04E5  3EC1               	addlw	_previous_study_counter
  1683  04E6  0084               	movwf	4
  1684  04E7  0800               	movf	0,w
  1685  04E8  00F9               	movwf	btemp
  1686  04E9  0A84               	incf	4
  1687  04EA  0800               	movf	0,w
  1688  04EB  00FA               	movwf	btemp+1
  1689  04EC  0879               	movf	btemp,w
  1690  04ED  00C5               	movwf	?a_g_segment_afresh_analyse
  1691  04EE  087A               	movf	btemp+1,w
  1692  04EF  00C6               	movwf	?a_g_segment_afresh_analyse+1
  1693  04F0  0823               	movf	_g_segment_afresh_number,w
  1694  04F1  0723               	addwf	_g_segment_afresh_number,w
  1695  04F2  3EB5               	addlw	_current_study_counter
  1696  04F3  0084               	movwf	4
  1697  04F4  0800               	movf	0,w
  1698  04F5  00F9               	movwf	btemp
  1699  04F6  0A84               	incf	4
  1700  04F7  0800               	movf	0,w
  1701  04F8  00FA               	movwf	btemp+1
  1702  04F9  0845               	movf	?a_g_segment_afresh_analyse,w
  1703  04FA  02F9               	subwf	btemp
  1704  04FB  1C03               	btfss	3,0
  1705  04FC  03FA               	decf	btemp+1
  1706  04FD  0846               	movf	?a_g_segment_afresh_analyse+1,w
  1707  04FE  02FA               	subwf	btemp+1
  1708  04FF  3000               	movlw	0
  1709  0500  027A               	subwf	btemp+1,w
  1710  0501  308D               	movlw	141
  1711  0502  1903               	btfsc	3,2
  1712  0503  0279               	subwf	btemp,w
  1713  0504  1C03               	btfss	3,0
  1714  0505  0008               	return
  1715                           ;led.c: 1284: {
  1716  0506  1683               	bsf	3,5
  1717  0507  01AC               	clrf	_study_time_valid_flag^(0+128)
  1718                           ;led.c: 1286: g_segment_afresh_number = 3;
  1719  0508  3003               	movlw	3
  1720  0509  1283               	bcf	3,5
  1721  050A  00A3               	movwf	_g_segment_afresh_number
  1722                           ;led.c: 1287: }
  1723  050B  0008               	return	;W free
  1724                           
  1725                           	psect	intcode
  1726  000D                     _ISR
  1727  000D                     int_func
  1728                           ;led.c: 1297: void interrupt ISR(void)
  1729  000D  0183               	clrf	3	;select bank 0
  1730  000E  1C0C               	btfss	12,0
  1731  000F  2817               	goto	l343
  1732                           ;led.c: 1300: {
  1733  0010  100C               	bcf	12,0
  1734                           ;led.c: 1302: TMR1H=0xFB;
  1735  0011  30FB               	movlw	-5
  1736  0012  008F               	movwf	15	;volatile
  1737                           ;led.c: 1303: TMR1L=0x85;
  1738  0013  3085               	movlw	-123
  1739  0014  008E               	movwf	14	;volatile
  1740                           ;led.c: 1304: TFG=1;
  1741  0015  01A0               	clrf	_TFG
  1742  0016  0AA0               	incf	_TFG
  1743  0017                     l343
  1744                           ;led.c: 1305: }
  1745  0017  1E8C               	btfss	12,5
  1746  0018  282C               	goto	l342
  1747                           ;led.c: 1307: {
  1748  0019  1703               	bsf	3,6
  1749  001A  0827               	movf	_usart_rx_write^(0+256),w
  1750  001B  3E3B               	addlw	_usart_rx_buffer^(0+256)
  1751  001C  0084               	movwf	4
  1752  001D  1783               	bsf	3,7
  1753  001E  1303               	bcf	3,6	;carry unused
  1754  001F  081A               	movf	26,w	;volatile
  1755  0020  0080               	movwf	0
  1756                           ;led.c: 1309: usart_rx_write++;
  1757  0021  1703               	bsf	3,6
  1758  0022  0AA7               	incf	_usart_rx_write^(0+256)
  1759                           ;led.c: 1310: if(usart_rx_write >= 30) usart_rx
      +                          _write=0;
  1760  0023  301E               	movlw	30
  1761  0024  0227               	subwf	_usart_rx_write^(0+256),w
  1762  0025  1803               	btfsc	3,0
  1763  0026  01A7               	clrf	_usart_rx_write^(0+256)
  1764                           ;led.c: 1311: if(OERR == 1)
  1765  0027  1303               	bcf	3,6	;carry unused
  1766  0028  1C98               	btfss	24,1
  1767  0029  282C               	goto	l342
  1768                           ;led.c: 1312: {
  1769  002A  1218               	bcf	24,4
  1770                           ;led.c: 1314: CREN = 1;
  1771  002B  1618               	bsf	24,4
  1772                           ;led.c: 1315: }
  1773  002C                     l342
  1774                           
  1775                           	psect	intsave_0
  1776  0078                     saved_w
                     saved_w
  1777  0078                     	ds	1
  1778                           
  1779                           	psect	intret
  1780  002C  085A               	movf	saved_fsr,w
  1781  002D  0084               	movwf	4	;restore FSR
  1782  002E  085B               	movf	saved_pclath,w
  1783  002F  008A               	movwf	10
  1784  0030                     int_restore
  1785  0030  0859               	movf	saved_status,w
  1786  0031  0083               	movwf	3
  1787  0032  0EF8               	swapf	saved_w
  1788  0033  0E78               	swapf	saved_w,w
  1789  0034  0009               	retfie
  1790                           
  1791                           	psect	intentry
  1792  0004                     int_entry
  1793  0004  00F8               	movwf	saved_w
  1794  0005  0803               	movf	3,w
  1795  0006  0183               	clrf	3
  1796  0007  00D9               	movwf	saved_status
  1797  0008  0804               	movf	4,w
  1798  0009  00DA               	movwf	saved_fsr
  1799  000A  080A               	movf	10,w
  1800  000B  00DB               	movwf	saved_pclath
  1801  000C  018A               	clrf	10
  1802                           
  1803                           	psect	intsave
  1804  0059                     saved_status
                     saved_status
  1805  0059                     	ds	1
  1806  005A                     saved_fsr
                     saved_fsr
  1807  005A                     	ds	1
  1808  005B                     saved_pclath
                     saved_pclath
  1809  005B                     	ds	1
  1810                           
  1811                           	psect	text26
  1812  084F                     _communication_err
  1813                           ;led.c: 1523: void communication_err(void)
  1814  084F  1283               	bcf	3,5
  1815  0850  1703               	bsf	3,6
  1816  0851  0AA1               	incf	_every_second_update_counter^(0+256)
  1817                           ;led.c: 1526: if(every_second_update_counter >=
      +                           100)
  1818  0852  3064               	movlw	100
  1819  0853  0221               	subwf	_every_second_update_counter^(0+256),w
  1820  0854  1C03               	btfss	3,0
  1821  0855  2860               	goto	l404
  1822                           ;led.c: 1527: {
  1823  0856  01A1               	clrf	_every_second_update_counter^(0+256)
  1824                           ;led.c: 1529: every_second_update_delay++;
  1825  0857  0AA2               	incf	_every_second_update_delay^(0+256)
  1826                           ;led.c: 1530: if(every_second_update_delay >= 3
      +                          )
  1827  0858  3003               	movlw	3
  1828  0859  0222               	subwf	_every_second_update_delay^(0+256),w
  1829  085A  1C03               	btfss	3,0
  1830  085B  2860               	goto	l404
  1831                           ;led.c: 1531: {
  1832  085C  01A3               	clrf	_every_second_update_flag^(0+256)
  1833                           ;led.c: 1533: every_second_update_counter = 0;
  1834  085D  01A1               	clrf	_every_second_update_counter^(0+256)
  1835                           ;led.c: 1534: every_second_update_delay = 0;
  1836  085E  01A2               	clrf	_every_second_update_delay^(0+256)
  1837                           ;led.c: 1535: red_displaying_end();
  1838  085F  248C               	fcall	_red_displaying_end
  1839                           ;led.c: 1538: }
  1840  0860                     l404
  1841  0860  1303               	bcf	3,6	;carry unused
  1842  0861  0008               	return	;W free
  1843  0862                     _lamp_err_state_check
  1844                           ;led.c: 1098: void lamp_err_state_check(void)
  1845  0862  1683               	bsf	3,5
  1846  0863  1303               	bcf	3,6	;carry unused
  1847  0864  1829               	btfsc	_study_lamp_stab_state^(0+128),0
  1848  0865  2868               	goto	l280
  1849  0866  3055               	movlw	85
  1850  0867  00A7               	movwf	_restart_flag^(0+128)
  1851  0868                     l280
  1852                           ;led.c: 1102: if((study_lamp_stab_state&0x07)==
      +                          0x07)
  1853  0868  0829               	movf	_study_lamp_stab_state^(0+128),w
  1854  0869  3907               	andlw	7
  1855  086A  3A07               	xorlw	7
  1856                           ;led.c: 1103: {
  1857  086B  1283               	bcf	3,5
  1858  086C  1D03               	btfss	3,2
  1859  086D  2881               	goto	L25
  1860  086E  0AAD               	incf	_no_lamp_on_counter
  1861                           ;led.c: 1105: if(no_lamp_on_counter >= 50)
  1862  086F  3032               	movlw	50
  1863  0870  022D               	subwf	_no_lamp_on_counter,w
  1864  0871  1C03               	btfss	3,0
  1865  0872  288F               	goto	l285
  1866                           ;led.c: 1106: {
  1867  0873  01AD               	clrf	_no_lamp_on_counter
  1868                           ;led.c: 1108: study_time_valid_flag = 0;
  1869  0874  1683               	bsf	3,5
  1870  0875  01AC               	clrf	_study_time_valid_flag^(0+128)
  1871                           ;led.c: 1109: previous_study_counter[0] = 0;
  1872  0876  01C1               	clrf	_previous_study_counter^(0+128)
  1873  0877  01C2               	clrf	(_previous_study_counter+1)^(0+128)
  1874                           ;led.c: 1110: previous_study_counter[1] = 0;
  1875  0878  01C3               	clrf	(_previous_study_counter+2)^(0+128)
  1876  0879  01C4               	clrf	(_previous_study_counter+3)^(0+128)
  1877                           ;led.c: 1111: previous_study_counter[2] = 0;
  1878  087A  01C5               	clrf	(_previous_study_counter+4)^(0+128)
  1879  087B  01C6               	clrf	(_previous_study_counter+5)^(0+128)
  1880                           ;led.c: 1112: lamp_counter_valid_flag = 0;
  1881  087C  1283               	bcf	3,5
  1882  087D  01A8               	clrf	_lamp_counter_valid_flag
  1883                           ;led.c: 1113: pulse_down_time_valid_flag = 0;
  1884  087E  1703               	bsf	3,6
  1885  087F  01A4               	clrf	_pulse_down_time_valid_flag^(0+256)
  1886                           ;led.c: 1114: }
  1887  0880  288F               	goto	l285
  1888                           ;led.c: 1116: else no_lamp_on_counter = 0;
  1889  0881                     L25
  1890  0881  01AD               	clrf	_no_lamp_on_counter
  1891                           ;led.c: 1118: switch(study_lamp_stab_state&0x07
      +                          )
  1892  0882  288F               	goto	l285
  1893  0883                     l289
  1894                           ;led.c: 1121: case 1:
  1895  0883  0AA8               	incf	_sametime_on_counter^(0+128)
  1896                           ;led.c: 1125: if(sametime_on_counter >= 50)
  1897  0884  3032               	movlw	50
  1898  0885  0228               	subwf	_sametime_on_counter^(0+128),w
  1899  0886  1C03               	btfss	3,0
  1900  0887  28A9               	goto	l279
  1901                           ;led.c: 1126: {
  1902  0888  01A8               	clrf	_sametime_on_counter^(0+128)
  1903                           ;led.c: 1128: study_time_valid_flag = 0;
  1904  0889  01AC               	clrf	_study_time_valid_flag^(0+128)
  1905                           ;led.c: 1129: lamp_counter_valid_flag = 0;
  1906  088A  1283               	bcf	3,5
  1907  088B  01A8               	clrf	_lamp_counter_valid_flag
  1908                           ;led.c: 1130: pulse_down_time_valid_flag = 0;
  1909  088C  1703               	bsf	3,6
  1910  088D  01A4               	clrf	_pulse_down_time_valid_flag^(0+256)
  1911                           ;led.c: 1131: }
  1912  088E  28A9               	goto	l279
  1913                           ;led.c: 1135: break;
  1914  088F                     l285
  1915  088F  1683               	bsf	3,5
  1916  0890  1303               	bcf	3,6	;carry unused
  1917  0891  0829               	movf	_study_lamp_stab_state^(0+128),w
  1918  0892  3907               	andlw	7
  1919  0893  00FB               	movwf	btemp+2
  1920  0894  01FC               	clrf	btemp+3
  1921  0895  28A4               	goto	l30003
  1922  0896                     l30004
  1923  0896  087B               	movf	btemp+2,w
  1924  0897  3A00               	xorlw	0
  1925  0898  1903               	btfsc	3,2
  1926  0899  2883               	goto	l289
  1927  089A  3A01               	xorlw	1
  1928  089B  1903               	btfsc	3,2
  1929  089C  2883               	goto	l289
  1930  089D  3A03               	xorlw	3
  1931  089E  1903               	btfsc	3,2
  1932  089F  2883               	goto	l289
  1933  08A0  3A06               	xorlw	6
  1934  08A1  1903               	btfsc	3,2
  1935  08A2  2883               	goto	l289
  1936  08A3  28A8               	goto	l291
  1937  08A4                     l30003
  1938  08A4  087C               	movf	btemp+3,w
  1939  08A5  3A00               	xorlw	0
  1940  08A6  1903               	btfsc	3,2
  1941  08A7  2896               	goto	l30004
  1942  08A8                     l291
  1943                           ;led.c: 1133: default:
  1944                           ;led.c: 1134: sametime_on_counter = 0;
  1945  08A8  01A8               	clrf	_sametime_on_counter^(0+128)
  1946                           ;led.c: 1138: }
  1947  08A9                     l279
  1948  08A9  0183               	clrf	3	;select bank 0
  1949  08AA  0008               	return	;W free
  1950  08AB                     _study_mode_filterAC_DC
  1951                           ;	_temp_var2 assigned to ?a_study_mode_filterAC
      +                          _DC+0
  1952  0000                     _study_mode_filterAC_DC$temp_var2	set	?a_study_
      +                          mode_filterAC_DC
  1953                           ;	_temp_var3 assigned to ?a_study_mode_filterAC
      +                          _DC+1
  1954  0000                     _study_mode_filterAC_DC$temp_var3	set	?a_study_
      +                          mode_filterAC_DC+1
  1955                           ;	_i assigned to ?a_study_mode_filterAC_DC+2
  1956  0000                     _study_mode_filterAC_DC$i	set	?a_study_mode_fil
      +                          terAC_DC+2
  1957                           ;	_temp_var1 assigned to ?a_study_mode_filterAC
      +                          _DC+3
  1958  0000                     _study_mode_filterAC_DC$temp_var1	set	?a_study_
      +                          mode_filterAC_DC+3
  1959                           ;led.c: 828: void study_mode_filterAC_DC(void)
  1960  08AB  0183               	clrf	3	;select bank 0
  1961  08AC  01C8               	clrf	?a_study_mode_filterAC_DC+3
  1962  08AD  0AC8               	incf	?a_study_mode_filterAC_DC+3
  1963                           ;led.c: 836: lamp_stab_state &= 0x07;
  1964  08AE  3007               	movlw	7
  1965  08AF  05AB               	andwf	_lamp_stab_state
  1966                           ;led.c: 837: temp_var2 = lamp_stab_state ^ stud
      +                          y_lamp_stab_state;
  1967  08B0  082B               	movf	_lamp_stab_state,w
  1968  08B1  1683               	bsf	3,5
  1969  08B2  0629               	xorwf	_study_lamp_stab_state^(0+128),w
  1970  08B3  1283               	bcf	3,5
  1971  08B4  00C5               	movwf	?a_study_mode_filterAC_DC
  1972                           ;led.c: 839: if(temp_var2 != 0)
  1973  08B5  08C5               	movf	?a_study_mode_filterAC_DC
  1974  08B6  1903               	btfsc	3,2
  1975  08B7  28F6               	goto	l208
  1976                           ;led.c: 840: {
  1977  08B8  01C7               	clrf	?a_study_mode_filterAC_DC+2
  1978  08B9                     l209
  1979                           ;led.c: 842: {
  1980  08B9  0845               	movf	?a_study_mode_filterAC_DC,w
  1981  08BA  0548               	andwf	?a_study_mode_filterAC_DC+3,w
  1982  08BB  0648               	xorwf	?a_study_mode_filterAC_DC+3,w
  1983  08BC  1D03               	btfss	3,2
  1984  08BD  28E8               	goto	l212
  1985                           ;led.c: 844: {
  1986  08BE  0847               	movf	?a_study_mode_filterAC_DC+2,w
  1987  08BF  3EB2               	addlw	_study_chge_counter
  1988  08C0  0084               	movwf	4
  1989  08C1  1383               	bcf	3,7
  1990  08C2  0A80               	incf	0
  1991                           ;led.c: 846: if((study_lamp_stab_state&temp_var
      +                          1)==temp_var1)
  1992  08C3  1683               	bsf	3,5
  1993  08C4  0829               	movf	_study_lamp_stab_state^(0+128),w
  1994  08C5  1283               	bcf	3,5
  1995  08C6  0548               	andwf	?a_study_mode_filterAC_DC+3,w
  1996  08C7  0648               	xorwf	?a_study_mode_filterAC_DC+3,w
  1997  08C8  1D03               	btfss	3,2
  1998  08C9  28CF               	goto	l213
  1999                           ;led.c: 847: {
  2000  08CA  0847               	movf	?a_study_mode_filterAC_DC+2,w
  2001  08CB  3EB2               	addlw	_study_chge_counter
  2002  08CC  0084               	movwf	4
  2003  08CD  300A               	movlw	10
  2004  08CE  28DD               	goto	L17
  2005                           ;led.c: 849: {
  2006                           ;led.c: 851: study_lamp_stab_state ^= temp_var1
      +                          ;
  2007                           ;led.c: 852: }
  2008  08CF                     l213
  2009                           ;led.c: 854: else
  2010  08CF  0948               	comf	?a_study_mode_filterAC_DC+3,w
  2011  08D0  3907               	andlw	7
  2012  08D1  00C6               	movwf	?a_study_mode_filterAC_DC+1
  2013                           ;led.c: 857: if((study_lamp_stab_state&temp_var
      +                          3) == temp_var3)
  2014  08D2  1683               	bsf	3,5
  2015  08D3  0829               	movf	_study_lamp_stab_state^(0+128),w
  2016  08D4  1283               	bcf	3,5
  2017  08D5  0546               	andwf	?a_study_mode_filterAC_DC+1,w
  2018  08D6  0646               	xorwf	?a_study_mode_filterAC_DC+1,w
  2019  08D7  1D03               	btfss	3,2
  2020  08D8  28E0               	goto	l216
  2021                           ;led.c: 858: {
  2022  08D9  0847               	movf	?a_study_mode_filterAC_DC+2,w
  2023  08DA  3EB2               	addlw	_study_chge_counter
  2024  08DB  0084               	movwf	4
  2025  08DC  304B               	movlw	75
  2026  08DD                     L17
  2027  08DD  0200               	subwf	0,w
  2028  08DE  1C03               	btfss	3,0
  2029  08DF  28EE               	goto	L15
  2030                           ;led.c: 860: {
  2031                           ;led.c: 862: study_lamp_stab_state ^= temp_var1
      +                          ;
  2032                           ;led.c: 863: }
  2033  08E0                     l216
  2034                           ;led.c: 865: else
  2035  08E0  0847               	movf	?a_study_mode_filterAC_DC+2,w
  2036  08E1  3EB2               	addlw	_study_chge_counter
  2037  08E2  0084               	movwf	4
  2038  08E3  0180               	clrf	0
  2039                           ;led.c: 868: study_lamp_stab_state ^= temp_var1
      +                          ;
  2040  08E4  0848               	movf	?a_study_mode_filterAC_DC+3,w
  2041  08E5  1683               	bsf	3,5
  2042  08E6  06A9               	xorwf	_study_lamp_stab_state^(0+128)
  2043                           ;led.c: 869: }
  2044  08E7  28ED               	goto	l219
  2045  08E8                     l212
  2046                           ;led.c: 872: else
  2047  08E8  0847               	movf	?a_study_mode_filterAC_DC+2,w
  2048  08E9  3EB2               	addlw	_study_chge_counter
  2049  08EA  0084               	movwf	4
  2050  08EB  1383               	bcf	3,7
  2051  08EC  0180               	clrf	0
  2052  08ED                     l219
  2053                           ;led.c: 875: }
  2054  08ED  1003               	bcf	3,0
  2055  08EE                     L15
  2056  08EE  1283               	bcf	3,5
  2057  08EF  0DC8               	rlf	?a_study_mode_filterAC_DC+3
  2058  08F0  0AC7               	incf	?a_study_mode_filterAC_DC+2
  2059  08F1  3003               	movlw	3
  2060  08F2  0247               	subwf	?a_study_mode_filterAC_DC+2,w
  2061  08F3  1803               	btfsc	3,0
  2062  08F4  28FA               	goto	l207
  2063  08F5  28B9               	goto	l209
  2064                           ;led.c: 877: }
  2065  08F6                     l208
  2066                           ;led.c: 879: else
  2067  08F6  1683               	bsf	3,5
  2068  08F7  01B2               	clrf	_study_chge_counter^(0+128)
  2069                           ;led.c: 882: study_chge_counter[1] = 0;
  2070  08F8  01B3               	clrf	(_study_chge_counter+1)^(0+128)
  2071                           ;led.c: 883: study_chge_counter[2] = 0;
  2072  08F9  01B4               	clrf	(_study_chge_counter+2)^(0+128)
  2073                           ;led.c: 884: }
  2074  08FA                     l207
  2075  08FA  1283               	bcf	3,5
  2076  08FB  0008               	return	;W free
  2077  08FC                     _filterAC_DC
  2078                           ;	_temp_var1 assigned to ?a_filterAC_DC+0
  2079  0000                     _filterAC_DC$temp_var1	set	?a_filterAC_DC
  2080                           ;	_temp_var2 assigned to ?a_filterAC_DC+1
  2081  0000                     _filterAC_DC$temp_var2	set	?a_filterAC_DC+1
  2082                           ;	_i assigned to ?a_filterAC_DC+2
  2083  0000                     _filterAC_DC$i	set	?a_filterAC_DC+2
  2084                           ;led.c: 692: void filterAC_DC(void)
  2085  08FC  0183               	clrf	3	;select bank 0
  2086  08FD  0807               	movf	7,w	;volatile
  2087  08FE  00C8               	movwf	?a_filterAC_DC+3
  2088  08FF  1003               	bcf	3,0
  2089  0900  0CC8               	rrf	?a_filterAC_DC+3
  2090  0901  1003               	bcf	3,0
  2091  0902  0C48               	rrf	?a_filterAC_DC+3,w
  2092  0903  3907               	andlw	7
  2093  0904  00AC               	movwf	_lamp_temp_state
  2094                           ;led.c: 698: temp_var1 = lamp_temp_state ^ lamp
      +                          _stab_state;
  2095  0905  062B               	xorwf	_lamp_stab_state,w
  2096  0906  00C5               	movwf	?a_filterAC_DC
  2097                           ;led.c: 699: if(temp_var1!=0)
  2098  0907  08C5               	movf	?a_filterAC_DC
  2099  0908  1903               	btfsc	3,2
  2100  0909  2942               	goto	l167
  2101                           ;led.c: 700: {
  2102  090A  01C6               	clrf	?a_filterAC_DC+1
  2103  090B  0AC6               	incf	?a_filterAC_DC+1
  2104                           ;led.c: 702: for(i=0;i<3;i++)
  2105  090C  01C7               	clrf	?a_filterAC_DC+2
  2106  090D                     l168
  2107                           ;led.c: 703: {
  2108  090D  0845               	movf	?a_filterAC_DC,w
  2109  090E  0546               	andwf	?a_filterAC_DC+1,w
  2110  090F  0646               	xorwf	?a_filterAC_DC+1,w
  2111  0910  1D03               	btfss	3,2
  2112  0911  2935               	goto	l171
  2113                           ;led.c: 705: {
  2114  0912  082B               	movf	_lamp_stab_state,w
  2115  0913  0546               	andwf	?a_filterAC_DC+1,w
  2116  0914  0646               	xorwf	?a_filterAC_DC+1,w
  2117  0915  1D03               	btfss	3,2
  2118  0916  2922               	goto	l172
  2119                           ;led.c: 707: {
  2120  0917  0847               	movf	?a_filterAC_DC+2,w
  2121  0918  3E30               	addlw	_lamp_chge_counter
  2122  0919  0084               	movwf	4
  2123  091A  1383               	bcf	3,7
  2124  091B  0A80               	incf	0
  2125                           ;led.c: 709: if(lamp_chge_counter[i] >= 2)
  2126  091C  0847               	movf	?a_filterAC_DC+2,w
  2127  091D  3E30               	addlw	_lamp_chge_counter
  2128  091E  0084               	movwf	4
  2129  091F  1383               	bcf	3,7
  2130  0920  3002               	movlw	2
  2131  0921  292C               	goto	L9
  2132                           ;led.c: 710: {
  2133                           ;led.c: 712: lamp_chge_counter[i] = 0;
  2134                           ;led.c: 713: }
  2135  0922                     l172
  2136                           ;led.c: 715: else
  2137  0922  0847               	movf	?a_filterAC_DC+2,w
  2138  0923  3E30               	addlw	_lamp_chge_counter
  2139  0924  0084               	movwf	4
  2140  0925  1383               	bcf	3,7
  2141  0926  0A80               	incf	0
  2142                           ;led.c: 718: if(lamp_chge_counter[i] >= 21)
  2143  0927  0847               	movf	?a_filterAC_DC+2,w
  2144  0928  3E30               	addlw	_lamp_chge_counter
  2145  0929  0084               	movwf	4
  2146  092A  1383               	bcf	3,7
  2147  092B  3015               	movlw	21
  2148  092C                     L9
  2149  092C  0200               	subwf	0,w
  2150  092D  1C03               	btfss	3,0
  2151  092E  293B               	goto	L6
  2152                           ;led.c: 719: {
  2153  092F  0846               	movf	?a_filterAC_DC+1,w
  2154  0930  06AB               	xorwf	_lamp_stab_state
  2155                           ;led.c: 721: lamp_chge_counter[i] = 0;
  2156  0931  0847               	movf	?a_filterAC_DC+2,w
  2157  0932  3E30               	addlw	_lamp_chge_counter
  2158  0933  0084               	movwf	4
  2159  0934  2939               	goto	L5
  2160                           ;led.c: 722: }
  2161  0935                     l171
  2162                           ;led.c: 725: else
  2163  0935  0847               	movf	?a_filterAC_DC+2,w
  2164  0936  3E30               	addlw	_lamp_chge_counter
  2165  0937  0084               	movwf	4
  2166  0938  1383               	bcf	3,7
  2167  0939                     L5
  2168  0939  0180               	clrf	0
  2169                           ;led.c: 728: }
  2170  093A  1003               	bcf	3,0
  2171  093B                     L6
  2172  093B  0DC6               	rlf	?a_filterAC_DC+1
  2173  093C  0AC7               	incf	?a_filterAC_DC+2
  2174  093D  3003               	movlw	3
  2175  093E  0247               	subwf	?a_filterAC_DC+2,w
  2176  093F  1803               	btfsc	3,0
  2177  0940  0008               	return
  2178  0941  290D               	goto	l168
  2179                           ;led.c: 730: }
  2180  0942                     l167
  2181                           ;led.c: 732: else
  2182  0942  01B0               	clrf	_lamp_chge_counter
  2183                           ;led.c: 735: lamp_chge_counter[1] = 0;
  2184  0943  01B1               	clrf	_lamp_chge_counter+1
  2185                           ;led.c: 736: lamp_chge_counter[2] = 0;
  2186  0944  01B2               	clrf	_lamp_chge_counter+2
  2187                           ;led.c: 737: }
  2188  0945  0008               	return	;W free
  2189  0946                     _addr_read
  2190                           ;led.c: 198: unsigned char addr_read(void)
  2191  0946  3010               	movlw	16
  2192  0947  1283               	bcf	3,5
  2193  0948  1703               	bsf	3,6
  2194  0949  008D               	movwf	13
  2195                           ;led.c: 201: EEPGD = 0;
  2196  094A  1683               	bsf	3,5
  2197  094B  138C               	bcf	12,7
  2198                           ;led.c: 202: RD = 1;
  2199  094C  140C               	bsf	12,0
  2200                           ;led.c: 203: asm("nop");
  2201  094D  0000               	nop	;#
  2202                           ;led.c: 204: return EEDATA;
  2203  094E  1283               	bcf	3,5
  2204  094F  080C               	movf	12,w	;volatile
  2205                           ;led.c: 205: }
  2206  0950  1303               	bcf	3,6	;carry unused
  2207  0951  0008               	return	;uses W
  2208  0952                     _usartinit
  2209                           ;led.c: 222: void usartinit(void)
  2210  0952  1683               	bsf	3,5
  2211  0953  1303               	bcf	3,6	;carry unused
  2212  0954  1218               	bcf	24,4
  2213                           ;led.c: 225: BRGH = 0;
  2214  0955  1118               	bcf	24,2
  2215                           ;led.c: 226: BRG16 = 1;
  2216  0956  1703               	bsf	3,6
  2217  0957  1587               	bsf	7,3
  2218                           ;led.c: 227: SPBRGH=0X00;SPBRG=0X77;;
  2219  0958  1303               	bcf	3,6	;carry unused
  2220  0959  019A               	clrf	26
  2221  095A  3077               	movlw	119
  2222  095B  0099               	movwf	25
  2223                           ;led.c: 228: SPEN = 1;
  2224  095C  1283               	bcf	3,5
  2225  095D  1798               	bsf	24,7
  2226                           ;led.c: 229: CREN = 1;
  2227  095E  1618               	bsf	24,4
  2228                           ;led.c: 230: TXIE = 0;
  2229  095F  1683               	bsf	3,5
  2230  0960  120C               	bcf	12,4
  2231                           ;led.c: 231: TXEN = 1;
  2232  0961  1698               	bsf	24,5
  2233                           ;led.c: 232: RX9 = 0;
  2234  0962  1283               	bcf	3,5
  2235  0963  1318               	bcf	24,6
  2236                           ;led.c: 233: TX9 = 0;
  2237  0964  1683               	bsf	3,5
  2238  0965  1318               	bcf	24,6
  2239                           ;led.c: 235: TRISC6=1;
  2240  0966  1707               	bsf	7,6
  2241                           ;led.c: 236: TRISC7=1;
  2242  0967  1787               	bsf	7,7
  2243                           ;led.c: 237: PEIE=1;
  2244  0968  170B               	bsf	11,6
  2245                           ;led.c: 238: GIE=1;
  2246  0969  178B               	bsf	11,7
  2247                           ;led.c: 239: RCIE = 1;
  2248  096A  168C               	bsf	12,5
  2249                           ;led.c: 240: }
  2250  096B  1283               	bcf	3,5
  2251  096C  0008               	return	;W free
  2252  096D                     _study_mode_time_calculation
  2253                           ;	_temp_var1 assigned to ?a_study_mode_time_cal
      +                          culation+0
  2254  0000                     _study_mode_time_calculation$temp_var1	set	?a_s
      +                          tudy_mode_time_calculation
  2255                           ;	_i assigned to ?a_study_mode_time_calculation
      +                          +1
  2256  0000                     _study_mode_time_calculation$i	set	?a_study_mod
      +                          e_time_calculation+1
  2257                           ;	_temp_var2 assigned to ?a_study_mode_time_cal
      +                          culation+2
  2258  0000                     _study_mode_time_calculation$temp_var2	set	?a_s
      +                          tudy_mode_time_calculation+2
  2259                           ;led.c: 887: void study_mode_time_calculation(v
      +                          oid)
  2260  096D  3007               	movlw	7
  2261  096E  1683               	bsf	3,5
  2262  096F  1303               	bcf	3,6	;carry unused
  2263  0970  05A9               	andwf	_study_lamp_stab_state^(0+128)
  2264                           ;led.c: 893: temp_var1 = 0x01;
  2265  0971  1283               	bcf	3,5
  2266  0972  01C5               	clrf	?a_study_mode_time_calculation
  2267  0973  0AC5               	incf	?a_study_mode_time_calculation
  2268                           ;led.c: 894: for(i=0;i<3;i++)
  2269  0974  01C6               	clrf	?a_study_mode_time_calculation+1
  2270  0975                     l222
  2271                           ;led.c: 895: {
  2272  0975  0845               	movf	?a_study_mode_time_calculation,w
  2273  0976  00C9               	movwf	?a_study_mode_time_calculation+4
  2274  0977  01CA               	clrf	?a_study_mode_time_calculation+5
  2275  0978  09C9               	comf	?a_study_mode_time_calculation+4
  2276  0979  09CA               	comf	?a_study_mode_time_calculation+5
  2277  097A  3007               	movlw	7
  2278  097B  05C9               	andwf	?a_study_mode_time_calculation+4
  2279  097C  01CA               	clrf	?a_study_mode_time_calculation+5
  2280  097D  1683               	bsf	3,5
  2281  097E  0829               	movf	_study_lamp_stab_state^(0+128),w
  2282  097F  1303               	bcf	3,6	;carry unused
  2283  0980  1283               	bcf	3,5
  2284  0981  00CB               	movwf	?a_study_mode_time_calculation+6
  2285  0982  01CC               	clrf	?a_study_mode_time_calculation+7
  2286  0983  084A               	movf	?a_study_mode_time_calculation+5,w
  2287  0984  064C               	xorwf	?a_study_mode_time_calculation+7,w
  2288  0985  1D03               	btfss	3,2
  2289  0986  2989               	goto	u895
  2290  0987  0849               	movf	?a_study_mode_time_calculation+4,w
  2291  0988  064B               	xorwf	?a_study_mode_time_calculation+6,w
  2292  0989                     u895
  2293                           ;led.c: 897: {
  2294  0989  1683               	bsf	3,5
  2295  098A  1D03               	btfss	3,2
  2296  098B  2A8A               	goto	L20
  2297  098C  082B               	movf	_study_time_flag^(0+128),w
  2298  098D  1283               	bcf	3,5
  2299  098E  0545               	andwf	?a_study_mode_time_calculation,w
  2300  098F  1D03               	btfss	3,2
  2301  0990  2A54               	goto	l226
  2302                           ;led.c: 899: {
  2303  0991  0845               	movf	?a_study_mode_time_calculation,w
  2304  0992  1683               	bsf	3,5
  2305  0993  04AB               	iorwf	_study_time_flag^(0+128)
  2306                           ;led.c: 901: current_study_counter[i]=0;
  2307  0994  1283               	bcf	3,5
  2308  0995  0846               	movf	?a_study_mode_time_calculation+1,w
  2309  0996  0746               	addwf	?a_study_mode_time_calculation+1,w
  2310  0997  3EB5               	addlw	_current_study_counter
  2311  0998  0084               	movwf	4
  2312  0999  1383               	bcf	3,7
  2313  099A  0180               	clrf	0
  2314  099B  0A84               	incf	4
  2315  099C  0180               	clrf	0
  2316                           ;led.c: 903: if((i==2)||(i==0))
  2317  099D  0846               	movf	?a_study_mode_time_calculation+1,w
  2318  099E  3A02               	xorlw	2
  2319  099F  1D03               	btfss	3,2
  2320  09A0  08C6               	movf	?a_study_mode_time_calculation+1
  2321                           ;led.c: 904: {
  2322  09A1  1683               	bsf	3,5
  2323  09A2  1D03               	btfss	3,2
  2324  09A3  2A16               	goto	L21
  2325  09A4  0B2A               	decfsz	_study_or_pulse_mode^(0+128),w
  2326  09A5  29AE               	goto	l228
  2327                           ;led.c: 906: {
  2328  09A6  0AA5               	incf	_pulse_to_study^(0+128)
  2329                           ;led.c: 908: if(pulse_to_study >= 3)
  2330  09A7  3003               	movlw	3
  2331  09A8  0225               	subwf	_pulse_to_study^(0+128),w
  2332  09A9  1C03               	btfss	3,0
  2333  09AA  29C0               	goto	l230
  2334                           ;led.c: 909: {
  2335  09AB  01AA               	clrf	_study_or_pulse_mode^(0+128)
  2336                           ;led.c: 911: pulse_to_study = 0;
  2337  09AC  01A5               	clrf	_pulse_to_study^(0+128)
  2338                           ;led.c: 912: }
  2339  09AD  29C0               	goto	l230
  2340  09AE                     l228
  2341                           ;led.c: 914: else
  2342  09AE  08AE               	movf	_study_to_pulse_flag^(0+128)
  2343  09AF  1903               	btfsc	3,2
  2344  09B0  29BF               	goto	l231
  2345                           ;led.c: 917: {
  2346  09B1  0AAD               	incf	_study_to_pulse^(0+128)
  2347                           ;led.c: 919: if(study_to_pulse >= 2)
  2348  09B2  3002               	movlw	2
  2349  09B3  022D               	subwf	_study_to_pulse^(0+128),w
  2350  09B4  1C03               	btfss	3,0
  2351  09B5  29C0               	goto	l230
  2352                           ;led.c: 920: {
  2353  09B6  01AD               	clrf	_study_to_pulse^(0+128)
  2354                           ;led.c: 922: if(study_to_pulse_flag == 0x05) st
      +                          udy_or_pulse_mode = 1;
  2355  09B7  082E               	movf	_study_to_pulse_flag^(0+128),w
  2356  09B8  3A05               	xorlw	5
  2357  09B9  1D03               	btfss	3,2
  2358  09BA  29BD               	goto	l233
  2359  09BB  01AA               	clrf	_study_or_pulse_mode^(0+128)
  2360  09BC  0AAA               	incf	_study_or_pulse_mode^(0+128)
  2361  09BD                     l233
  2362                           ;led.c: 923: study_to_pulse_flag = 0;
  2363  09BD  01AE               	clrf	_study_to_pulse_flag^(0+128)
  2364                           ;led.c: 924: }
  2365  09BE  29C0               	goto	l230
  2366  09BF                     l231
  2367                           ;led.c: 926: else study_to_pulse = 0;
  2368  09BF  01AD               	clrf	_study_to_pulse^(0+128)
  2369  09C0                     l230
  2370                           ;led.c: 927: }
  2371  09C0  0B21               	decfsz	_communication_flag^(0+128),w
  2372  09C1  29C9               	goto	l235
  2373                           ;led.c: 930: {
  2374  09C2  0AA0               	incf	_communication_counter^(0+128)
  2375                           ;led.c: 932: if(communication_counter >= 3)
  2376  09C3  3003               	movlw	3
  2377  09C4  0220               	subwf	_communication_counter^(0+128),w
  2378  09C5  1C03               	btfss	3,0
  2379  09C6  29C9               	goto	l235
  2380                           ;led.c: 933: {
  2381  09C7  01A0               	clrf	_communication_counter^(0+128)
  2382                           ;led.c: 935: communication_flag = 0;
  2383  09C8  01A1               	clrf	_communication_flag^(0+128)
  2384  09C9                     l235
  2385                           ;led.c: 936: }
  2386  09C9  08AA               	movf	_study_or_pulse_mode^(0+128)
  2387  09CA  1D03               	btfss	3,2
  2388  09CB  2BF4               	goto	l249
  2389  09CC  08A1               	movf	_communication_flag^(0+128)
  2390  09CD  1D03               	btfss	3,2
  2391  09CE  2BF4               	goto	l249
  2392                           ;led.c: 940: {
  2393  09CF  082C               	movf	_study_time_valid_flag^(0+128),w
  2394  09D0  1283               	bcf	3,5
  2395  09D1  0545               	andwf	?a_study_mode_time_calculation,w
  2396  09D2  0645               	xorwf	?a_study_mode_time_calculation,w
  2397  09D3  1D03               	btfss	3,2
  2398  09D4  2BF4               	goto	l249
  2399                           ;led.c: 942: {
  2400  09D5  0846               	movf	?a_study_mode_time_calculation+1,w
  2401  09D6  0746               	addwf	?a_study_mode_time_calculation+1,w
  2402  09D7  3EC1               	addlw	_previous_study_counter
  2403  09D8  0084               	movwf	4
  2404  09D9  0800               	movf	0,w
  2405  09DA  00F9               	movwf	btemp
  2406  09DB  0A84               	incf	4
  2407  09DC  0800               	movf	0,w
  2408  09DD  00FA               	movwf	btemp+1
  2409  09DE  30EA               	movlw	234
  2410  09DF  027A               	subwf	btemp+1,w
  2411  09E0  3060               	movlw	96
  2412  09E1  1903               	btfsc	3,2
  2413  09E2  0279               	subwf	btemp,w
  2414  09E3  1C03               	btfss	3,0
  2415  09E4  29ED               	goto	l239
  2416  09E5  0846               	movf	?a_study_mode_time_calculation+1,w
  2417  09E6  0746               	addwf	?a_study_mode_time_calculation+1,w
  2418  09E7  3EBB               	addlw	_display_data
  2419  09E8  0084               	movwf	4
  2420  09E9  0180               	clrf	0
  2421  09EA  0A84               	incf	4
  2422  09EB  0180               	clrf	0
  2423  09EC  2BF4               	goto	l249
  2424  09ED                     l239
  2425                           ;led.c: 944: else
  2426  09ED  3064               	movlw	100
  2427  09EE  00FB               	movwf	btemp+2
  2428  09EF  01FC               	clrf	btemp+3
  2429  09F0  0846               	movf	?a_study_mode_time_calculation+1,w
  2430  09F1  0746               	addwf	?a_study_mode_time_calculation+1,w
  2431  09F2  3EC1               	addlw	_previous_study_counter
  2432  09F3  0084               	movwf	4
  2433  09F4  0800               	movf	0,w
  2434  09F5  00F9               	movwf	btemp
  2435  09F6  0A84               	incf	4
  2436  09F7  0800               	movf	0,w
  2437  09F8  00FA               	movwf	btemp+1
  2438  09F9  3012               	movlw	18
  2439  09FA  07F9               	addwf	btemp
  2440  09FB  1803               	btfsc	3,0
  2441  09FC  0AFA               	incf	btemp+1
  2442  09FD  118A  2082  158A   	fcall	lwdiv
  2443  0A00  0846               	movf	?a_study_mode_time_calculation+1,w
  2444  0A01  0746               	addwf	?a_study_mode_time_calculation+1,w
  2445  0A02  3EBB               	addlw	_display_data
  2446  0A03  0084               	movwf	4
  2447  0A04  1383               	bcf	3,7
  2448  0A05  087D               	movf	btemp+4,w
  2449  0A06  0080               	movwf	0
  2450  0A07  0A84               	incf	4
  2451  0A08  087E               	movf	btemp+5,w
  2452  0A09  0080               	movwf	0
  2453                           ;led.c: 947: if(i==0)red_displaying_flag = 0;
  2454  0A0A  08C6               	movf	?a_study_mode_time_calculation+1
  2455  0A0B  1683               	bsf	3,5
  2456  0A0C  1903               	btfsc	3,2
  2457  0A0D  01A6               	clrf	_red_displaying_flag^(0+128)
  2458                           ;led.c: 948: if(i==2)gre_displaying_flag = 0;
  2459  0A0E  1283               	bcf	3,5
  2460  0A0F  0846               	movf	?a_study_mode_time_calculation+1,w
  2461  0A10  3A02               	xorlw	2
  2462  0A11  1683               	bsf	3,5
  2463  0A12  1D03               	btfss	3,2
  2464  0A13  2BF5               	goto	L22
  2465  0A14  01A3               	clrf	_gre_displaying_flag^(0+128)
  2466                           ;led.c: 949: }
  2467  0A15  2BF4               	goto	l249
  2468                           ;led.c: 953: else
  2469  0A16                     L21
  2470  0A16  082C               	movf	_study_time_valid_flag^(0+128),w
  2471  0A17  1283               	bcf	3,5
  2472  0A18  0545               	andwf	?a_study_mode_time_calculation,w
  2473  0A19  0645               	xorwf	?a_study_mode_time_calculation,w
  2474                           ;led.c: 956: {
  2475  0A1A  1683               	bsf	3,5
  2476  0A1B  1D03               	btfss	3,2
  2477  0A1C  2BF5               	goto	L22
  2478  0A1D  01B1               	clrf	_yel_displaying_flag^(0+128)
  2479                           ;led.c: 958: if(previous_study_counter[i] >= 60
      +                          000) display_data[i] = 0;
  2480  0A1E  1283               	bcf	3,5
  2481  0A1F  0846               	movf	?a_study_mode_time_calculation+1,w
  2482  0A20  0746               	addwf	?a_study_mode_time_calculation+1,w
  2483  0A21  3EC1               	addlw	_previous_study_counter
  2484  0A22  0084               	movwf	4
  2485  0A23  0800               	movf	0,w
  2486  0A24  00F9               	movwf	btemp
  2487  0A25  0A84               	incf	4
  2488  0A26  0800               	movf	0,w
  2489  0A27  00FA               	movwf	btemp+1
  2490  0A28  30EA               	movlw	234
  2491  0A29  027A               	subwf	btemp+1,w
  2492  0A2A  3060               	movlw	96
  2493  0A2B  1903               	btfsc	3,2
  2494  0A2C  0279               	subwf	btemp,w
  2495  0A2D  1C03               	btfss	3,0
  2496  0A2E  2A36               	goto	l245
  2497  0A2F  0846               	movf	?a_study_mode_time_calculation+1,w
  2498  0A30  0746               	addwf	?a_study_mode_time_calculation+1,w
  2499  0A31  3EBB               	addlw	_display_data
  2500  0A32  0084               	movwf	4
  2501  0A33  0180               	clrf	0
  2502  0A34  0A84               	incf	4
  2503  0A35  0180               	clrf	0
  2504  0A36                     l245
  2505                           ;led.c: 959: display_data[i] = (previous_study_
      +                          counter[i]+18)/100;
  2506  0A36  3064               	movlw	100
  2507  0A37  00FB               	movwf	btemp+2
  2508  0A38  01FC               	clrf	btemp+3
  2509  0A39  0846               	movf	?a_study_mode_time_calculation+1,w
  2510  0A3A  0746               	addwf	?a_study_mode_time_calculation+1,w
  2511  0A3B  3EC1               	addlw	_previous_study_counter
  2512  0A3C  0084               	movwf	4
  2513  0A3D  0800               	movf	0,w
  2514  0A3E  00F9               	movwf	btemp
  2515  0A3F  0A84               	incf	4
  2516  0A40  0800               	movf	0,w
  2517  0A41  00FA               	movwf	btemp+1
  2518  0A42  3012               	movlw	18
  2519  0A43  07F9               	addwf	btemp
  2520  0A44  1803               	btfsc	3,0
  2521  0A45  0AFA               	incf	btemp+1
  2522  0A46  118A  2082  158A   	fcall	lwdiv
  2523  0A49  0846               	movf	?a_study_mode_time_calculation+1,w
  2524  0A4A  0746               	addwf	?a_study_mode_time_calculation+1,w
  2525  0A4B  3EBB               	addlw	_display_data
  2526  0A4C  0084               	movwf	4
  2527  0A4D  1383               	bcf	3,7
  2528  0A4E  087D               	movf	btemp+4,w
  2529  0A4F  0080               	movwf	0
  2530  0A50  0A84               	incf	4
  2531  0A51  087E               	movf	btemp+5,w
  2532  0A52  0080               	movwf	0
  2533                           ;led.c: 960: }
  2534  0A53  2BF4               	goto	l249
  2535  0A54                     l226
  2536                           ;led.c: 963: else
  2537  0A54  0846               	movf	?a_study_mode_time_calculation+1,w
  2538  0A55  0746               	addwf	?a_study_mode_time_calculation+1,w
  2539  0A56  3EB5               	addlw	_current_study_counter
  2540  0A57  0084               	movwf	4
  2541  0A58  1383               	bcf	3,7
  2542  0A59  3001               	movlw	1
  2543  0A5A  0780               	addwf	0
  2544  0A5B  0A84               	incf	4
  2545  0A5C  1803               	btfsc	3,0
  2546  0A5D  0A80               	incf	0
  2547                           ;led.c: 966: if(current_study_counter[i] >= 600
      +                          00) current_study_counter[i] = 60000;
  2548  0A5E  0846               	movf	?a_study_mode_time_calculation+1,w
  2549  0A5F  0746               	addwf	?a_study_mode_time_calculation+1,w
  2550  0A60  3EB5               	addlw	_current_study_counter
  2551  0A61  0084               	movwf	4
  2552  0A62  1383               	bcf	3,7
  2553  0A63  0800               	movf	0,w
  2554  0A64  00F9               	movwf	btemp
  2555  0A65  0A84               	incf	4
  2556  0A66  0800               	movf	0,w
  2557  0A67  00FA               	movwf	btemp+1
  2558  0A68  30EA               	movlw	234
  2559  0A69  027A               	subwf	btemp+1,w
  2560  0A6A  3060               	movlw	96
  2561  0A6B  1903               	btfsc	3,2
  2562  0A6C  0279               	subwf	btemp,w
  2563  0A6D  1C03               	btfss	3,0
  2564  0A6E  2A78               	goto	l247
  2565  0A6F  0846               	movf	?a_study_mode_time_calculation+1,w
  2566  0A70  0746               	addwf	?a_study_mode_time_calculation+1,w
  2567  0A71  3EB5               	addlw	_current_study_counter
  2568  0A72  0084               	movwf	4
  2569  0A73  3060               	movlw	96
  2570  0A74  0080               	movwf	0
  2571  0A75  0A84               	incf	4
  2572  0A76  30EA               	movlw	234
  2573  0A77  0080               	movwf	0
  2574  0A78                     l247
  2575                           ;led.c: 967: if((pulse_study_time_flag & temp_v
      +                          ar1)==temp_var1) pulse_study_time_counter[i]++;
  2576  0A78  1703               	bsf	3,6
  2577  0A79  0825               	movf	_pulse_study_time_flag^(0+256),w
  2578  0A7A  1303               	bcf	3,6	;carry unused
  2579  0A7B  0545               	andwf	?a_study_mode_time_calculation,w
  2580  0A7C  0645               	xorwf	?a_study_mode_time_calculation,w
  2581  0A7D  1D03               	btfss	3,2
  2582  0A7E  2BF4               	goto	l249
  2583  0A7F  0846               	movf	?a_study_mode_time_calculation+1,w
  2584  0A80  0746               	addwf	?a_study_mode_time_calculation+1,w
  2585  0A81  3E2E               	addlw	_pulse_study_time_counter^(0+256)
  2586  0A82  0084               	movwf	4
  2587  0A83  1783               	bsf	3,7
  2588  0A84  3001               	movlw	1
  2589  0A85  0780               	addwf	0
  2590  0A86  0A84               	incf	4
  2591  0A87  1803               	btfsc	3,0
  2592  0A88  0A80               	incf	0
  2593                           ;led.c: 968: }
  2594  0A89  2BF4               	goto	l249
  2595                           ;led.c: 970: else
  2596  0A8A                     L20
  2597  0A8A  082B               	movf	_study_time_flag^(0+128),w
  2598  0A8B  1283               	bcf	3,5
  2599  0A8C  0545               	andwf	?a_study_mode_time_calculation,w
  2600  0A8D  0645               	xorwf	?a_study_mode_time_calculation,w
  2601  0A8E  1D03               	btfss	3,2
  2602  0A8F  2B38               	goto	l250
  2603                           ;led.c: 973: {
  2604  0A90  0945               	comf	?a_study_mode_time_calculation,w
  2605  0A91  1683               	bsf	3,5
  2606  0A92  05AB               	andwf	_study_time_flag^(0+128)
  2607                           ;led.c: 976: if(previous_study_counter[i] >= cu
      +                          rrent_study_counter[i])
  2608  0A93  1283               	bcf	3,5
  2609  0A94  0846               	movf	?a_study_mode_time_calculation+1,w
  2610  0A95  0746               	addwf	?a_study_mode_time_calculation+1,w
  2611  0A96  3EB5               	addlw	_current_study_counter
  2612  0A97  0084               	movwf	4
  2613  0A98  1383               	bcf	3,7
  2614  0A99  0800               	movf	0,w
  2615  0A9A  00F9               	movwf	btemp
  2616  0A9B  0A84               	incf	4
  2617  0A9C  0800               	movf	0,w
  2618  0A9D  00FA               	movwf	btemp+1
  2619  0A9E  0879               	movf	btemp,w
  2620  0A9F  00C9               	movwf	?a_study_mode_time_calculation+4
  2621  0AA0  087A               	movf	btemp+1,w
  2622  0AA1  00CA               	movwf	?a_study_mode_time_calculation+5
  2623  0AA2  0846               	movf	?a_study_mode_time_calculation+1,w
  2624  0AA3  0746               	addwf	?a_study_mode_time_calculation+1,w
  2625  0AA4  3EC1               	addlw	_previous_study_counter
  2626  0AA5  0084               	movwf	4
  2627  0AA6  1383               	bcf	3,7
  2628  0AA7  0800               	movf	0,w
  2629  0AA8  00F9               	movwf	btemp
  2630  0AA9  0A84               	incf	4
  2631  0AAA  0800               	movf	0,w
  2632  0AAB  00FA               	movwf	btemp+1
  2633  0AAC  084A               	movf	?a_study_mode_time_calculation+5,w
  2634  0AAD  027A               	subwf	btemp+1,w
  2635  0AAE  1D03               	btfss	3,2
  2636  0AAF  2AB2               	goto	u1135
  2637  0AB0  0849               	movf	?a_study_mode_time_calculation+4,w
  2638  0AB1  0279               	subwf	btemp,w
  2639  0AB2                     u1135
  2640                           ;led.c: 977: {
  2641  0AB2  0846               	movf	?a_study_mode_time_calculation+1,w
  2642  0AB3  1C03               	btfss	3,0
  2643  0AB4  2AC5               	goto	L23
  2644  0AB5  0746               	addwf	?a_study_mode_time_calculation+1,w
  2645  0AB6  3EB5               	addlw	_current_study_counter
  2646  0AB7  0084               	movwf	4
  2647  0AB8  0800               	movf	0,w
  2648  0AB9  00F9               	movwf	btemp
  2649  0ABA  0A84               	incf	4
  2650  0ABB  0800               	movf	0,w
  2651  0ABC  00FA               	movwf	btemp+1
  2652  0ABD  0879               	movf	btemp,w
  2653  0ABE  00C9               	movwf	?a_study_mode_time_calculation+4
  2654  0ABF  087A               	movf	btemp+1,w
  2655  0AC0  00CA               	movwf	?a_study_mode_time_calculation+5
  2656  0AC1  0846               	movf	?a_study_mode_time_calculation+1,w
  2657  0AC2  0746               	addwf	?a_study_mode_time_calculation+1,w
  2658  0AC3  3EC1               	addlw	_previous_study_counter
  2659  0AC4  2AD4               	goto	L18
  2660                           ;led.c: 979: }
  2661                           ;led.c: 980: else
  2662  0AC5                     L23
  2663  0AC5  0746               	addwf	?a_study_mode_time_calculation+1,w
  2664  0AC6  3EC1               	addlw	_previous_study_counter
  2665  0AC7  0084               	movwf	4
  2666  0AC8  0800               	movf	0,w
  2667  0AC9  00F9               	movwf	btemp
  2668  0ACA  0A84               	incf	4
  2669  0ACB  0800               	movf	0,w
  2670  0ACC  00FA               	movwf	btemp+1
  2671  0ACD  0879               	movf	btemp,w
  2672  0ACE  00C9               	movwf	?a_study_mode_time_calculation+4
  2673  0ACF  087A               	movf	btemp+1,w
  2674  0AD0  00CA               	movwf	?a_study_mode_time_calculation+5
  2675  0AD1  0846               	movf	?a_study_mode_time_calculation+1,w
  2676  0AD2  0746               	addwf	?a_study_mode_time_calculation+1,w
  2677  0AD3  3EB5               	addlw	_current_study_counter
  2678  0AD4                     L18
  2679  0AD4  0084               	movwf	4
  2680  0AD5  0800               	movf	0,w
  2681  0AD6  00F9               	movwf	btemp
  2682  0AD7  0A84               	incf	4
  2683  0AD8  0800               	movf	0,w
  2684  0AD9  00FA               	movwf	btemp+1
  2685  0ADA  0849               	movf	?a_study_mode_time_calculation+4,w
  2686  0ADB  02F9               	subwf	btemp
  2687  0ADC  1C03               	btfss	3,0
  2688  0ADD  03FA               	decf	btemp+1
  2689  0ADE  084A               	movf	?a_study_mode_time_calculation+5,w
  2690  0ADF  02FA               	subwf	btemp+1
  2691  0AE0  0879               	movf	btemp,w
  2692  0AE1  00C7               	movwf	?a_study_mode_time_calculation+2
  2693  0AE2  087A               	movf	btemp+1,w
  2694  0AE3  00C8               	movwf	?a_study_mode_time_calculation+3
  2695                           ;led.c: 983: }
  2696  0AE4  0828               	movf	_lamp_counter_valid_flag,w
  2697  0AE5  0545               	andwf	?a_study_mode_time_calculation,w
  2698  0AE6  0645               	xorwf	?a_study_mode_time_calculation,w
  2699  0AE7  1D03               	btfss	3,2
  2700  0AE8  2B38               	goto	l250
  2701                           ;led.c: 985: {
  2702                           ;led.c: 1007: else
  2703  0AE9  3000               	movlw	0
  2704  0AEA  0248               	subwf	?a_study_mode_time_calculation+3,w
  2705  0AEB  308D               	movlw	141
  2706  0AEC  1903               	btfsc	3,2
  2707  0AED  0247               	subwf	?a_study_mode_time_calculation+2,w
  2708  0AEE  1803               	btfsc	3,0
  2709  0AEF  2B07               	goto	l259
  2710                           ;led.c: 1010: {
  2711  0AF0  0845               	movf	?a_study_mode_time_calculation,w
  2712  0AF1  1683               	bsf	3,5
  2713  0AF2  04AC               	iorwf	_study_time_valid_flag^(0+128)
  2714                           ;led.c: 1012: previous_study_counter[i] = curre
      +                          nt_study_counter[i];
  2715  0AF3  1283               	bcf	3,5
  2716  0AF4  0846               	movf	?a_study_mode_time_calculation+1,w
  2717  0AF5  0746               	addwf	?a_study_mode_time_calculation+1,w
  2718  0AF6  3EB5               	addlw	_current_study_counter
  2719  0AF7  0084               	movwf	4
  2720  0AF8  0800               	movf	0,w
  2721  0AF9  00F9               	movwf	btemp
  2722  0AFA  0A84               	incf	4
  2723  0AFB  0800               	movf	0,w
  2724  0AFC  00FA               	movwf	btemp+1
  2725  0AFD  0846               	movf	?a_study_mode_time_calculation+1,w
  2726  0AFE  0746               	addwf	?a_study_mode_time_calculation+1,w
  2727  0AFF  3EC1               	addlw	_previous_study_counter
  2728  0B00  0084               	movwf	4
  2729  0B01  0879               	movf	btemp,w
  2730  0B02  0080               	movwf	0
  2731  0B03  0A84               	incf	4
  2732  0B04  087A               	movf	btemp+1,w
  2733  0B05  0080               	movwf	0
  2734                           ;led.c: 1013: }
  2735  0B06  2B38               	goto	l250
  2736  0B07                     l259
  2737                           ;led.c: 1014: else
  2738  0B07  0846               	movf	?a_study_mode_time_calculation+1,w
  2739  0B08  0746               	addwf	?a_study_mode_time_calculation+1,w
  2740  0B09  3EC1               	addlw	_previous_study_counter
  2741  0B0A  0084               	movwf	4
  2742  0B0B  0800               	movf	0,w
  2743  0B0C  00F9               	movwf	btemp
  2744  0B0D  0A84               	incf	4
  2745  0B0E  0800               	movf	0,w
  2746  0B0F  00FA               	movwf	btemp+1
  2747  0B10  0479               	iorwf	btemp,w
  2748  0B11  1903               	btfsc	3,2
  2749  0B12  2B23               	goto	l261
  2750                           ;led.c: 1017: {
  2751  0B13  1683               	bsf	3,5
  2752  0B14  01C1               	clrf	_previous_study_counter^(0+128)
  2753  0B15  01C2               	clrf	(_previous_study_counter+1)^(0+128)
  2754                           ;led.c: 1019: previous_study_counter[1] = 0;
  2755  0B16  01C3               	clrf	(_previous_study_counter+2)^(0+128)
  2756  0B17  01C4               	clrf	(_previous_study_counter+3)^(0+128)
  2757                           ;led.c: 1020: previous_study_counter[2] = 0;
  2758  0B18  01C5               	clrf	(_previous_study_counter+4)^(0+128)
  2759  0B19  01C6               	clrf	(_previous_study_counter+5)^(0+128)
  2760                           ;led.c: 1021: if(communication_flag == 0)
  2761  0B1A  08A1               	movf	_communication_flag^(0+128)
  2762  0B1B  1D03               	btfss	3,2
  2763  0B1C  2B23               	goto	l261
  2764                           ;led.c: 1022: {
  2765  0B1D  01BB               	clrf	_display_data^(0+128)
  2766  0B1E  01BC               	clrf	(_display_data+1)^(0+128)
  2767                           ;led.c: 1024: display_data[1] = 0;
  2768  0B1F  01BD               	clrf	(_display_data+2)^(0+128)
  2769  0B20  01BE               	clrf	(_display_data+3)^(0+128)
  2770                           ;led.c: 1025: display_data[2] = 0;
  2771  0B21  01BF               	clrf	(_display_data+4)^(0+128)
  2772  0B22  01C0               	clrf	(_display_data+5)^(0+128)
  2773  0B23                     l261
  2774                           ;led.c: 1026: }
  2775  0B23  1283               	bcf	3,5
  2776  0B24  0846               	movf	?a_study_mode_time_calculation+1,w
  2777  0B25  0746               	addwf	?a_study_mode_time_calculation+1,w
  2778  0B26  3EB5               	addlw	_current_study_counter
  2779  0B27  0084               	movwf	4
  2780  0B28  0800               	movf	0,w
  2781  0B29  00F9               	movwf	btemp
  2782  0B2A  0A84               	incf	4
  2783  0B2B  0800               	movf	0,w
  2784  0B2C  00FA               	movwf	btemp+1
  2785  0B2D  0846               	movf	?a_study_mode_time_calculation+1,w
  2786  0B2E  0746               	addwf	?a_study_mode_time_calculation+1,w
  2787  0B2F  3EC1               	addlw	_previous_study_counter
  2788  0B30  0084               	movwf	4
  2789  0B31  0879               	movf	btemp,w
  2790  0B32  0080               	movwf	0
  2791  0B33  0A84               	incf	4
  2792  0B34  087A               	movf	btemp+1,w
  2793  0B35  0080               	movwf	0
  2794                           ;led.c: 1029: study_time_valid_flag = 0;
  2795  0B36  1683               	bsf	3,5
  2796  0B37  01AC               	clrf	_study_time_valid_flag^(0+128)
  2797  0B38                     l250
  2798                           ;led.c: 1030: }
  2799  0B38  1683               	bsf	3,5
  2800  0B39  08A1               	movf	_communication_flag^(0+128)
  2801  0B3A  1D03               	btfss	3,2
  2802  0B3B  2BF4               	goto	l249
  2803                           ;led.c: 1035: {
  2804  0B3C  1283               	bcf	3,5
  2805  0B3D  08C6               	movf	?a_study_mode_time_calculation+1
  2806  0B3E  1D03               	btfss	3,2
  2807  0B3F  2B47               	goto	l264
  2808                           ;led.c: 1037: {
  2809  0B40  1683               	bsf	3,5
  2810  0B41  0B26               	decfsz	_red_displaying_flag^(0+128),w
  2811  0B42  2B47               	goto	l264
  2812                           ;led.c: 1039: {
  2813  0B43  01A6               	clrf	_red_displaying_flag^(0+128)
  2814                           ;led.c: 1041: display_data[0] = 0;
  2815  0B44  01BB               	clrf	_display_data^(0+128)
  2816  0B45  01BC               	clrf	(_display_data+1)^(0+128)
  2817                           ;led.c: 1042: red_displaying_end();
  2818  0B46  248C               	fcall	_red_displaying_end
  2819  0B47                     l264
  2820                           ;led.c: 1043: }
  2821  0B47  1283               	bcf	3,5
  2822  0B48  0B46               	decfsz	?a_study_mode_time_calculation+1,w
  2823  0B49  2B53               	goto	l266
  2824                           ;led.c: 1047: {
  2825  0B4A  1683               	bsf	3,5
  2826  0B4B  0B31               	decfsz	_yel_displaying_flag^(0+128),w
  2827  0B4C  2B53               	goto	l266
  2828                           ;led.c: 1049: {
  2829  0B4D  01B1               	clrf	_yel_displaying_flag^(0+128)
  2830                           ;led.c: 1051: display_data[1] = 0;
  2831  0B4E  01BD               	clrf	(_display_data+2)^(0+128)
  2832  0B4F  01BE               	clrf	(_display_data+3)^(0+128)
  2833                           ;led.c: 1052: yel_displaying_end();
  2834  0B50  118A  219E  158A   	fcall	_yel_displaying_end
  2835  0B53                     l266
  2836                           ;led.c: 1053: }
  2837  0B53  1283               	bcf	3,5
  2838  0B54  0846               	movf	?a_study_mode_time_calculation+1,w
  2839  0B55  3A02               	xorlw	2
  2840  0B56  1D03               	btfss	3,2
  2841  0B57  2B61               	goto	l268
  2842                           ;led.c: 1057: {
  2843  0B58  1683               	bsf	3,5
  2844  0B59  0B23               	decfsz	_gre_displaying_flag^(0+128),w
  2845  0B5A  2B61               	goto	l268
  2846                           ;led.c: 1059: {
  2847  0B5B  01A3               	clrf	_gre_displaying_flag^(0+128)
  2848                           ;led.c: 1061: display_data[2] = 0;
  2849  0B5C  01BF               	clrf	(_display_data+4)^(0+128)
  2850  0B5D  01C0               	clrf	(_display_data+5)^(0+128)
  2851                           ;led.c: 1062: gre_displaying_end();
  2852  0B5E  118A  2125  158A   	fcall	_gre_displaying_end
  2853  0B61                     l268
  2854                           ;led.c: 1063: }
  2855  0B61  1283               	bcf	3,5
  2856  0B62  1703               	bsf	3,6
  2857  0B63  0825               	movf	_pulse_study_time_flag^(0+256),w
  2858  0B64  1303               	bcf	3,6	;carry unused
  2859  0B65  0545               	andwf	?a_study_mode_time_calculation,w
  2860  0B66  0645               	xorwf	?a_study_mode_time_calculation,w
  2861  0B67  1D03               	btfss	3,2
  2862  0B68  2BF4               	goto	l249
  2863                           ;led.c: 1067: {
  2864  0B69  0846               	movf	?a_study_mode_time_calculation+1,w
  2865  0B6A  0746               	addwf	?a_study_mode_time_calculation+1,w
  2866  0B6B  3E2E               	addlw	_pulse_study_time_counter^(0+256)
  2867  0B6C  0084               	movwf	4
  2868  0B6D  1783               	bsf	3,7
  2869  0B6E  0800               	movf	0,w
  2870  0B6F  00F9               	movwf	btemp
  2871  0B70  0A84               	incf	4
  2872  0B71  0800               	movf	0,w
  2873  0B72  00FA               	movwf	btemp+1
  2874  0B73  0879               	movf	btemp,w
  2875  0B74  00C9               	movwf	?a_study_mode_time_calculation+4
  2876  0B75  087A               	movf	btemp+1,w
  2877  0B76  00CA               	movwf	?a_study_mode_time_calculation+5
  2878  0B77  0846               	movf	?a_study_mode_time_calculation+1,w
  2879  0B78  0746               	addwf	?a_study_mode_time_calculation+1,w
  2880  0B79  3E28               	addlw	_pulse_down_times^(0+256)
  2881  0B7A  0084               	movwf	4
  2882  0B7B  1783               	bsf	3,7
  2883  0B7C  0800               	movf	0,w
  2884  0B7D  00F9               	movwf	btemp
  2885  0B7E  0A84               	incf	4
  2886  0B7F  0800               	movf	0,w
  2887  0B80  00FA               	movwf	btemp+1
  2888  0B81  084A               	movf	?a_study_mode_time_calculation+5,w
  2889  0B82  027A               	subwf	btemp+1,w
  2890  0B83  1D03               	btfss	3,2
  2891  0B84  2B87               	goto	u1265
  2892  0B85  0849               	movf	?a_study_mode_time_calculation+4,w
  2893  0B86  0279               	subwf	btemp,w
  2894  0B87                     u1265
  2895  0B87  0846               	movf	?a_study_mode_time_calculation+1,w
  2896  0B88  1C03               	btfss	3,0
  2897  0B89  2B9B               	goto	L24
  2898  0B8A  0746               	addwf	?a_study_mode_time_calculation+1,w
  2899  0B8B  3E2E               	addlw	_pulse_study_time_counter^(0+256)
  2900  0B8C  0084               	movwf	4
  2901  0B8D  1783               	bsf	3,7
  2902  0B8E  0800               	movf	0,w
  2903  0B8F  00F9               	movwf	btemp
  2904  0B90  0A84               	incf	4
  2905  0B91  0800               	movf	0,w
  2906  0B92  00FA               	movwf	btemp+1
  2907  0B93  0879               	movf	btemp,w
  2908  0B94  00C9               	movwf	?a_study_mode_time_calculation+4
  2909  0B95  087A               	movf	btemp+1,w
  2910  0B96  00CA               	movwf	?a_study_mode_time_calculation+5
  2911  0B97  0846               	movf	?a_study_mode_time_calculation+1,w
  2912  0B98  0746               	addwf	?a_study_mode_time_calculation+1,w
  2913  0B99  3E28               	addlw	_pulse_down_times^(0+256)
  2914  0B9A  2BAB               	goto	L19
  2915                           ;led.c: 1069: else temp_var2 = pulse_study_time
      +                          _counter[i] - pulse_down_times[i];
  2916  0B9B                     L24
  2917  0B9B  0746               	addwf	?a_study_mode_time_calculation+1,w
  2918  0B9C  3E28               	addlw	_pulse_down_times^(0+256)
  2919  0B9D  0084               	movwf	4
  2920  0B9E  1783               	bsf	3,7
  2921  0B9F  0800               	movf	0,w
  2922  0BA0  00F9               	movwf	btemp
  2923  0BA1  0A84               	incf	4
  2924  0BA2  0800               	movf	0,w
  2925  0BA3  00FA               	movwf	btemp+1
  2926  0BA4  0879               	movf	btemp,w
  2927  0BA5  00C9               	movwf	?a_study_mode_time_calculation+4
  2928  0BA6  087A               	movf	btemp+1,w
  2929  0BA7  00CA               	movwf	?a_study_mode_time_calculation+5
  2930  0BA8  0846               	movf	?a_study_mode_time_calculation+1,w
  2931  0BA9  0746               	addwf	?a_study_mode_time_calculation+1,w
  2932  0BAA  3E2E               	addlw	_pulse_study_time_counter^(0+256)
  2933  0BAB                     L19
  2934  0BAB  0084               	movwf	4
  2935  0BAC  1783               	bsf	3,7
  2936  0BAD  0800               	movf	0,w
  2937  0BAE  00F9               	movwf	btemp
  2938  0BAF  0A84               	incf	4
  2939  0BB0  0800               	movf	0,w
  2940  0BB1  00FA               	movwf	btemp+1
  2941  0BB2  0849               	movf	?a_study_mode_time_calculation+4,w
  2942  0BB3  02F9               	subwf	btemp
  2943  0BB4  1C03               	btfss	3,0
  2944  0BB5  03FA               	decf	btemp+1
  2945  0BB6  084A               	movf	?a_study_mode_time_calculation+5,w
  2946  0BB7  02FA               	subwf	btemp+1
  2947  0BB8  0879               	movf	btemp,w
  2948  0BB9  00C7               	movwf	?a_study_mode_time_calculation+2
  2949  0BBA  087A               	movf	btemp+1,w
  2950  0BBB  00C8               	movwf	?a_study_mode_time_calculation+3
  2951                           ;led.c: 1070: if(temp_var2 > 140)
  2952  0BBC  3000               	movlw	0
  2953  0BBD  0248               	subwf	?a_study_mode_time_calculation+3,w
  2954  0BBE  308D               	movlw	141
  2955  0BBF  1903               	btfsc	3,2
  2956  0BC0  0247               	subwf	?a_study_mode_time_calculation+2,w
  2957  0BC1  1C03               	btfss	3,0
  2958  0BC2  2BD8               	goto	l273
  2959                           ;led.c: 1071: {
  2960  0BC3  0846               	movf	?a_study_mode_time_calculation+1,w
  2961  0BC4  0746               	addwf	?a_study_mode_time_calculation+1,w
  2962  0BC5  3E28               	addlw	_pulse_down_times^(0+256)
  2963  0BC6  0084               	movwf	4
  2964  0BC7  1783               	bsf	3,7
  2965  0BC8  0800               	movf	0,w
  2966  0BC9  00F9               	movwf	btemp
  2967  0BCA  0A84               	incf	4
  2968  0BCB  0800               	movf	0,w
  2969  0BCC  00FA               	movwf	btemp+1
  2970  0BCD  0479               	iorwf	btemp,w
  2971  0BCE  1903               	btfsc	3,2
  2972  0BCF  2BD8               	goto	l273
  2973                           ;led.c: 1073: {
  2974  0BD0  1703               	bsf	3,6
  2975  0BD1  01A4               	clrf	_pulse_down_time_valid_flag^(0+256)
  2976                           ;led.c: 1075: pulse_down_times[0] = 0;
  2977  0BD2  01A8               	clrf	_pulse_down_times^(0+256)
  2978  0BD3  01A9               	clrf	(_pulse_down_times+1)^(0+256)
  2979                           ;led.c: 1076: pulse_down_times[1] = 0;
  2980  0BD4  01AA               	clrf	(_pulse_down_times+2)^(0+256)
  2981  0BD5  01AB               	clrf	(_pulse_down_times+3)^(0+256)
  2982                           ;led.c: 1077: pulse_down_times[2] = 0;
  2983  0BD6  01AC               	clrf	(_pulse_down_times+4)^(0+256)
  2984  0BD7  01AD               	clrf	(_pulse_down_times+5)^(0+256)
  2985  0BD8                     l273
  2986                           ;led.c: 1078: }
  2987  0BD8  1303               	bcf	3,6	;carry unused
  2988  0BD9  0846               	movf	?a_study_mode_time_calculation+1,w
  2989  0BDA  0746               	addwf	?a_study_mode_time_calculation+1,w
  2990  0BDB  3E2E               	addlw	_pulse_study_time_counter^(0+256)
  2991  0BDC  0084               	movwf	4
  2992  0BDD  1783               	bsf	3,7
  2993  0BDE  0800               	movf	0,w
  2994  0BDF  00F9               	movwf	btemp
  2995  0BE0  0A84               	incf	4
  2996  0BE1  0800               	movf	0,w
  2997  0BE2  00FA               	movwf	btemp+1
  2998  0BE3  0846               	movf	?a_study_mode_time_calculation+1,w
  2999  0BE4  0746               	addwf	?a_study_mode_time_calculation+1,w
  3000  0BE5  3E28               	addlw	_pulse_down_times^(0+256)
  3001  0BE6  0084               	movwf	4
  3002  0BE7  1783               	bsf	3,7
  3003  0BE8  0879               	movf	btemp,w
  3004  0BE9  0080               	movwf	0
  3005  0BEA  0A84               	incf	4
  3006  0BEB  087A               	movf	btemp+1,w
  3007  0BEC  0080               	movwf	0
  3008                           ;led.c: 1081: pulse_down_time_valid_flag |= tem
      +                          p_var1;
  3009  0BED  0845               	movf	?a_study_mode_time_calculation,w
  3010  0BEE  1703               	bsf	3,6
  3011  0BEF  04A4               	iorwf	_pulse_down_time_valid_flag^(0+256)
  3012                           ;led.c: 1082: pulse_study_time_flag &= ~temp_va
      +                          r1;
  3013  0BF0  1303               	bcf	3,6	;carry unused
  3014  0BF1  0945               	comf	?a_study_mode_time_calculation,w
  3015  0BF2  1703               	bsf	3,6
  3016  0BF3  05A5               	andwf	_pulse_study_time_flag^(0+256)
  3017  0BF4                     l249
  3018                           ;led.c: 1083: }
  3019  0BF4  1683               	bsf	3,5
  3020  0BF5                     L22
  3021  0BF5  1303               	bcf	3,6	;carry unused
  3022  0BF6  0829               	movf	_study_lamp_stab_state^(0+128),w
  3023  0BF7  1283               	bcf	3,5
  3024  0BF8  0545               	andwf	?a_study_mode_time_calculation,w
  3025  0BF9  0645               	xorwf	?a_study_mode_time_calculation,w
  3026  0BFA  1D03               	btfss	3,2
  3027  0BFB  2C0B               	goto	l275
  3028  0BFC  1683               	bsf	3,5
  3029  0BFD  0829               	movf	_study_lamp_stab_state^(0+128),w
  3030  0BFE  3A07               	xorlw	7
  3031  0BFF  1903               	btfsc	3,2
  3032  0C00  2C0B               	goto	l275
  3033                           ;led.c: 1087: {
  3034  0C01  1283               	bcf	3,5
  3035  0C02  0B45               	decfsz	?a_study_mode_time_calculation,w
  3036  0C03  2C09               	goto	l276
  3037                           ;led.c: 1089: {
  3038  0C04  1683               	bsf	3,5
  3039  0C05  08A7               	movf	_restart_flag^(0+128)
  3040  0C06  1903               	btfsc	3,2
  3041  0C07  2C0B               	goto	l275
  3042  0C08  1283               	bcf	3,5
  3043                           ;led.c: 1091: }
  3044  0C09                     l276
  3045                           ;led.c: 1092: else lamp_counter_valid_flag |= t
      +                          emp_var1;
  3046  0C09  0845               	movf	?a_study_mode_time_calculation,w
  3047  0C0A  04A8               	iorwf	_lamp_counter_valid_flag
  3048  0C0B                     l275
  3049                           ;led.c: 1093: }
  3050  0C0B  1003               	bcf	3,0
  3051  0C0C  1283               	bcf	3,5
  3052  0C0D  0DC5               	rlf	?a_study_mode_time_calculation
  3053  0C0E  0AC6               	incf	?a_study_mode_time_calculation+1
  3054  0C0F  3003               	movlw	3
  3055  0C10  0246               	subwf	?a_study_mode_time_calculation+1,w
  3056  0C11  1803               	btfsc	3,0
  3057  0C12  0008               	return
  3058  0C13  2975               	goto	l222
  3059  0C14                     _timer1init
  3060                           ;led.c: 245: void timer1init(void)
  3061  0C14  3021               	movlw	33
  3062  0C15  0183               	clrf	3	;select bank 0
  3063  0C16  0090               	movwf	16
  3064                           ;led.c: 248: TMR1IF=0;
  3065  0C17  100C               	bcf	12,0
  3066                           ;led.c: 249: TMR1IE=1;
  3067  0C18  1683               	bsf	3,5
  3068  0C19  140C               	bsf	12,0
  3069                           ;led.c: 250: TMR1H=0xFB;
  3070  0C1A  30FB               	movlw	-5
  3071  0C1B  1283               	bcf	3,5
  3072  0C1C  008F               	movwf	15	;volatile
  3073                           ;led.c: 251: TMR1L=0x85;
  3074  0C1D  3085               	movlw	-123
  3075  0C1E  008E               	movwf	14	;volatile
  3076                           ;led.c: 252: PIR1=0;
  3077  0C1F  018C               	clrf	12	;volatile
  3078                           ;led.c: 253: PEIE=1;
  3079  0C20  170B               	bsf	11,6
  3080                           ;led.c: 254: GIE=1;
  3081  0C21  178B               	bsf	11,7
  3082                           ;led.c: 255: }
  3083  0C22  0008               	return	;W free
  3084  0C23                     _red_displaydrv
  3085                           ;	_i assigned to ?a_red_displaydrv+0
  3086  0000                     _red_displaydrv$i	set	?a_red_displaydrv
  3087                           ;	_k assigned to ?a_red_displaydrv+1
  3088  0000                     _red_displaydrv$k	set	?a_red_displaydrv+1
  3089                           ;	_tempdata assigned to ?a_red_displaydrv+2
  3090  0000                     _red_displaydrv$tempdata	set	?a_red_displaydrv+
      +                          2
  3091                           ;led.c: 257: void red_displaydrv(unsigned int d
      +                          rvword)
  3092  0C23  0183               	clrf	3	;select bank 0
  3093  0C24  01D7               	clrf	?a_red_displaydrv+2
  3094  0C25  3080               	movlw	128
  3095  0C26  00D8               	movwf	?a_red_displaydrv+3
  3096                           ;led.c: 263: RB1=0;
  3097  0C27  1086               	bcf	6,1
  3098                           ;led.c: 264: RB2=0;
  3099  0C28  1106               	bcf	6,2
  3100                           ;led.c: 265: RB5=0;
  3101  0C29  1286               	bcf	6,5
  3102                           ;led.c: 266: RB3=0;
  3103  0C2A  1186               	bcf	6,3
  3104                           ;led.c: 268: for(i=0;i<16;i++)
  3105  0C2B  01D5               	clrf	?a_red_displaydrv
  3106  0C2C                     l15
  3107                           ;led.c: 269: {
  3108  0C2C  0854               	movf	?_red_displaydrv+1,w
  3109  0C2D  00FA               	movwf	btemp+1
  3110  0C2E  0853               	movf	?_red_displaydrv,w
  3111  0C2F  00F9               	movwf	btemp
  3112  0C30  0857               	movf	?a_red_displaydrv+2,w
  3113  0C31  05F9               	andwf	btemp
  3114  0C32  0858               	movf	?a_red_displaydrv+3,w
  3115  0C33  05FA               	andwf	btemp+1
  3116  0C34  087A               	movf	btemp+1,w
  3117  0C35  0479               	iorwf	btemp,w
  3118  0C36  1D03               	btfss	3,2
  3119  0C37  2C3A               	goto	l18
  3120  0C38  1006               	bcf	6,0
  3121  0C39  2C3B               	goto	l19
  3122  0C3A                     l18
  3123                           ;led.c: 271: else RB0=1;
  3124  0C3A  1406               	bsf	6,0
  3125  0C3B                     l19
  3126                           ;led.c: 272: for(k=0;k<1;k++);
  3127  0C3B  01D6               	clrf	?a_red_displaydrv+1
  3128  0C3C                     l20
  3129  0C3C  0AD6               	incf	?a_red_displaydrv+1
  3130  0C3D  3001               	movlw	1
  3131  0C3E  0256               	subwf	?a_red_displaydrv+1,w
  3132  0C3F  1C03               	btfss	3,0
  3133  0C40  2C3C               	goto	l20
  3134                           ;led.c: 273: RB3=1;
  3135  0C41  1586               	bsf	6,3
  3136                           ;led.c: 274: for(k=0;k<5;k++);
  3137  0C42  01D6               	clrf	?a_red_displaydrv+1
  3138  0C43                     l23
  3139  0C43  0AD6               	incf	?a_red_displaydrv+1
  3140  0C44  3005               	movlw	5
  3141  0C45  0256               	subwf	?a_red_displaydrv+1,w
  3142  0C46  1C03               	btfss	3,0
  3143  0C47  2C43               	goto	l23
  3144                           ;led.c: 275: RB3=0;
  3145  0C48  1186               	bcf	6,3
  3146                           ;led.c: 276: tempdata >>= 1;
  3147  0C49  1003               	bcf	3,0
  3148  0C4A  0CD8               	rrf	?a_red_displaydrv+3
  3149  0C4B  0CD7               	rrf	?a_red_displaydrv+2
  3150  0C4C  0AD5               	incf	?a_red_displaydrv
  3151  0C4D  3010               	movlw	16
  3152  0C4E  0255               	subwf	?a_red_displaydrv,w
  3153  0C4F  1803               	btfsc	3,0
  3154  0C50  0008               	return
  3155  0C51  2C2C               	goto	l15
  3156  0C52                     _red_displaying
  3157                           ;	_temp_red_var0 assigned to ?a_red_displaying+
      +                          0
  3158  0000                     _red_displaying$temp_red_var0	set	?a_red_displa
      +                          ying
  3159                           ;	_temp_red_var1 assigned to ?a_red_displaying+
      +                          1
  3160  0000                     _red_displaying$temp_red_var1	set	?a_red_displa
      +                          ying+1
  3161                           ;	_temp_red_var2 assigned to ?a_red_displaying+
      +                          2
  3162  0000                     _red_displaying$temp_red_var2	set	?a_red_displa
      +                          ying+2
  3163                           ;led.c: 324: void red_displaying(unsigned int n
      +                          umber)
  3164  0C52  3000               	movlw	0
  3165  0C53  0183               	clrf	3	;select bank 0
  3166  0C54  024D               	subwf	?_red_displaying+1,w
  3167  0C55  3064               	movlw	100
  3168  0C56  1903               	btfsc	3,2
  3169  0C57  024C               	subwf	?_red_displaying,w
  3170  0C58  1C03               	btfss	3,0
  3171  0C59  2C5C               	goto	l51
  3172  0C5A  3063               	movlw	99
  3173  0C5B  2C5D               	goto	L1
  3174  0C5C                     l51
  3175                           ;led.c: 331: else temp_red_var2 = number;
  3176  0C5C  084C               	movf	?_red_displaying,w
  3177  0C5D                     L1
  3178  0C5D  00D0               	movwf	?a_red_displaying+2
  3179                           ;led.c: 333: temp_red_var0 = temp_red_var2/10;
  3180  0C5E  300A               	movlw	10
  3181  0C5F  00FA               	movwf	btemp+1
  3182  0C60  0850               	movf	?a_red_displaying+2,w
  3183  0C61  118A  204C         	fcall	lbdiv
  3184  0C63  00CE               	movwf	?a_red_displaying
  3185                           ;led.c: 334: if((temp_red_var0 == 0)&&(1 == 0))
      +                           temp_red_var0 = 10;
  3186                           ;led.c: 336: temp_red_var1 = temp_red_var2%10;
  3187  0C64  300A               	movlw	10
  3188  0C65  00FA               	movwf	btemp+1
  3189  0C66  0850               	movf	?a_red_displaying+2,w
  3190  0C67  118A  204C         	fcall	lbmod
  3191  0C69  0879               	movf	btemp,w
  3192  0C6A  00CF               	movwf	?a_red_displaying+1
  3193                           ;led.c: 338: red_displaydrv(REDWORDS[temp_red_v
      +                          ar0]);
  3194  0C6B  3005               	movlw	_REDWORDS shr (0+8)
  3195  0C6C  008A               	movwf	10
  3196  0C6D  084E               	movf	?a_red_displaying,w
  3197  0C6E  074E               	addwf	?a_red_displaying,w
  3198  0C6F  00D1               	movwf	?a_red_displaying+3
  3199  0C70  2571               	call	((_REDWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3200  0C71  00D3               	movwf	?_red_displaydrv
  3201  0C72  0A51               	incf	?a_red_displaying+3,w
  3202  0C73  2571               	call	((_REDWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3203  0C74  00D4               	movwf	?_red_displaydrv+1
  3204  0C75  158A  2423         	fcall	_red_displaydrv
  3205                           ;led.c: 339: red_displaydrv(REDWORDS[temp_red_v
      +                          ar1]);
  3206  0C77  3005               	movlw	_REDWORDS shr (0+8)
  3207  0C78  008A               	movwf	10
  3208  0C79  084F               	movf	?a_red_displaying+1,w
  3209  0C7A  074F               	addwf	?a_red_displaying+1,w
  3210  0C7B  00D1               	movwf	?a_red_displaying+3
  3211  0C7C  2571               	call	((_REDWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3212  0C7D  00D3               	movwf	?_red_displaydrv
  3213  0C7E  0A51               	incf	?a_red_displaying+3,w
  3214  0C7F  2571               	call	((_REDWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3215  0C80  00D4               	movwf	?_red_displaydrv+1
  3216  0C81  158A  2423         	fcall	_red_displaydrv
  3217                           ;led.c: 341: RB5=1;
  3218  0C83  1686               	bsf	6,5
  3219                           ;led.c: 342: for(temp_red_var2=0;temp_red_var2<
      +                          12;temp_red_var2++);
  3220  0C84  01D0               	clrf	?a_red_displaying+2
  3221  0C85                     l54
  3222  0C85  0AD0               	incf	?a_red_displaying+2
  3223  0C86  300C               	movlw	12
  3224  0C87  0250               	subwf	?a_red_displaying+2,w
  3225  0C88  1C03               	btfss	3,0
  3226  0C89  2C85               	goto	l54
  3227                           ;led.c: 343: RB5=0;
  3228  0C8A  1286               	bcf	6,5
  3229                           ;led.c: 344: }
  3230  0C8B  0008               	return	;W free
  3231  0C8C                     _red_displaying_end
  3232                           ;	_k assigned to ?a_red_displaying_end+0
  3233  0000                     _red_displaying_end$k	set	?a_red_displaying_end
  3234                           ;led.c: 346: void red_displaying_end(void)
  3235  0C8C  0183               	clrf	3	;select bank 0
  3236  0C8D  01D3               	clrf	?_red_displaydrv
  3237  0C8E  01D4               	clrf	?_red_displaydrv+1
  3238  0C8F  2423               	fcall	_red_displaydrv
  3239                           ;led.c: 350: red_displaydrv(0x0000);
  3240  0C90  01D3               	clrf	?_red_displaydrv
  3241  0C91  01D4               	clrf	?_red_displaydrv+1
  3242  0C92  2423               	fcall	_red_displaydrv
  3243                           ;led.c: 351: RB5=1;
  3244  0C93  1686               	bsf	6,5
  3245                           ;led.c: 352: for(k=0;k<12;k++);
  3246  0C94  01CD               	clrf	?a_red_displaying_end
  3247  0C95                     l58
  3248  0C95  0ACD               	incf	?a_red_displaying_end
  3249  0C96  300C               	movlw	12
  3250  0C97  024D               	subwf	?a_red_displaying_end,w
  3251  0C98  1C03               	btfss	3,0
  3252  0C99  2C95               	goto	l58
  3253                           ;led.c: 353: RB5=0;
  3254  0C9A  1286               	bcf	6,5
  3255                           ;led.c: 354: }
  3256  0C9B  0008               	return	;W free
  3257  0C9C                     _g_segment_displaying
  3258                           ;	_number assigned to ?a_g_segment_displaying+0
  3259  0000                     _g_segment_displaying$number	set	?a_g_segment_d
      +                          isplaying
  3260                           ;	_k assigned to ?a_g_segment_displaying+1
  3261  0000                     _g_segment_displaying$k	set	?a_g_segment_displa
      +                          ying+1
  3262                           ;_number stored from w
  3263  0C9C  0183               	clrf	3	;select bank 0
  3264  0C9D  00CC               	movwf	?a_g_segment_displaying
  3265                           ;led.c: 419: void g_segment_displaying(unsigned
      +                           char number)
  3266  0C9E  2D00               	goto	l85
  3267  0C9F                     l86
  3268                           ;led.c: 423: {
  3269                           ;led.c: 425: red_displaydrv(REDWORDS[11]);
  3270  0C9F  3005               	movlw	_REDWORDS shr (0+8)
  3271  0CA0  008A               	movwf	10
  3272  0CA1  3016               	movlw	22
  3273  0CA2  00CE               	movwf	?a_g_segment_displaying+2
  3274  0CA3  2571               	call	((_REDWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3275  0CA4  00D3               	movwf	?_red_displaydrv
  3276  0CA5  0A4E               	incf	?a_g_segment_displaying+2,w
  3277  0CA6  2571               	call	((_REDWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3278  0CA7  00D4               	movwf	?_red_displaydrv+1
  3279  0CA8  158A  2423         	fcall	_red_displaydrv
  3280                           ;led.c: 426: red_displaydrv(REDWORDS[11]);
  3281  0CAA  3005               	movlw	_REDWORDS shr (0+8)
  3282  0CAB  008A               	movwf	10
  3283  0CAC  3016               	movlw	22
  3284  0CAD  00CE               	movwf	?a_g_segment_displaying+2
  3285  0CAE  2571               	call	((_REDWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3286  0CAF  00D3               	movwf	?_red_displaydrv
  3287  0CB0  0A4E               	incf	?a_g_segment_displaying+2,w
  3288  0CB1  2571               	call	((_REDWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3289  0CB2  00D4               	movwf	?_red_displaydrv+1
  3290  0CB3  158A  2423         	fcall	_red_displaydrv
  3291                           ;led.c: 427: RB5=1;
  3292  0CB5  1686               	bsf	6,5
  3293                           ;led.c: 428: for(k=0;k<12;k++);
  3294  0CB6  01CD               	clrf	?a_g_segment_displaying+1
  3295  0CB7                     l87
  3296  0CB7  0ACD               	incf	?a_g_segment_displaying+1
  3297  0CB8  300C               	movlw	12
  3298  0CB9  024D               	subwf	?a_g_segment_displaying+1,w
  3299  0CBA  1C03               	btfss	3,0
  3300  0CBB  2CB7               	goto	l87
  3301                           ;led.c: 429: RB5=0;
  3302  0CBC  1286               	bcf	6,5
  3303                           ;led.c: 430: break;
  3304  0CBD  0008               	return
  3305  0CBE                     l90
  3306                           ;led.c: 431: case 1:
  3307                           ;led.c: 432: yel_displaydrv(YELWORDS[11]);
  3308  0CBE  3005               	movlw	_YELWORDS shr (0+8)
  3309  0CBF  008A               	movwf	10
  3310  0CC0  3016               	movlw	22
  3311  0CC1  00CE               	movwf	?a_g_segment_displaying+2
  3312  0CC2  258A               	call	((_YELWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3313  0CC3  00D3               	movwf	?_yel_displaydrv
  3314  0CC4  0A4E               	incf	?a_g_segment_displaying+2,w
  3315  0CC5  258A               	call	((_YELWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3316  0CC6  00D4               	movwf	?_yel_displaydrv+1
  3317  0CC7  118A  2135         	fcall	_yel_displaydrv
  3318                           ;led.c: 433: yel_displaydrv(YELWORDS[11]);
  3319  0CC9  3005               	movlw	_YELWORDS shr (0+8)
  3320  0CCA  008A               	movwf	10
  3321  0CCB  3016               	movlw	22
  3322  0CCC  00CE               	movwf	?a_g_segment_displaying+2
  3323  0CCD  258A               	call	((_YELWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3324  0CCE  00D3               	movwf	?_yel_displaydrv
  3325  0CCF  0A4E               	incf	?a_g_segment_displaying+2,w
  3326  0CD0  258A               	call	((_YELWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3327  0CD1  00D4               	movwf	?_yel_displaydrv+1
  3328  0CD2  118A  2135  158A   	fcall	_yel_displaydrv
  3329                           ;led.c: 434: RB5=1;
  3330  0CD5  1686               	bsf	6,5
  3331                           ;led.c: 435: for(k=0;k<12;k++);
  3332  0CD6  01CD               	clrf	?a_g_segment_displaying+1
  3333  0CD7                     l91
  3334  0CD7  0ACD               	incf	?a_g_segment_displaying+1
  3335  0CD8  300C               	movlw	12
  3336  0CD9  024D               	subwf	?a_g_segment_displaying+1,w
  3337  0CDA  1C03               	btfss	3,0
  3338  0CDB  2CD7               	goto	l91
  3339                           ;led.c: 436: RB5=0;
  3340  0CDC  1286               	bcf	6,5
  3341                           ;led.c: 437: break;
  3342  0CDD  0008               	return
  3343  0CDE                     l94
  3344                           ;led.c: 438: case 2:
  3345                           ;led.c: 439: gre_displaydrv(GREWORDS[11]);
  3346  0CDE  3005               	movlw	_GREWORDS shr (0+8)
  3347  0CDF  008A               	movwf	10
  3348  0CE0  3016               	movlw	22
  3349  0CE1  00CE               	movwf	?a_g_segment_displaying+2
  3350  0CE2  25A3               	call	((_GREWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3351  0CE3  00D3               	movwf	?_gre_displaydrv
  3352  0CE4  0A4E               	incf	?a_g_segment_displaying+2,w
  3353  0CE5  25A3               	call	((_GREWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3354  0CE6  00D4               	movwf	?_gre_displaydrv+1
  3355  0CE7  118A  20BC         	fcall	_gre_displaydrv
  3356                           ;led.c: 440: gre_displaydrv(GREWORDS[11]);
  3357  0CE9  3005               	movlw	_GREWORDS shr (0+8)
  3358  0CEA  008A               	movwf	10
  3359  0CEB  3016               	movlw	22
  3360  0CEC  00CE               	movwf	?a_g_segment_displaying+2
  3361  0CED  25A3               	call	((_GREWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3362  0CEE  00D3               	movwf	?_gre_displaydrv
  3363  0CEF  0A4E               	incf	?a_g_segment_displaying+2,w
  3364  0CF0  25A3               	call	((_GREWORDS+-1)& (0+2047))| (($)& (0+-204
      +                          8))
  3365  0CF1  00D4               	movwf	?_gre_displaydrv+1
  3366  0CF2  118A  20BC  158A   	fcall	_gre_displaydrv
  3367                           ;led.c: 441: RB5=1;
  3368  0CF5  1686               	bsf	6,5
  3369                           ;led.c: 442: for(k=0;k<12;k++);
  3370  0CF6  01CD               	clrf	?a_g_segment_displaying+1
  3371  0CF7                     l95
  3372  0CF7  0ACD               	incf	?a_g_segment_displaying+1
  3373  0CF8  300C               	movlw	12
  3374  0CF9  024D               	subwf	?a_g_segment_displaying+1,w
  3375  0CFA  1C03               	btfss	3,0
  3376  0CFB  2CF7               	goto	l95
  3377                           ;led.c: 443: RB5=0;
  3378  0CFC  1286               	bcf	6,5
  3379                           ;led.c: 444: break;
  3380  0CFD  0008               	return
  3381  0CFE                     l98
  3382                           ;led.c: 445: default:
  3383                           ;led.c: 446: gre_displaying_end();
  3384  0CFE  118A  2925         	ljmp	_gre_displaying_end
  3385                           ;led.c: 447: break;
  3386  0D00                     l85
  3387  0D00  084C               	movf	?a_g_segment_displaying,w
  3388  0D01  3A00               	xorlw	0
  3389  0D02  1903               	btfsc	3,2
  3390  0D03  2C9F               	goto	l86
  3391  0D04  3A01               	xorlw	1
  3392  0D05  1903               	btfsc	3,2
  3393  0D06  2CBE               	goto	l90
  3394  0D07  3A03               	xorlw	3
  3395  0D08  1903               	btfsc	3,2
  3396  0D09  2CDE               	goto	l94
  3397  0D0A  2CFE               	goto	l98
  3398  0D0B                     _ioinit
  3399                           ;	_i assigned to ?a_ioinit+0
  3400  0000                     _ioinit$i	set	?a_ioinit
  3401                           ;led.c: 115: void ioinit(void)
  3402  0D0B  3008               	movlw	8
  3403  0D0C  1683               	bsf	3,5
  3404  0D0D  1303               	bcf	3,6	;carry unused
  3405  0D0E  008F               	movwf	15	;volatile
  3406                           ;led.c: 119: ANSEL=0X00;
  3407  0D0F  1703               	bsf	3,6
  3408  0D10  0188               	clrf	8
  3409                           ;led.c: 120: ANSELH=0X00;
  3410  0D11  0189               	clrf	9
  3411                           ;led.c: 121: RBPU = 1;
  3412  0D12  1303               	bcf	3,6	;carry unused
  3413  0D13  1781               	bsf	1,7
  3414                           ;led.c: 122: PORTB=0B00000000;
  3415  0D14  1283               	bcf	3,5
  3416  0D15  0186               	clrf	6	;volatile
  3417                           ;led.c: 123: TRISB=0B00000000;
  3418  0D16  1683               	bsf	3,5
  3419  0D17  0186               	clrf	6	;volatile
  3420                           ;led.c: 124: TRISC=0B00011100;
  3421  0D18  301C               	movlw	28
  3422  0D19  0087               	movwf	7	;volatile
  3423                           ;led.c: 126: TFG = 0;
  3424  0D1A  1283               	bcf	3,5
  3425  0D1B  01A0               	clrf	_TFG
  3426                           ;led.c: 127: wdtcounter = 0;
  3427  0D1C  1683               	bsf	3,5
  3428  0D1D  01B0               	clrf	_wdtcounter^(0+128)
  3429                           ;led.c: 128: ledstate = 0;
  3430  0D1E  01A4               	clrf	_ledstate^(0+128)
  3431                           ;led.c: 130: lamp_stab_state = 0x07;
  3432  0D1F  3007               	movlw	7
  3433  0D20  1283               	bcf	3,5
  3434  0D21  00AB               	movwf	_lamp_stab_state
  3435                           ;led.c: 131: lamp_on_flag = 0;
  3436  0D22  01AA               	clrf	_lamp_on_flag
  3437                           ;led.c: 132: lamp_off_flag = 0;
  3438  0D23  01A9               	clrf	_lamp_off_flag
  3439                           ;led.c: 133: pulse_study_time_flag = 0;
  3440  0D24  1703               	bsf	3,6
  3441  0D25  01A5               	clrf	_pulse_study_time_flag^(0+256)
  3442                           ;led.c: 134: pulse_down_time_valid_flag = 0;
  3443  0D26  01A4               	clrf	_pulse_down_time_valid_flag^(0+256)
  3444                           ;led.c: 136: for(i=0;i<3;i++)
  3445  0D27  1303               	bcf	3,6	;carry unused
  3446  0D28  01C5               	clrf	?a_ioinit
  3447  0D29                     l2
  3448                           ;led.c: 137: {
  3449  0D29  0845               	movf	?a_ioinit,w
  3450  0D2A  3E30               	addlw	_lamp_chge_counter
  3451  0D2B  0084               	movwf	4
  3452  0D2C  1383               	bcf	3,7
  3453  0D2D  0180               	clrf	0
  3454                           ;led.c: 139: lamp_on_counter[i] = 0;
  3455  0D2E  0845               	movf	?a_ioinit,w
  3456  0D2F  0745               	addwf	?a_ioinit,w
  3457  0D30  3E3C               	addlw	_lamp_on_counter
  3458  0D31  0084               	movwf	4
  3459  0D32  1383               	bcf	3,7
  3460  0D33  0180               	clrf	0
  3461  0D34  0A84               	incf	4
  3462  0D35  0180               	clrf	0
  3463                           ;led.c: 140: lamp_off_counter[i] = 0;
  3464  0D36  0845               	movf	?a_ioinit,w
  3465  0D37  0745               	addwf	?a_ioinit,w
  3466  0D38  3E36               	addlw	_lamp_off_counter
  3467  0D39  0084               	movwf	4
  3468  0D3A  1383               	bcf	3,7
  3469  0D3B  0180               	clrf	0
  3470  0D3C  0A84               	incf	4
  3471  0D3D  0180               	clrf	0
  3472                           ;led.c: 141: previous_study_counter[i] = 0;
  3473  0D3E  0845               	movf	?a_ioinit,w
  3474  0D3F  0745               	addwf	?a_ioinit,w
  3475  0D40  3EC1               	addlw	_previous_study_counter
  3476  0D41  0084               	movwf	4
  3477  0D42  1383               	bcf	3,7
  3478  0D43  0180               	clrf	0
  3479  0D44  0A84               	incf	4
  3480  0D45  0180               	clrf	0
  3481                           ;led.c: 142: current_study_counter[i] = 0;
  3482  0D46  0845               	movf	?a_ioinit,w
  3483  0D47  0745               	addwf	?a_ioinit,w
  3484  0D48  3EB5               	addlw	_current_study_counter
  3485  0D49  0084               	movwf	4
  3486  0D4A  1383               	bcf	3,7
  3487  0D4B  0180               	clrf	0
  3488  0D4C  0A84               	incf	4
  3489  0D4D  0180               	clrf	0
  3490                           ;led.c: 143: study_chge_counter[i] = 0;
  3491  0D4E  0845               	movf	?a_ioinit,w
  3492  0D4F  3EB2               	addlw	_study_chge_counter
  3493  0D50  0084               	movwf	4
  3494  0D51  1383               	bcf	3,7
  3495  0D52  0180               	clrf	0
  3496                           ;led.c: 144: display_data[i] = 0;
  3497  0D53  0845               	movf	?a_ioinit,w
  3498  0D54  0745               	addwf	?a_ioinit,w
  3499  0D55  3EBB               	addlw	_display_data
  3500  0D56  0084               	movwf	4
  3501  0D57  1383               	bcf	3,7
  3502  0D58  0180               	clrf	0
  3503  0D59  0A84               	incf	4
  3504  0D5A  0180               	clrf	0
  3505                           ;led.c: 145: lamp_off_time[i] = 0;
  3506  0D5B  0845               	movf	?a_ioinit,w
  3507  0D5C  3E33               	addlw	_lamp_off_time
  3508  0D5D  0084               	movwf	4
  3509  0D5E  1383               	bcf	3,7
  3510  0D5F  0180               	clrf	0
  3511                           ;led.c: 146: pulse_study_time_counter[i] = 0;
  3512  0D60  0845               	movf	?a_ioinit,w
  3513  0D61  0745               	addwf	?a_ioinit,w
  3514  0D62  3E2E               	addlw	_pulse_study_time_counter^(0+256)
  3515  0D63  0084               	movwf	4
  3516  0D64  1783               	bsf	3,7
  3517  0D65  0180               	clrf	0
  3518  0D66  0A84               	incf	4
  3519  0D67  0180               	clrf	0
  3520                           ;led.c: 147: pulse_down_times[i] = 0;
  3521  0D68  0845               	movf	?a_ioinit,w
  3522  0D69  0745               	addwf	?a_ioinit,w
  3523  0D6A  3E28               	addlw	_pulse_down_times^(0+256)
  3524  0D6B  0084               	movwf	4
  3525  0D6C  1783               	bsf	3,7
  3526  0D6D  0180               	clrf	0
  3527  0D6E  0A84               	incf	4
  3528  0D6F  0180               	clrf	0
  3529  0D70  0AC5               	incf	?a_ioinit
  3530  0D71  3003               	movlw	3
  3531  0D72  0245               	subwf	?a_ioinit,w
  3532  0D73  1C03               	btfss	3,0
  3533  0D74  2D29               	goto	l2
  3534                           ;led.c: 148: }
  3535  0D75  3007               	movlw	7
  3536  0D76  1683               	bsf	3,5
  3537  0D77  00A9               	movwf	_study_lamp_stab_state^(0+128)
  3538                           ;led.c: 150: study_time_flag = 0;
  3539  0D78  01AB               	clrf	_study_time_flag^(0+128)
  3540                           ;led.c: 151: study_time_valid_flag = 0;
  3541  0D79  01AC               	clrf	_study_time_valid_flag^(0+128)
  3542                           ;led.c: 152: study_or_pulse_mode = 1;
  3543  0D7A  01AA               	clrf	_study_or_pulse_mode^(0+128)
  3544  0D7B  0AAA               	incf	_study_or_pulse_mode^(0+128)
  3545                           ;led.c: 154: pulse_to_study = 0;
  3546  0D7C  01A5               	clrf	_pulse_to_study^(0+128)
  3547                           ;led.c: 155: study_to_pulse = 0;
  3548  0D7D  01AD               	clrf	_study_to_pulse^(0+128)
  3549                           ;led.c: 156: study_to_pulse_flag = 0;
  3550  0D7E  01AE               	clrf	_study_to_pulse_flag^(0+128)
  3551                           ;led.c: 157: sametime_on_counter = 0;
  3552  0D7F  01A8               	clrf	_sametime_on_counter^(0+128)
  3553                           ;led.c: 159: red_displaying_flag = 0;
  3554  0D80  01A6               	clrf	_red_displaying_flag^(0+128)
  3555                           ;led.c: 160: gre_displaying_flag = 0;
  3556  0D81  01A3               	clrf	_gre_displaying_flag^(0+128)
  3557                           ;led.c: 161: yel_displaying_flag = 0;
  3558  0D82  01B1               	clrf	_yel_displaying_flag^(0+128)
  3559                           ;led.c: 163: displaying_second_counter = 0;
  3560  0D83  01A2               	clrf	_displaying_second_counter^(0+128)
  3561                           ;led.c: 165: ten_mm_counter = 0;
  3562  0D84  01AF               	clrf	_ten_mm_counter^(0+128)
  3563                           ;led.c: 166: no_lamp_on_counter = 0;
  3564  0D85  1283               	bcf	3,5
  3565  0D86  01AD               	clrf	_no_lamp_on_counter
  3566                           ;led.c: 167: lamp_counter_valid_flag = 0;
  3567  0D87  01A8               	clrf	_lamp_counter_valid_flag
  3568                           ;led.c: 168: if(1 == 1) restart_flag = 0x55;
  3569  0D88  3055               	movlw	85
  3570  0D89  1683               	bsf	3,5
  3571  0D8A  00A7               	movwf	_restart_flag^(0+128)
  3572                           ;led.c: 171: usart_rx_write = 0;
  3573  0D8B  1283               	bcf	3,5
  3574  0D8C  1703               	bsf	3,6
  3575  0D8D  01A7               	clrf	_usart_rx_write^(0+256)
  3576                           ;led.c: 172: usart_rx_read = 0;
  3577  0D8E  01A6               	clrf	_usart_rx_read^(0+256)
  3578                           ;led.c: 173: communication_flag = 0;
  3579  0D8F  1683               	bsf	3,5
  3580  0D90  1303               	bcf	3,6	;carry unused
  3581  0D91  01A1               	clrf	_communication_flag^(0+128)
  3582                           ;led.c: 174: communication_counter=0;
  3583  0D92  01A0               	clrf	_communication_counter^(0+128)
  3584                           ;led.c: 175: address_of_lamp = 0xff;
  3585  0D93  30FF               	movlw	-1
  3586  0D94  1283               	bcf	3,5
  3587  0D95  1703               	bsf	3,6
  3588  0D96  00A0               	movwf	_address_of_lamp^(0+256)
  3589                           ;led.c: 177: every_second_update_flag = 0;
  3590  0D97  01A3               	clrf	_every_second_update_flag^(0+256)
  3591                           ;led.c: 178: every_second_update_counter = 0;
  3592  0D98  01A1               	clrf	_every_second_update_counter^(0+256)
  3593                           ;led.c: 179: every_second_update_delay = 0;
  3594  0D99  01A2               	clrf	_every_second_update_delay^(0+256)
  3595                           ;led.c: 180: RC5=1;
  3596  0D9A  1303               	bcf	3,6	;carry unused
  3597  0D9B  1687               	bsf	7,5
  3598                           ;led.c: 182: g_segment_wink_time_counter = 0;;
  3599  0D9C  01A7               	clrf	_g_segment_wink_time_counter
  3600                           ;led.c: 183: g_segment_wink_state_flag = 0;
  3601  0D9D  01A6               	clrf	_g_segment_wink_state_flag
  3602                           ;led.c: 184: g_segment_wink_display_flag = 0;
  3603  0D9E  01A5               	clrf	_g_segment_wink_display_flag
  3604                           ;led.c: 185: g_segment_100ms_counter = 0;
  3605  0D9F  01A1               	clrf	_g_segment_100ms_counter
  3606                           ;led.c: 186: g_segment_afresh_state = 0;
  3607  0DA0  01A4               	clrf	_g_segment_afresh_state
  3608                           ;led.c: 187: g_segment_afresh_counter = 0;
  3609  0DA1  01A2               	clrf	_g_segment_afresh_counter
  3610                           ;led.c: 188: g_segment_afresh_number = 3;
  3611  0DA2  3003               	movlw	3
  3612  0DA3  00A3               	movwf	_g_segment_afresh_number
  3613                           ;led.c: 190: syn_wink_display_state = 0;
  3614  0DA4  01AE               	clrf	_syn_wink_display_state
  3615                           ;led.c: 191: syn_wink_display_updata = 0;
  3616  0DA5  01AF               	clrf	_syn_wink_display_updata
  3617                           ;led.c: 193: RB4=0;
  3618  0DA6  1206               	bcf	6,4
  3619                           ;led.c: 194: RB5=0;
  3620  0DA7  1286               	bcf	6,5
  3621                           ;led.c: 195: RB6=0;
  3622  0DA8  1306               	bcf	6,6
  3623                           ;led.c: 196: }
  3624  0DA9  0008               	return	;W free
  3625  0DAA                     _main
  3626                           ;	_k assigned to ?a_main+0
  3627  0000                     _main$k	set	?a_main
  3628                           ;	_i assigned to ?a_main+1
  3629  0000                     _main$i	set	?a_main+1
  3630                           ;led.c: 1548: void main(void)
  3631  0DAA  1283               	bcf	3,5
  3632  0DAB  1303               	bcf	3,6	;carry unused
  3633  0DAC  01C2               	clrf	?a_main
  3634  0DAD                     l408
  3635                           ;led.c: 1554: {
  3636  0DAD  250B               	fcall	_ioinit
  3637                           ;led.c: 1556: RB4=0;
  3638  0DAE  1206               	bcf	6,4
  3639                           ;led.c: 1557: red_displaying_end();
  3640  0DAF  248C               	fcall	_red_displaying_end
  3641                           ;led.c: 1558: gre_displaying_end();
  3642  0DB0  118A  2125         	fcall	_gre_displaying_end
  3643                           ;led.c: 1559: yel_displaying_end();
  3644  0DB2  118A  219E  158A   	fcall	_yel_displaying_end
  3645                           ;led.c: 1560: for(i=0;i<6000;i++);
  3646  0DB5  01C3               	clrf	?a_main+1
  3647  0DB6  01C4               	clrf	?a_main+2
  3648  0DB7                     l411
  3649  0DB7  0AC3               	incf	?a_main+1
  3650  0DB8  1903               	btfsc	3,2
  3651  0DB9  0AC4               	incf	?a_main+2
  3652  0DBA  3017               	movlw	23
  3653  0DBB  0244               	subwf	?a_main+2,w
  3654  0DBC  3070               	movlw	112
  3655  0DBD  1903               	btfsc	3,2
  3656  0DBE  0243               	subwf	?a_main+1,w
  3657  0DBF  1C03               	btfss	3,0
  3658  0DC0  2DB7               	goto	l411
  3659  0DC1  0AC2               	incf	?a_main
  3660  0DC2  3002               	movlw	2
  3661  0DC3  0242               	subwf	?a_main,w
  3662  0DC4  1C03               	btfss	3,0
  3663  0DC5  2DAD               	goto	l408
  3664                           ;led.c: 1561: }
  3665  0DC6  2414               	fcall	_timer1init
  3666                           ;led.c: 1563: usartinit();
  3667  0DC7  2152               	fcall	_usartinit
  3668                           ;led.c: 1564: address_of_lamp = addr_read();
  3669  0DC8  2146               	fcall	_addr_read
  3670  0DC9  1703               	bsf	3,6
  3671  0DCA  00A0               	movwf	_address_of_lamp^(0+256)
  3672                           ;led.c: 1565: PSA = 0;WDTCON = 0X15;;
  3673  0DCB  1683               	bsf	3,5
  3674  0DCC  1303               	bcf	3,6	;carry unused
  3675  0DCD  1181               	bcf	1,3
  3676  0DCE  3015               	movlw	21
  3677  0DCF  1283               	bcf	3,5
  3678  0DD0  1703               	bsf	3,6
  3679  0DD1  0085               	movwf	5	;volatile
  3680  0DD2                     l415
  3681                           ;led.c: 1567: while(1)
  3682                           ;led.c: 1568: {
  3683  0DD2  1283               	bcf	3,5
  3684  0DD3  1303               	bcf	3,6	;carry unused
  3685  0DD4  0B20               	decfsz	_TFG,w
  3686  0DD5  2DF4               	goto	l417
  3687                           ;led.c: 1570: {
  3688  0DD6  01A0               	clrf	_TFG
  3689                           ;led.c: 1573: wdtcounter++;
  3690  0DD7  1683               	bsf	3,5
  3691  0DD8  0AB0               	incf	_wdtcounter^(0+128)
  3692                           ;led.c: 1575: g_segment_100ms_counter++;
  3693  0DD9  1283               	bcf	3,5
  3694  0DDA  0AA1               	incf	_g_segment_100ms_counter
  3695                           ;led.c: 1577: filterAC_DC();
  3696  0DDB  20FC               	fcall	_filterAC_DC
  3697                           ;led.c: 1578: seek_down_pulse();
  3698  0DDC  118A  22E8  158A   	fcall	_seek_down_pulse
  3699                           ;led.c: 1580: ten_mm_counter++;
  3700  0DDF  1683               	bsf	3,5
  3701  0DE0  0AAF               	incf	_ten_mm_counter^(0+128)
  3702                           ;led.c: 1581: if(ten_mm_counter >= 10)
  3703  0DE1  300A               	movlw	10
  3704  0DE2  022F               	subwf	_ten_mm_counter^(0+128),w
  3705  0DE3  1C03               	btfss	3,0
  3706  0DE4  2DF3               	goto	l418
  3707                           ;led.c: 1582: {
  3708  0DE5  01AF               	clrf	_ten_mm_counter^(0+128)
  3709                           ;led.c: 1584: study_mode_filterAC_DC();
  3710  0DE6  20AB               	fcall	_study_mode_filterAC_DC
  3711                           ;led.c: 1585: study_mode_time_calculation();
  3712  0DE7  216D               	fcall	_study_mode_time_calculation
  3713                           ;led.c: 1586: down_time_display();
  3714  0DE8  118A  2224  158A   	fcall	_down_time_display
  3715                           ;led.c: 1587: lamp_err_state_check();
  3716  0DEB  2062               	fcall	_lamp_err_state_check
  3717                           ;led.c: 1588: if(every_second_update_flag == 1)
  3718  0DEC  1703               	bsf	3,6
  3719  0DED  0B23               	decfsz	_every_second_update_flag^(0+256),w
  3720  0DEE  2DF0               	goto	l419
  3721                           ;led.c: 1589: {
  3722  0DEF  204F               	fcall	_communication_err
  3723  0DF0                     l419
  3724                           ;led.c: 1591: }
  3725  0DF0  118A  241A  158A   	fcall	_g_segment_afresh_analyse
  3726  0DF3                     l418
  3727                           ;led.c: 1593: }
  3728  0DF3  2635               	fcall	_usart_data_analyse
  3729  0DF4                     l417
  3730                           ;led.c: 1595: }
  3731  0DF4  30F0               	movlw	-16
  3732  0DF5  1683               	bsf	3,5
  3733  0DF6  0230               	subwf	_wdtcounter^(0+128),w
  3734  0DF7  1C03               	btfss	3,0
  3735  0DF8  2E09               	goto	l420
  3736                           ;led.c: 1598: {
  3737  0DF9  01B0               	clrf	_wdtcounter^(0+128)
  3738                           ;led.c: 1600: asm("clrwdt");
  3739  0DFA  0064               	clrwdt	;#
  3740                           ;led.c: 1602: if(ledstate == 0)
  3741  0DFB  08A4               	movf	_ledstate^(0+128)
  3742                           ;led.c: 1603: {
  3743  0DFC  1283               	bcf	3,5
  3744  0DFD  1D03               	btfss	3,2
  3745  0DFE  2E04               	goto	L35
  3746  0DFF  1306               	bcf	6,6
  3747                           ;led.c: 1605: ledstate=1;
  3748  0E00  1683               	bsf	3,5
  3749  0E01  01A4               	clrf	_ledstate^(0+128)
  3750  0E02  0AA4               	incf	_ledstate^(0+128)
  3751                           ;led.c: 1606: }
  3752  0E03  2E09               	goto	l420
  3753                           ;led.c: 1607: else
  3754  0E04                     L35
  3755  0E04  1706               	bsf	6,6
  3756                           ;led.c: 1610: ledstate = 0;
  3757  0E05  1683               	bsf	3,5
  3758  0E06  01A4               	clrf	_ledstate^(0+128)
  3759                           ;led.c: 1611: RC5=1;
  3760  0E07  1283               	bcf	3,5
  3761  0E08  1687               	bsf	7,5
  3762  0E09                     l420
  3763                           ;led.c: 1612: }
  3764  0E09  3032               	movlw	50
  3765  0E0A  1283               	bcf	3,5
  3766  0E0B  0221               	subwf	_g_segment_100ms_counter,w
  3767  0E0C  1C03               	btfss	3,0
  3768  0E0D  2DD2               	goto	l415
  3769                           ;led.c: 1617: {
  3770  0E0E  01A1               	clrf	_g_segment_100ms_counter
  3771                           ;led.c: 1619: if((red_displaying_flag == 0)&&(y
      +                          el_displaying_flag == 0)&&(gre_displaying_flag 
      +                          == 0))
  3772  0E0F  1683               	bsf	3,5
  3773  0E10  08A6               	movf	_red_displaying_flag^(0+128)
  3774  0E11  1D03               	btfss	3,2
  3775  0E12  2DD2               	goto	l415
  3776  0E13  08B1               	movf	_yel_displaying_flag^(0+128)
  3777  0E14  1D03               	btfss	3,2
  3778  0E15  2DD2               	goto	l415
  3779  0E16  08A3               	movf	_gre_displaying_flag^(0+128)
  3780  0E17  1D03               	btfss	3,2
  3781  0E18  2DD2               	goto	l415
  3782                           ;led.c: 1620: {
  3783  0E19  118A  250C  158A   	fcall	_G_Segment_Wink
  3784  0E1C  2DD2               	goto	l415
  3785  0E1D                     _addr_write
  3786                           ;	_indata assigned to ?a_addr_write+0
  3787  0000                     _addr_write$indata	set	?a_addr_write
  3788                           ;_indata stored from w
  3789  0E1D  0183               	clrf	3	;select bank 0
  3790  0E1E  00CC               	movwf	?a_addr_write
  3791                           ;led.c: 207: void addr_write(unsigned char inda
      +                          ta)
  3792  0E1F  3010               	movlw	16
  3793  0E20  1703               	bsf	3,6
  3794  0E21  008D               	movwf	13
  3795                           ;led.c: 210: EEDATA = indata;
  3796  0E22  1303               	bcf	3,6	;carry unused
  3797  0E23  084C               	movf	?a_addr_write,w
  3798  0E24  1703               	bsf	3,6
  3799  0E25  008C               	movwf	12	;volatile
  3800                           ;led.c: 211: EEPGD = 0;
  3801  0E26  1683               	bsf	3,5
  3802  0E27  138C               	bcf	12,7
  3803                           ;led.c: 212: WREN = 1;
  3804  0E28  150C               	bsf	12,2
  3805                           ;led.c: 213: GIE = 0;
  3806  0E29  138B               	bcf	11,7
  3807                           ;led.c: 214: EECON2 = 0X55;
  3808  0E2A  3055               	movlw	85
  3809  0E2B  008D               	movwf	13	;volatile
  3810                           ;led.c: 215: EECON2 = 0XAA;
  3811  0E2C  30AA               	movlw	-86
  3812  0E2D  008D               	movwf	13	;volatile
  3813                           ;led.c: 216: WR = 1;
  3814  0E2E  148C               	bsf	12,1
  3815                           ;led.c: 217: GIE = 1;
  3816  0E2F  178B               	bsf	11,7
  3817                           ;led.c: 218: WREN = 0;
  3818  0E30  110C               	bcf	12,2
  3819                           ;led.c: 219: while(WR);
  3820  0E31                     l9
  3821  0E31  188C               	btfsc	12,1
  3822  0E32  2E31               	goto	l9
  3823                           ;led.c: 220: }
  3824  0E33  0183               	clrf	3	;select bank 0
  3825  0E34  0008               	return	;W free
  3826  0E35                     _usart_data_analyse
  3827                           ;	_CheckSum assigned to ?a_usart_data_analyse+0
  3828  0000                     _usart_data_analyse$CheckSum	set	?a_usart_data_
      +                          analyse
  3829                           ;	_TableLength assigned to ?a_usart_data_analys
      +                          e+1
  3830  0000                     _usart_data_analyse$TableLength	set	?a_usart_da
      +                          ta_analyse+1
  3831                           ;	_temp_pointer assigned to ?a_usart_data_analy
      +                          se+2
  3832  0000                     _usart_data_analyse$temp_pointer	set	?a_usart_d
      +                          ata_analyse+2
  3833                           ;	_k assigned to ?a_usart_data_analyse+3
  3834  0000                     _usart_data_analyse$k	set	?a_usart_data_analyse
      +                          +3
  3835                           ;	_down_time assigned to ?a_usart_data_analyse+
      +                          4
  3836  0000                     _usart_data_analyse$down_time	set	?a_usart_data
      +                          _analyse+4
  3837                           ;led.c: 1319: void usart_data_analyse(void)
  3838  0E35  1283               	bcf	3,5
  3839  0E36  1703               	bsf	3,6
  3840  0E37  0826               	movf	_usart_rx_read^(0+256),w
  3841  0E38  0627               	xorwf	_usart_rx_write^(0+256),w
  3842                           ;led.c: 1327: {
  3843  0E39  1303               	bcf	3,6	;carry unused
  3844  0E3A  1903               	btfsc	3,2
  3845  0E3B  0008               	return
  3846  0E3C  01C6               	clrf	?a_usart_data_analyse+1
  3847                           ;led.c: 1329: if((usart_rx_read >= 30)||(usart_
      +                          rx_write >= 30))
  3848  0E3D  301E               	movlw	30
  3849  0E3E  1703               	bsf	3,6
  3850  0E3F  0226               	subwf	_usart_rx_read^(0+256),w
  3851  0E40  1803               	btfsc	3,0
  3852  0E41  2E46               	goto	u1730
  3853  0E42  301E               	movlw	30
  3854  0E43  0227               	subwf	_usart_rx_write^(0+256),w
  3855  0E44  1C03               	btfss	3,0
  3856  0E45  2E49               	goto	l349
  3857  0E46                     u1730
  3858                           ;led.c: 1330: {
  3859  0E46  01A6               	clrf	_usart_rx_read^(0+256)
  3860                           ;led.c: 1332: usart_rx_write = 0;
  3861  0E47  01A7               	clrf	_usart_rx_write^(0+256)
  3862                           ;led.c: 1333: }
  3863  0E48  2E55               	goto	l350
  3864  0E49                     l349
  3865                           ;led.c: 1334: else
  3866  0E49  0827               	movf	_usart_rx_write^(0+256),w
  3867  0E4A  0226               	subwf	_usart_rx_read^(0+256),w
  3868  0E4B  1803               	btfsc	3,0
  3869  0E4C  2E50               	goto	l351
  3870  0E4D  0826               	movf	_usart_rx_read^(0+256),w
  3871  0E4E  0227               	subwf	_usart_rx_write^(0+256),w
  3872  0E4F  2E53               	goto	L31
  3873  0E50                     l351
  3874                           ;led.c: 1337: else TableLength = 30 - (usart_rx
      +                          _read - usart_rx_write);
  3875  0E50  0827               	movf	_usart_rx_write^(0+256),w
  3876  0E51  0226               	subwf	_usart_rx_read^(0+256),w
  3877  0E52  3C1E               	sublw	30
  3878  0E53                     L31
  3879  0E53  1303               	bcf	3,6	;carry unused
  3880  0E54  00C6               	movwf	?a_usart_data_analyse+1
  3881  0E55                     l350
  3882                           ;led.c: 1338: }
  3883  0E55  3005               	movlw	5
  3884  0E56  1303               	bcf	3,6	;carry unused
  3885  0E57  0246               	subwf	?a_usart_data_analyse+1,w
  3886  0E58  1C03               	btfss	3,0
  3887  0E59  2FFE               	goto	l347
  3888                           ;led.c: 1341: {
  3889  0E5A  1703               	bsf	3,6
  3890  0E5B  0826               	movf	_usart_rx_read^(0+256),w
  3891  0E5C  3E3B               	addlw	_usart_rx_buffer^(0+256)
  3892  0E5D  0084               	movwf	4
  3893  0E5E  1783               	bsf	3,7
  3894  0E5F  0800               	movf	0,w
  3895  0E60  3AFE               	xorlw	-2
  3896  0E61  1D03               	btfss	3,2
  3897  0E62  2FF4               	goto	l354
  3898                           ;led.c: 1343: {
  3899  0E63  0826               	movf	_usart_rx_read^(0+256),w
  3900  0E64  1303               	bcf	3,6	;carry unused
  3901  0E65  00C7               	movwf	?a_usart_data_analyse+2
  3902                           ;led.c: 1345: for(k=0;k<5;k++)
  3903  0E66  01C8               	clrf	?a_usart_data_analyse+3
  3904  0E67                     l355
  3905                           ;led.c: 1346: {
  3906  0E67  0847               	movf	?a_usart_data_analyse+2,w
  3907  0E68  3E3B               	addlw	_usart_rx_buffer^(0+256)
  3908  0E69  0084               	movwf	4
  3909  0E6A  1783               	bsf	3,7
  3910  0E6B  0800               	movf	0,w
  3911  0E6C  00CB               	movwf	?a_usart_data_analyse+6
  3912  0E6D  0848               	movf	?a_usart_data_analyse+3,w
  3913  0E6E  3E34               	addlw	_usart_temp_buffer^(0+256)
  3914  0E6F  0084               	movwf	4
  3915  0E70  1783               	bsf	3,7
  3916  0E71  084B               	movf	?a_usart_data_analyse+6,w
  3917  0E72  0080               	movwf	0
  3918                           ;led.c: 1348: temp_pointer++;
  3919  0E73  0AC7               	incf	?a_usart_data_analyse+2
  3920                           ;led.c: 1349: if(temp_pointer >= 30) temp_point
      +                          er = 0;
  3921  0E74  301E               	movlw	30
  3922  0E75  0247               	subwf	?a_usart_data_analyse+2,w
  3923  0E76  1803               	btfsc	3,0
  3924  0E77  01C7               	clrf	?a_usart_data_analyse+2
  3925  0E78  0AC8               	incf	?a_usart_data_analyse+3
  3926  0E79  3005               	movlw	5
  3927  0E7A  0248               	subwf	?a_usart_data_analyse+3,w
  3928  0E7B  1C03               	btfss	3,0
  3929  0E7C  2E67               	goto	l355
  3930                           ;led.c: 1350: }
  3931  0E7D  01C5               	clrf	?a_usart_data_analyse
  3932                           ;led.c: 1353: for(k=1;k<4;k++)
  3933  0E7E  01C8               	clrf	?a_usart_data_analyse+3
  3934  0E7F  0AC8               	incf	?a_usart_data_analyse+3
  3935  0E80                     l359
  3936                           ;led.c: 1354: {
  3937  0E80  0848               	movf	?a_usart_data_analyse+3,w
  3938  0E81  3E34               	addlw	_usart_temp_buffer^(0+256)
  3939  0E82  0084               	movwf	4
  3940  0E83  1783               	bsf	3,7
  3941  0E84  0800               	movf	0,w
  3942  0E85  06C5               	xorwf	?a_usart_data_analyse
  3943  0E86  0AC8               	incf	?a_usart_data_analyse+3
  3944  0E87  3004               	movlw	4
  3945  0E88  0248               	subwf	?a_usart_data_analyse+3,w
  3946  0E89  1C03               	btfss	3,0
  3947  0E8A  2E80               	goto	l359
  3948                           ;led.c: 1356: }
  3949  0E8B  13C5               	bcf	?a_usart_data_analyse,7
  3950                           ;led.c: 1359: if(CheckSum == usart_temp_buffer[
      +                          4])
  3951  0E8C  1703               	bsf	3,6
  3952  0E8D  0838               	movf	(_usart_temp_buffer+4)^(0+256),w
  3953  0E8E  1303               	bcf	3,6	;carry unused
  3954  0E8F  0645               	xorwf	?a_usart_data_analyse,w
  3955  0E90  1D03               	btfss	3,2
  3956  0E91  2FF3               	goto	l362
  3957                           ;led.c: 1360: {
  3958  0E92  309A               	movlw	-102
  3959  0E93  1703               	bsf	3,6
  3960  0E94  0236               	subwf	(_usart_temp_buffer+2)^(0+256),w
  3961  0E95  1803               	btfsc	3,0
  3962  0E96  2FA7               	goto	l363
  3963  0E97  309A               	movlw	-102
  3964  0E98  0237               	subwf	(_usart_temp_buffer+3)^(0+256),w
  3965  0E99  1803               	btfsc	3,0
  3966  0E9A  2FA7               	goto	l363
  3967                           ;led.c: 1362: {
  3968  0E9B  0835               	movf	(_usart_temp_buffer+1)^(0+256),w
  3969  0E9C  39DC               	andlw	-36
  3970  0E9D  0620               	xorwf	_address_of_lamp^(0+256),w
  3971  0E9E  1D03               	btfss	3,2
  3972  0E9F  2FCE               	goto	l390
  3973                           ;led.c: 1364: {
  3974  0EA0  1683               	bsf	3,5
  3975  0EA1  1303               	bcf	3,6	;carry unused
  3976  0EA2  01A1               	clrf	_communication_flag^(0+128)
  3977  0EA3  0AA1               	incf	_communication_flag^(0+128)
  3978                           ;led.c: 1366: communication_counter = 0;
  3979  0EA4  01A0               	clrf	_communication_counter^(0+128)
  3980                           ;led.c: 1368: down_time = ((usart_temp_buffer[2
      +                          ]>>4)&0x0f)*1000;
  3981  0EA5  30E8               	movlw	232
  3982  0EA6  00FB               	movwf	btemp+2
  3983  0EA7  3003               	movlw	3
  3984  0EA8  00FC               	movwf	btemp+3
  3985  0EA9  1283               	bcf	3,5
  3986  0EAA  1703               	bsf	3,6
  3987  0EAB  0E36               	swapf	(_usart_temp_buffer+2)^(0+256),w
  3988  0EAC  390F               	andlw	15
  3989  0EAD  00F9               	movwf	btemp
  3990  0EAE  01FA               	clrf	btemp+1
  3991  0EAF  118A  25BC         	fcall	lwmul
  3992  0EB1  087D               	movf	btemp+4,w
  3993  0EB2  1303               	bcf	3,6	;carry unused
  3994  0EB3  00C9               	movwf	?a_usart_data_analyse+4
  3995  0EB4  087E               	movf	btemp+5,w
  3996  0EB5  00CA               	movwf	?a_usart_data_analyse+5
  3997                           ;led.c: 1369: down_time += (usart_temp_buffer[2
      +                          ]&0x0f)*100;
  3998  0EB6  3064               	movlw	100
  3999  0EB7  00FB               	movwf	btemp+2
  4000  0EB8  01FC               	clrf	btemp+3
  4001  0EB9  1703               	bsf	3,6
  4002  0EBA  0836               	movf	(_usart_temp_buffer+2)^(0+256),w
  4003  0EBB  390F               	andlw	15
  4004  0EBC  00F9               	movwf	btemp
  4005  0EBD  01FA               	clrf	btemp+1
  4006  0EBE  118A  25BC         	fcall	lwmul
  4007  0EC0  087D               	movf	btemp+4,w
  4008  0EC1  1303               	bcf	3,6	;carry unused
  4009  0EC2  07C9               	addwf	?a_usart_data_analyse+4
  4010  0EC3  1803               	btfsc	3,0
  4011  0EC4  0ACA               	incf	?a_usart_data_analyse+5
  4012  0EC5  087E               	movf	btemp+5,w
  4013  0EC6  07CA               	addwf	?a_usart_data_analyse+5
  4014                           ;led.c: 1370: down_time += ((usart_temp_buffer[
      +                          3]>>4)&0x0f)*10;
  4015  0EC7  300A               	movlw	10
  4016  0EC8  00FB               	movwf	btemp+2
  4017  0EC9  01FC               	clrf	btemp+3
  4018  0ECA  1703               	bsf	3,6
  4019  0ECB  0E37               	swapf	(_usart_temp_buffer+3)^(0+256),w
  4020  0ECC  390F               	andlw	15
  4021  0ECD  00F9               	movwf	btemp
  4022  0ECE  01FA               	clrf	btemp+1
  4023  0ECF  118A  25BC  158A   	fcall	lwmul
  4024  0ED2  087D               	movf	btemp+4,w
  4025  0ED3  1303               	bcf	3,6	;carry unused
  4026  0ED4  07C9               	addwf	?a_usart_data_analyse+4
  4027  0ED5  1803               	btfsc	3,0
  4028  0ED6  0ACA               	incf	?a_usart_data_analyse+5
  4029  0ED7  087E               	movf	btemp+5,w
  4030  0ED8  07CA               	addwf	?a_usart_data_analyse+5
  4031                           ;led.c: 1371: down_time += (usart_temp_buffer[3
      +                          ]&0x0f);
  4032  0ED9  1703               	bsf	3,6
  4033  0EDA  0837               	movf	(_usart_temp_buffer+3)^(0+256),w
  4034  0EDB  390F               	andlw	15
  4035  0EDC  1303               	bcf	3,6	;carry unused
  4036  0EDD  07C9               	addwf	?a_usart_data_analyse+4
  4037  0EDE  1803               	btfsc	3,0
  4038  0EDF  0ACA               	incf	?a_usart_data_analyse+5
  4039                           ;led.c: 1372: if((usart_temp_buffer[1]&0x20)!=0
      +                          )
  4040  0EE0  1703               	bsf	3,6
  4041  0EE1  1AB5               	btfsc	(_usart_temp_buffer+1)^(0+256),5
  4042  0EE2  2F3A               	goto	l367
  4043  0EE3  2F52               	goto	l365
  4044                           ;led.c: 1373: {
  4045  0EE4                     l368
  4046                           ;led.c: 1375: {
  4047                           ;led.c: 1377: red_displaying_end();
  4048  0EE4  248C               	fcall	_red_displaying_end
  4049                           ;led.c: 1378: red_displaying_flag = 0;
  4050  0EE5  1683               	bsf	3,5
  4051  0EE6  01A6               	clrf	_red_displaying_flag^(0+128)
  4052                           ;led.c: 1379: gre_displaying_flag=0;
  4053  0EE7  01A3               	clrf	_gre_displaying_flag^(0+128)
  4054                           ;led.c: 1380: yel_displaying_flag=0;
  4055  0EE8  01B1               	clrf	_yel_displaying_flag^(0+128)
  4056                           ;led.c: 1381: display_data[0] = 0;
  4057  0EE9  01BB               	clrf	_display_data^(0+128)
  4058  0EEA  01BC               	clrf	(_display_data+1)^(0+128)
  4059                           ;led.c: 1382: display_data[1] = 0;
  4060  0EEB  01BD               	clrf	(_display_data+2)^(0+128)
  4061  0EEC  01BE               	clrf	(_display_data+3)^(0+128)
  4062                           ;led.c: 1383: display_data[2] = 0;
  4063  0EED  01BF               	clrf	(_display_data+4)^(0+128)
  4064  0EEE  01C0               	clrf	(_display_data+5)^(0+128)
  4065                           ;led.c: 1384: break;
  4066  0EEF  2FCE               	goto	l390
  4067  0EF0                     l369
  4068                           ;led.c: 1385: case 2:
  4069                           ;led.c: 1386: display_data[1] = down_time;
  4070  0EF0  1303               	bcf	3,6	;carry unused
  4071  0EF1  0849               	movf	?a_usart_data_analyse+4,w
  4072  0EF2  1683               	bsf	3,5
  4073  0EF3  00BD               	movwf	(_display_data+2)^(0+128)
  4074  0EF4  1283               	bcf	3,5
  4075  0EF5  084A               	movf	?a_usart_data_analyse+5,w
  4076  0EF6  1683               	bsf	3,5
  4077  0EF7  00BE               	movwf	(_display_data+3)^(0+128)
  4078                           ;led.c: 1387: if(red_displaying_flag == 1)
  4079  0EF8  0B26               	decfsz	_red_displaying_flag^(0+128),w
  4080  0EF9  2EFF               	goto	l370
  4081                           ;led.c: 1388: {
  4082  0EFA  01A6               	clrf	_red_displaying_flag^(0+128)
  4083                           ;led.c: 1390: red_displaying_end();
  4084  0EFB  248C               	fcall	_red_displaying_end
  4085                           ;led.c: 1391: display_data[0] = 0;
  4086  0EFC  1683               	bsf	3,5
  4087  0EFD  01BB               	clrf	_display_data^(0+128)
  4088  0EFE  01BC               	clrf	(_display_data+1)^(0+128)
  4089  0EFF                     l370
  4090                           ;led.c: 1392: }
  4091  0EFF  0B23               	decfsz	_gre_displaying_flag^(0+128),w
  4092  0F00  2FCE               	goto	l390
  4093                           ;led.c: 1394: {
  4094  0F01  01A3               	clrf	_gre_displaying_flag^(0+128)
  4095                           ;led.c: 1396: display_data[2] = 0;
  4096  0F02  01BF               	clrf	(_display_data+4)^(0+128)
  4097  0F03  01C0               	clrf	(_display_data+5)^(0+128)
  4098                           ;led.c: 1397: gre_displaying_end();
  4099  0F04  118A  2125  158A   	fcall	_gre_displaying_end
  4100                           ;led.c: 1398: }
  4101  0F07  2FCE               	goto	l390
  4102  0F08                     l372
  4103                           ;led.c: 1400: case 1:
  4104                           ;led.c: 1401: display_data[2] = down_time;
  4105  0F08  1303               	bcf	3,6	;carry unused
  4106  0F09  0849               	movf	?a_usart_data_analyse+4,w
  4107  0F0A  1683               	bsf	3,5
  4108  0F0B  00BF               	movwf	(_display_data+4)^(0+128)
  4109  0F0C  1283               	bcf	3,5
  4110  0F0D  084A               	movf	?a_usart_data_analyse+5,w
  4111  0F0E  1683               	bsf	3,5
  4112  0F0F  00C0               	movwf	(_display_data+5)^(0+128)
  4113                           ;led.c: 1402: if(red_displaying_flag == 1)
  4114  0F10  0B26               	decfsz	_red_displaying_flag^(0+128),w
  4115  0F11  2F17               	goto	l373
  4116                           ;led.c: 1403: {
  4117  0F12  01A6               	clrf	_red_displaying_flag^(0+128)
  4118                           ;led.c: 1405: red_displaying_end();
  4119  0F13  248C               	fcall	_red_displaying_end
  4120                           ;led.c: 1406: display_data[0] = 0;
  4121  0F14  1683               	bsf	3,5
  4122  0F15  01BB               	clrf	_display_data^(0+128)
  4123  0F16  01BC               	clrf	(_display_data+1)^(0+128)
  4124  0F17                     l373
  4125                           ;led.c: 1407: }
  4126  0F17  0B31               	decfsz	_yel_displaying_flag^(0+128),w
  4127  0F18  2FCE               	goto	l390
  4128                           ;led.c: 1409: {
  4129  0F19  01B1               	clrf	_yel_displaying_flag^(0+128)
  4130                           ;led.c: 1411: display_data[1] = 0;
  4131  0F1A  01BD               	clrf	(_display_data+2)^(0+128)
  4132  0F1B  01BE               	clrf	(_display_data+3)^(0+128)
  4133                           ;led.c: 1412: yel_displaying_end();
  4134  0F1C  118A  219E  158A   	fcall	_yel_displaying_end
  4135                           ;led.c: 1413: }
  4136  0F1F  2FCE               	goto	l390
  4137  0F20                     l375
  4138                           ;led.c: 1415: case 3:
  4139                           ;led.c: 1416: display_data[0] = down_time;
  4140  0F20  1303               	bcf	3,6	;carry unused
  4141  0F21  0849               	movf	?a_usart_data_analyse+4,w
  4142  0F22  1683               	bsf	3,5
  4143  0F23  00BB               	movwf	_display_data^(0+128)
  4144  0F24  1283               	bcf	3,5
  4145  0F25  084A               	movf	?a_usart_data_analyse+5,w
  4146  0F26  1683               	bsf	3,5
  4147  0F27  00BC               	movwf	(_display_data+1)^(0+128)
  4148                           ;led.c: 1417: if(gre_displaying_flag == 1)
  4149  0F28  0B23               	decfsz	_gre_displaying_flag^(0+128),w
  4150  0F29  2F30               	goto	l376
  4151                           ;led.c: 1418: {
  4152  0F2A  01A3               	clrf	_gre_displaying_flag^(0+128)
  4153                           ;led.c: 1420: display_data[2] = 0;
  4154  0F2B  01BF               	clrf	(_display_data+4)^(0+128)
  4155  0F2C  01C0               	clrf	(_display_data+5)^(0+128)
  4156                           ;led.c: 1421: gre_displaying_end();
  4157  0F2D  118A  2125  158A   	fcall	_gre_displaying_end
  4158  0F30                     l376
  4159                           ;led.c: 1422: }
  4160  0F30  1683               	bsf	3,5
  4161  0F31  0B31               	decfsz	_yel_displaying_flag^(0+128),w
  4162  0F32  2FCE               	goto	l390
  4163                           ;led.c: 1424: {
  4164  0F33  01B1               	clrf	_yel_displaying_flag^(0+128)
  4165                           ;led.c: 1426: display_data[1] = 0;
  4166  0F34  01BD               	clrf	(_display_data+2)^(0+128)
  4167  0F35  01BE               	clrf	(_display_data+3)^(0+128)
  4168                           ;led.c: 1427: yel_displaying_end();
  4169  0F36  118A  219E  158A   	fcall	_yel_displaying_end
  4170                           ;led.c: 1428: }
  4171                           ;led.c: 1430: default:
  4172                           ;led.c: 1431: break;
  4173  0F39  2FCE               	goto	l390
  4174  0F3A                     l367
  4175  0F3A  0835               	movf	(_usart_temp_buffer+1)^(0+256),w
  4176  0F3B  3903               	andlw	3
  4177  0F3C  00FB               	movwf	btemp+2
  4178  0F3D  01FC               	clrf	btemp+3
  4179  0F3E  2F4D               	goto	l30009
  4180  0F3F                     l30010
  4181  0F3F  087B               	movf	btemp+2,w
  4182  0F40  3A00               	xorlw	0
  4183  0F41  1903               	btfsc	3,2
  4184  0F42  2EE4               	goto	l368
  4185  0F43  3A01               	xorlw	1
  4186  0F44  1903               	btfsc	3,2
  4187  0F45  2F08               	goto	l372
  4188  0F46  3A03               	xorlw	3
  4189  0F47  1903               	btfsc	3,2
  4190  0F48  2EF0               	goto	l369
  4191  0F49  3A01               	xorlw	1
  4192  0F4A  1903               	btfsc	3,2
  4193  0F4B  2F20               	goto	l375
  4194  0F4C  2FCE               	goto	l390
  4195  0F4D                     l30009
  4196  0F4D  087C               	movf	btemp+3,w
  4197  0F4E  3A00               	xorlw	0
  4198  0F4F  1903               	btfsc	3,2
  4199  0F50  2F3F               	goto	l30010
  4200  0F51  2FCE               	goto	l390
  4201                           ;led.c: 1433: }
  4202  0F52                     l365
  4203                           ;led.c: 1434: else
  4204  0F52  1683               	bsf	3,5
  4205  0F53  1303               	bcf	3,6	;carry unused
  4206  0F54  0B26               	decfsz	_red_displaying_flag^(0+128),w
  4207  0F55  2F5B               	goto	l380
  4208                           ;led.c: 1437: {
  4209  0F56  01A6               	clrf	_red_displaying_flag^(0+128)
  4210                           ;led.c: 1439: red_displaying_end();
  4211  0F57  248C               	fcall	_red_displaying_end
  4212                           ;led.c: 1440: display_data[0] = 0;
  4213  0F58  1683               	bsf	3,5
  4214  0F59  01BB               	clrf	_display_data^(0+128)
  4215  0F5A  01BC               	clrf	(_display_data+1)^(0+128)
  4216  0F5B                     l380
  4217                           ;led.c: 1441: }
  4218  0F5B  0B23               	decfsz	_gre_displaying_flag^(0+128),w
  4219  0F5C  2F63               	goto	l381
  4220                           ;led.c: 1443: {
  4221  0F5D  01A3               	clrf	_gre_displaying_flag^(0+128)
  4222                           ;led.c: 1445: display_data[2] = 0;
  4223  0F5E  01BF               	clrf	(_display_data+4)^(0+128)
  4224  0F5F  01C0               	clrf	(_display_data+5)^(0+128)
  4225                           ;led.c: 1446: gre_displaying_end();
  4226  0F60  118A  2125  158A   	fcall	_gre_displaying_end
  4227  0F63                     l381
  4228                           ;led.c: 1447: }
  4229  0F63  1683               	bsf	3,5
  4230  0F64  0B31               	decfsz	_yel_displaying_flag^(0+128),w
  4231  0F65  2F8D               	goto	l384
  4232                           ;led.c: 1449: {
  4233  0F66  01B1               	clrf	_yel_displaying_flag^(0+128)
  4234                           ;led.c: 1451: display_data[1] = 0;
  4235  0F67  01BD               	clrf	(_display_data+2)^(0+128)
  4236  0F68  01BE               	clrf	(_display_data+3)^(0+128)
  4237                           ;led.c: 1452: yel_displaying_end();
  4238  0F69  118A  219E  158A   	fcall	_yel_displaying_end
  4239                           ;led.c: 1453: }
  4240  0F6C  2F8D               	goto	l384
  4241  0F6D                     l385
  4242                           ;led.c: 1455: {
  4243                           ;led.c: 1457: red_displaying_end();
  4244  0F6D  248C               	fcall	_red_displaying_end
  4245                           ;led.c: 1458: break;
  4246  0F6E  2FCE               	goto	l390
  4247  0F6F                     l386
  4248                           ;led.c: 1459: case 2:
  4249                           ;led.c: 1460: yel_displaying(down_time);
  4250  0F6F  1303               	bcf	3,6	;carry unused
  4251  0F70  0849               	movf	?a_usart_data_analyse+4,w
  4252  0F71  00CC               	movwf	?_yel_displaying
  4253  0F72  084A               	movf	?a_usart_data_analyse+5,w
  4254  0F73  00CD               	movwf	?_yel_displaying+1
  4255  0F74  118A  2164  158A   	fcall	_yel_displaying
  4256  0F77  2F87               	goto	L33
  4257                           ;led.c: 1461: every_second_update_flag = 1;
  4258                           ;led.c: 1462: every_second_update_counter = 0;
  4259                           ;led.c: 1463: every_second_update_delay = 0;
  4260                           ;led.c: 1464: break;
  4261  0F78                     l387
  4262                           ;led.c: 1465: case 1:
  4263                           ;led.c: 1466: gre_displaying(down_time);
  4264  0F78  1303               	bcf	3,6	;carry unused
  4265  0F79  0849               	movf	?a_usart_data_analyse+4,w
  4266  0F7A  00CC               	movwf	?_gre_displaying
  4267  0F7B  084A               	movf	?a_usart_data_analyse+5,w
  4268  0F7C  00CD               	movwf	?_gre_displaying+1
  4269  0F7D  118A  20EB  158A   	fcall	_gre_displaying
  4270  0F80  2F87               	goto	L33
  4271                           ;led.c: 1467: every_second_update_flag = 1;
  4272                           ;led.c: 1468: every_second_update_counter = 0;
  4273                           ;led.c: 1469: every_second_update_delay = 0;
  4274                           ;led.c: 1470: break;
  4275  0F81                     l388
  4276                           ;led.c: 1471: case 3:
  4277                           ;led.c: 1472: red_displaying(down_time);
  4278  0F81  1303               	bcf	3,6	;carry unused
  4279  0F82  0849               	movf	?a_usart_data_analyse+4,w
  4280  0F83  00CC               	movwf	?_red_displaying
  4281  0F84  084A               	movf	?a_usart_data_analyse+5,w
  4282  0F85  00CD               	movwf	?_red_displaying+1
  4283  0F86  2452               	fcall	_red_displaying
  4284  0F87                     L33
  4285                           ;led.c: 1473: every_second_update_flag = 1;
  4286  0F87  1703               	bsf	3,6
  4287  0F88  01A3               	clrf	_every_second_update_flag^(0+256)
  4288  0F89  0AA3               	incf	_every_second_update_flag^(0+256)
  4289                           ;led.c: 1474: every_second_update_counter = 0;
  4290  0F8A  01A1               	clrf	_every_second_update_counter^(0+256)
  4291                           ;led.c: 1475: every_second_update_delay = 0;
  4292  0F8B  01A2               	clrf	_every_second_update_delay^(0+256)
  4293                           ;led.c: 1476: break;
  4294                           ;led.c: 1477: default:
  4295                           ;led.c: 1478: break;
  4296  0F8C  2FCE               	goto	l390
  4297  0F8D                     l384
  4298  0F8D  1283               	bcf	3,5
  4299  0F8E  1703               	bsf	3,6
  4300  0F8F  0835               	movf	(_usart_temp_buffer+1)^(0+256),w
  4301  0F90  3903               	andlw	3
  4302  0F91  00FB               	movwf	btemp+2
  4303  0F92  01FC               	clrf	btemp+3
  4304  0F93  2FA2               	goto	l30011
  4305  0F94                     l30012
  4306  0F94  087B               	movf	btemp+2,w
  4307  0F95  3A00               	xorlw	0
  4308  0F96  1903               	btfsc	3,2
  4309  0F97  2F6D               	goto	l385
  4310  0F98  3A01               	xorlw	1
  4311  0F99  1903               	btfsc	3,2
  4312  0F9A  2F78               	goto	l387
  4313  0F9B  3A03               	xorlw	3
  4314  0F9C  1903               	btfsc	3,2
  4315  0F9D  2F6F               	goto	l386
  4316  0F9E  3A01               	xorlw	1
  4317  0F9F  1903               	btfsc	3,2
  4318  0FA0  2F81               	goto	l388
  4319  0FA1  2FCE               	goto	l390
  4320  0FA2                     l30011
  4321  0FA2  087C               	movf	btemp+3,w
  4322  0FA3  3A00               	xorlw	0
  4323  0FA4  1903               	btfsc	3,2
  4324  0FA5  2F94               	goto	l30012
  4325                           ;led.c: 1480: }
  4326  0FA6  2FCE               	goto	l390
  4327  0FA7                     l363
  4328                           ;led.c: 1483: else
  4329  0FA7  0836               	movf	(_usart_temp_buffer+2)^(0+256),w
  4330  0FA8  3AAA               	xorlw	-86
  4331  0FA9  1D03               	btfss	3,2
  4332  0FAA  2FB6               	goto	l391
  4333  0FAB  0837               	movf	(_usart_temp_buffer+3)^(0+256),w
  4334  0FAC  3ABB               	xorlw	-69
  4335  0FAD  1D03               	btfss	3,2
  4336  0FAE  2FB6               	goto	l391
  4337                           ;led.c: 1486: {
  4338  0FAF  0835               	movf	(_usart_temp_buffer+1)^(0+256),w
  4339  0FB0  39DC               	andlw	-36
  4340  0FB1  261D               	fcall	_addr_write
  4341                           ;led.c: 1488: address_of_lamp = usart_temp_buff
      +                          er[1]&0xdc;
  4342  0FB2  1703               	bsf	3,6
  4343  0FB3  0835               	movf	(_usart_temp_buffer+1)^(0+256),w
  4344  0FB4  39DC               	andlw	-36
  4345  0FB5  00A0               	movwf	_address_of_lamp^(0+256)
  4346  0FB6                     l391
  4347                           ;led.c: 1489: }
  4348  0FB6  0836               	movf	(_usart_temp_buffer+2)^(0+256),w
  4349  0FB7  3ACC               	xorlw	-52
  4350  0FB8  1D03               	btfss	3,2
  4351  0FB9  2FCE               	goto	l390
  4352  0FBA  0837               	movf	(_usart_temp_buffer+3)^(0+256),w
  4353  0FBB  3ADD               	xorlw	-35
  4354  0FBC  1D03               	btfss	3,2
  4355  0FBD  2FCE               	goto	l390
  4356  0FBE  08B5               	movf	(_usart_temp_buffer+1)^(0+256)
  4357  0FBF  1D03               	btfss	3,2
  4358  0FC0  2FCE               	goto	l390
  4359                           ;led.c: 1491: {
  4360  0FC1  2146               	fcall	_addr_read
  4361  0FC2  1703               	bsf	3,6
  4362  0FC3  00A0               	movwf	_address_of_lamp^(0+256)
  4363                           ;led.c: 1493: communication_flag = 1;
  4364  0FC4  1683               	bsf	3,5
  4365  0FC5  1303               	bcf	3,6	;carry unused
  4366  0FC6  01A1               	clrf	_communication_flag^(0+128)
  4367  0FC7  0AA1               	incf	_communication_flag^(0+128)
  4368                           ;led.c: 1494: red_displaying(address_of_lamp);
  4369  0FC8  1283               	bcf	3,5
  4370  0FC9  1703               	bsf	3,6
  4371  0FCA  1303               	bcf	3,6	;carry unused
  4372  0FCB  00CC               	movwf	?_red_displaying
  4373  0FCC  01CD               	clrf	?_red_displaying+1
  4374  0FCD  2452               	fcall	_red_displaying
  4375  0FCE                     l390
  4376                           ;led.c: 1495: }
  4377  0FCE  1283               	bcf	3,5
  4378  0FCF  1303               	bcf	3,6	;carry unused
  4379  0FD0  0847               	movf	?a_usart_data_analyse+2,w
  4380  0FD1  1703               	bsf	3,6
  4381  0FD2  0226               	subwf	_usart_rx_read^(0+256),w
  4382  0FD3  1803               	btfsc	3,0
  4383  0FD4  2FD9               	goto	l393
  4384  0FD5  0826               	movf	_usart_rx_read^(0+256),w
  4385  0FD6  1303               	bcf	3,6	;carry unused
  4386  0FD7  0247               	subwf	?a_usart_data_analyse+2,w
  4387  0FD8  2FDF               	goto	L30
  4388  0FD9                     l393
  4389                           ;led.c: 1499: else TableLength = 30 - (usart_rx
      +                          _read - temp_pointer);
  4390  0FD9  1303               	bcf	3,6	;carry unused
  4391  0FDA  0847               	movf	?a_usart_data_analyse+2,w
  4392  0FDB  1703               	bsf	3,6
  4393  0FDC  0226               	subwf	_usart_rx_read^(0+256),w
  4394  0FDD  3C1E               	sublw	30
  4395  0FDE  1303               	bcf	3,6	;carry unused
  4396  0FDF                     L30
  4397  0FDF  00C6               	movwf	?a_usart_data_analyse+1
  4398                           ;led.c: 1500: for(k=0;k<TableLength;k++)
  4399  0FE0  01C8               	clrf	?a_usart_data_analyse+3
  4400  0FE1                     l398
  4401  0FE1  0846               	movf	?a_usart_data_analyse+1,w
  4402  0FE2  0248               	subwf	?a_usart_data_analyse+3,w
  4403  0FE3  1803               	btfsc	3,0
  4404  0FE4  2FFE               	goto	l347
  4405                           ;led.c: 1501: {
  4406  0FE5  1703               	bsf	3,6
  4407  0FE6  0826               	movf	_usart_rx_read^(0+256),w
  4408  0FE7  3E3B               	addlw	_usart_rx_buffer^(0+256)
  4409  0FE8  0084               	movwf	4
  4410  0FE9  1783               	bsf	3,7
  4411  0FEA  0180               	clrf	0
  4412                           ;led.c: 1503: usart_rx_read++;
  4413  0FEB  0AA6               	incf	_usart_rx_read^(0+256)
  4414                           ;led.c: 1504: if(usart_rx_read >= 30) usart_rx_
      +                          read = 0;
  4415  0FEC  301E               	movlw	30
  4416  0FED  0226               	subwf	_usart_rx_read^(0+256),w
  4417  0FEE  1803               	btfsc	3,0
  4418  0FEF  01A6               	clrf	_usart_rx_read^(0+256)
  4419  0FF0  1303               	bcf	3,6	;carry unused
  4420  0FF1  0AC8               	incf	?a_usart_data_analyse+3
  4421  0FF2  2FE1               	goto	l398
  4422                           ;led.c: 1505: }
  4423  0FF3                     l362
  4424                           ;led.c: 1507: else
  4425  0FF3  1703               	bsf	3,6
  4426                           ;led.c: 1510: usart_rx_read++;
  4427                           ;led.c: 1511: if(usart_rx_read >= 30) usart_rx_
      +                          read = 0;
  4428                           ;led.c: 1512: }
  4429  0FF4                     l354
  4430                           ;led.c: 1514: else
  4431  0FF4  0826               	movf	_usart_rx_read^(0+256),w
  4432  0FF5  3E3B               	addlw	_usart_rx_buffer^(0+256)
  4433  0FF6  0084               	movwf	4
  4434  0FF7  1783               	bsf	3,7
  4435  0FF8  0180               	clrf	0
  4436                           ;led.c: 1517: usart_rx_read++;
  4437  0FF9  0AA6               	incf	_usart_rx_read^(0+256)
  4438                           ;led.c: 1518: if(usart_rx_read >= 30) usart_rx_
      +                          read = 0;
  4439  0FFA  301E               	movlw	30
  4440  0FFB  0226               	subwf	_usart_rx_read^(0+256),w
  4441  0FFC  1803               	btfsc	3,0
  4442  0FFD  01A6               	clrf	_usart_rx_read^(0+256)
  4443                           ;led.c: 1519: }
  4444  0FFE                     l347
  4445  0FFE  1303               	bcf	3,6	;carry unused
  4446  0FFF  0008               	return	;W free
  4447                           
  4448                           	psect	text28
  4449  0000                     
  4450  0000                     
  4451  0000                     
  4452  0000                     
  4453  0000                     
  4454  0000                     
  4455  0000                     
  4456  0000                     
  4457  0000                     
  4458  0000                     
  4459  0000                     
  4460  0000                     
  4461  0000                     
  4462  0000                     
  4463  0000                     
  4464  0000                     
  4465  0000                     
  4466  0000                     
  4467  0000                     
  4468  0000                     
  4469  0000                     
  4470  0000                     
  4471  0000                     
  4472  0000                     
  4473  0000                     
  4474  0000                     
  4475  0000                     
  4476  0000                     
  4477  0000                     
  4478  0000                     
  4479  0000                     
  4480  0000                     
  4481  0000                     
  4482  0000                     
  4483  0000                     
  4484  0000                     
  4485  0000                     
  4486  0000                     
  4487  0000                     
  4488  0000                     
  4489  0000                     
  4490  0000                     
  4491  0000                     
  4492  0000                     
  4493  0000                     
  4494  0000                     
  4495  0000                     
  4496  0000                     
  4497  0000                     
  4498  0000                     
  4499  0000                     
  4500  0000                     
  4501  0000                     
  4502  0000                     
  4503  0000                     
  4504  0000                     
  4505  0000                     
  4506  0000                     
  4507  0000                     
  4508  0000                     
  4509  0000                     
  4510  0000                     
  4511  0000                     
  4512  0000                     
  4513  0000                     
  4514  0000                     
  4515  0000                     
  4516  0000                     
  4517  0000                     
  4518  0000                     
  4519  0000                     
  4520  0000                     
  4521  0000                     
  4522  0000                     
  4523  0000                     
  4524  0000                     
  4525  0000                     
  4526  0000                     
  4527  0000                     
  4528  0000                     
  4529  0000                     
  4530  0000                     
  4531  0000                     
  4532  0000                     
  4533  0000                     
  4534  0000                     
  4535  0000                     
  4536  0000                     
  4537  0000                     
  4538  0000                     
  4539  0000                     
  4540  0000                     
  4541  0000                     
  4542  0000                     
  4543  0000                     
  4544  0000                     
  4545  0000                     
  4546  0000                     
  4547  0000                     
  4548  0000                     
  4549  0000                     
  4550  0000                     
  4551  0000                     
  4552  0000                     
  4553  0000                     
  4554  0000                     
  4555  0000                     
  4556  0000                     
  4557  0000                     
  4558  0000                     
  4559  0000                     
  4560  0000                     
  4561  0000                     
  4562  0000                     
  4563  0000                     
  4564  0000                     
  4565  0000                     
  4566  0000                     
  4567  0000                     
  4568  0000                     
  4569  0000                     
  4570  0000                     
  4571  0000                     
  4572  0000                     
  4573  0000                     
  4574  0000                     
  4575  0000                     
  4576  0000                     
  4577  0000                     
  4578  0000                     
  4579  0000                     
  4580  0000                     
  4581  0000                     
  4582  0000                     
  4583  0000                     
  4584  0000                     
  4585  0000                     
  4586  0000                     
  4587  0000                     
  4588  0000                     
  4589  0000                     
  4590  0000                     
  4591  0000                     
  4592  0000                     
  4593  0000                     
  4594  0000                     
  4595  0000                     
  4596  0000                     
  4597  0000                     
  4598  0000                     
  4599  0000                     
  4600  0000                     
  4601  0000                     
  4602  0000                     
  4603  0000                     
  4604  0000                     
  4605  0000                     
  4606  0000                     
  4607  0000                     
  4608  0000                     
  4609  0000                     
  4610  0000                     
  4611  0000                     
  4612  0000                     
  4613  0000                     
  4614  0000                     
  4615  0000                     
  4616  0000                     
  4617  0000                     
  4618  0000                     
  4619  0000                     
  4620  0000                     
  4621  0000                     
  4622  0000                     
  4623  0000                     
  4624  0000                     
  4625  0000                     
  4626  0000                     
  4627  0000                     
  4628  0000                     
  4629  0000                     
  4630  0000                     
  4631  0000                     
  4632  0000                     
  4633  0000                     
  4634  0000                     
  4635  0000                     
  4636  0000                     
  4637  0000                     
  4638  0000                     
  4639  0000                     
  4640  0000                     
  4641  0000                     
  4642  0000                     
  4643  0000                     
  4644  0000                     
  4645  0000                     
  4646  0000                     
  4647  0000                     
  4648  0000                     
  4649  0000                     
  4650  0000                     
  4651  0000                     
  4652  0000                     
  4653  0000                     
  4654  0000                     
  4655  0000                     
  4656  0000                     
  4657  0000                     
  4658  0000                     
  4659  0000                     
  4660  0000                     
  4661  0000                     
  4662  0000                     
  4663  0000                     
  4664  0000                     
  4665  0000                     
  4666  0000                     
  4667  0000                     
  4668  0000                     
  4669  0000                     
  4670  0000                     
  4671  0000                     
  4672  0000                     
  4673  0000                     
  4674  0000                     
  4675  0000                     
  4676  0000                     
  4677  0000                     
  4678  0000                     
  4679  0000                     
  4680  0000                     
  4681  0000                     
  4682  0000                     
  4683  0000                     
  4684  0000                     
  4685  0000                     
  4686  0000                     
  4687  0000                     
  4688  0000                     
  4689  0000                     
  4690  0000                     
  4691  0000                     
  4692  0000                     
  4693  0000                     
  4694  0000                     
  4695  0000                     
  4696  0000                     
  4697  0000                     
  4698  0000                     
  4699  0000                     
  4700  0000                     
  4701  0000                     
  4702  0000                     
  4703  0000                     
  4704  0000                     
  4705  0000                     
  4706  0000                     
  4707  0000                     
  4708  0000                     
  4709  0000                     
  4710  0000                     
  4711  0000                     
  4712  0000                     
  4713  0000                     
  4714  0000                     
  4715  0000                     
  4716  0000                     
  4717  0000                     
  4718  0000                     
  4719  0000                     
  4720  0000                     
  4721  0000                     
  4722  0000                     
  4723  0000                     
  4724  0000                     
  4725  0000                     
  4726  0000                     
  4727  0000                     
  4728  0000                     
  4729  0000                     
  4730  0000                     
  4731  0000                     
  4732  0000                     
  4733  0000                     
  4734  0000                     
  4735  0000                     
  4736  0000                     
  4737  0000                     
  4738  0000                     
  4739  0000                     
  4740  0000                     
  4741  0000                     
  4742  0000                     
  4743  0000                     
  4744  0000                     
  4745  0000                     
  4746  0000                     
  4747  0000                     
  4748  0000                     
  4749  0000                     
  4750  0000                     
  4751  0000                     
  4752  0000                     
  4753  0000                     
  4754  0000                     
  4755  0000                     
  4756  0000                     
  4757  0000                     
  4758  0000                     
  4759  0000                     
  4760  0000                     
  4761  0000                     
  4762  0000                     
  4763  0000                     
  4764  0000                     
  4765  0000                     
  4766  0000                     
  4767  0000                     
  4768  0000                     
  4769  0000                     
  4770  0000                     
  4771  0000                     
  4772  0000                     
  4773  0000                     
  4774  0000                     
  4775  0000                     
  4776  0000                     
  4777  0000                     
  4778  0000                     
  4779  0000                     
  4780  0000                     
  4781  0000                     
  4782  0000                     
  4783  0000                     
  4784  0000                     
  4785  0000                     
  4786  0000                     
  4787  0000                     
  4788  0000                     
  4789  0000                     
  4790  0000                     
  4791  0000                     
  4792  0000                     
  4793  0000                     
  4794  0000                     
  4795  0000                     
  4796  0000                     
  4797  0000                     
  4798  0000                     
  4799  0000                     
  4800  0000                     
  4801  0000                     
  4802  0000                     
  4803  0000                     
  4804  0000                     
  4805  0000                     
  4806  0000                     
  4807  0000                     
  4808  0000                     
  4809  0000                     
  4810  0000                     
  4811  0000                     
  4812  0000                     
  4813  0000                     
  4814  0000                     
  4815  0000                     
  4816  0000                     
  4817  0000                     
  4818  0000                     
  4819  0000                     
  4820  0000                     
  4821  0000                     
  4822  0000                     
  4823  0000                     
  4824                           
  4825                           	psect	rbss_0
  4826  0020                     _TFG
                     _TFG
  4827  0020                     	ds	1
  4828  0000                     
  4829  0000                     
  4830  0000                     
  4831  0000                     
  4832  0000                     
  4833  0000                     
  4834  0000                     
  4835  0000                     
  4836  0000                     
  4837  0000                     
  4838  0000                     
  4839  0000                     
  4840  0000                     
  4841  0021                     _g_segment_100ms_counter
                     _g_segment_100ms_counter
  4842  0021                     	ds	1
  4843  0022                     _g_segment_afresh_counter
                     _g_segment_afresh_counter
  4844  0022                     	ds	1
  4845  0023                     _g_segment_afresh_number
                     _g_segment_afresh_number
  4846  0023                     	ds	1
  4847  0024                     _g_segment_afresh_state
                     _g_segment_afresh_state
  4848  0024                     	ds	1
  4849  0025                     _g_segment_wink_display_flag
                     _g_segment_wink_display_flag
  4850  0025                     	ds	1
  4851  0026                     _g_segment_wink_state_flag
                     _g_segment_wink_state_flag
  4852  0026                     	ds	1
  4853  0027                     _g_segment_wink_time_counter
                     _g_segment_wink_time_counter
  4854  0027                     	ds	1
  4855  0028                     _lamp_counter_valid_flag
                     _lamp_counter_valid_flag
  4856  0028                     	ds	1
  4857  0029                     _lamp_off_flag
                     _lamp_off_flag
  4858  0029                     	ds	1
  4859  002A                     _lamp_on_flag
                     _lamp_on_flag
  4860  002A                     	ds	1
  4861  002B                     _lamp_stab_state
                     _lamp_stab_state
  4862  002B                     	ds	1
  4863  002C                     _lamp_temp_state
                     _lamp_temp_state
  4864  002C                     	ds	1
  4865  002D                     _no_lamp_on_counter
                     _no_lamp_on_counter
  4866  002D                     	ds	1
  4867  002E                     _syn_wink_display_state
                     _syn_wink_display_state
  4868  002E                     	ds	1
  4869  002F                     _syn_wink_display_updata
                     _syn_wink_display_updata
  4870  002F                     	ds	1
  4871  0030                     _lamp_chge_counter
                     _lamp_chge_counter
  4872  0030                     	ds	3
  4873  0033                     _lamp_off_time
                     _lamp_off_time
  4874  0033                     	ds	3
  4875  0036                     _lamp_off_counter
                     _lamp_off_counter
  4876  0036                     	ds	6
  4877  003C                     _lamp_on_counter
                     _lamp_on_counter
  4878  003C                     	ds	6
  4879                           
  4880                           	psect	rbss_2
  4881  0120                     _address_of_lamp
                     _address_of_lamp
  4882  0120                     	ds	1
  4883  0121                     _every_second_update_counter
                     _every_second_update_counter
  4884  0121                     	ds	1
  4885  0122                     _every_second_update_delay
                     _every_second_update_delay
  4886  0122                     	ds	1
  4887  0123                     _every_second_update_flag
                     _every_second_update_flag
  4888  0123                     	ds	1
  4889  0124                     _pulse_down_time_valid_flag
                     _pulse_down_time_valid_flag
  4890  0124                     	ds	1
  4891  0125                     _pulse_study_time_flag
                     _pulse_study_time_flag
  4892  0125                     	ds	1
  4893  0126                     _usart_rx_read
                     _usart_rx_read
  4894  0126                     	ds	1
  4895  0127                     _usart_rx_write
                     _usart_rx_write
  4896  0127                     	ds	1
  4897  0128                     _pulse_down_times
                     _pulse_down_times
  4898  0128                     	ds	6
  4899  012E                     _pulse_study_time_counter
                     _pulse_study_time_counter
  4900  012E                     	ds	6
  4901  0134                     _usart_temp_buffer
                     _usart_temp_buffer
  4902  0134                     	ds	7
  4903  013B                     _usart_rx_buffer
                     _usart_rx_buffer
  4904  013B                     	ds	30
  4905                           
  4906                           	psect	rbss_1
  4907  00A0                     _communication_counter
                     _communication_counter
  4908  00A0                     	ds	1
  4909  00A1                     _communication_flag
                     _communication_flag
  4910  00A1                     	ds	1
  4911  00A2                     _displaying_second_counter
                     _displaying_second_counter
  4912  00A2                     	ds	1
  4913  00A3                     _gre_displaying_flag
                     _gre_displaying_flag
  4914  00A3                     	ds	1
  4915  00A4                     _ledstate
                     _ledstate
  4916  00A4                     	ds	1
  4917  00A5                     _pulse_to_study
                     _pulse_to_study
  4918  00A5                     	ds	1
  4919  00A6                     _red_displaying_flag
                     _red_displaying_flag
  4920  00A6                     	ds	1
  4921  00A7                     _restart_flag
                     _restart_flag
  4922  00A7                     	ds	1
  4923  00A8                     _sametime_on_counter
                     _sametime_on_counter
  4924  00A8                     	ds	1
  4925  00A9                     _study_lamp_stab_state
                     _study_lamp_stab_state
  4926  00A9                     	ds	1
  4927  00AA                     _study_or_pulse_mode
                     _study_or_pulse_mode
  4928  00AA                     	ds	1
  4929  00AB                     _study_time_flag
                     _study_time_flag
  4930  00AB                     	ds	1
  4931  00AC                     _study_time_valid_flag
                     _study_time_valid_flag
  4932  00AC                     	ds	1
  4933  00AD                     _study_to_pulse
                     _study_to_pulse
  4934  00AD                     	ds	1
  4935  00AE                     _study_to_pulse_flag
                     _study_to_pulse_flag
  4936  00AE                     	ds	1
  4937  00AF                     _ten_mm_counter
                     _ten_mm_counter
  4938  00AF                     	ds	1
  4939  00B0                     _wdtcounter
                     _wdtcounter
  4940  00B0                     	ds	1
  4941  00B1                     _yel_displaying_flag
                     _yel_displaying_flag
  4942  00B1                     	ds	1
  4943  00B2                     _study_chge_counter
                     _study_chge_counter
  4944  00B2                     	ds	3
  4945  00B5                     _current_study_counter
                     _current_study_counter
  4946  00B5                     	ds	6
  4947  00BB                     _display_data
                     _display_data
  4948  00BB                     	ds	6
  4949  00C1                     _previous_study_counter
                     _previous_study_counter
  4950  00C1                     	ds	6
  4951                           
  4952                           	psect	temp
  4953  0079                     btemp
                     btemp
  4954  0079                     	ds	6


HI-TECH Software PICC Macro Assembler V9.60
Symbol Table                                          Fri Feb 06 19:49:52 2015

                        ?a_filterAC_DC 0045  
                _study_time_valid_flag 00AC  
                               ?a_main 0042  
                                    l2 0D29  
                                    l9 0E31  
              _g_segment_100ms_counter 0021  
           ?a_g_segment_afresh_analyse 0045  
                                    pc 0002  
                         _restart_flag 00A7  
          _study_mode_time_calculation 096D  
                       _red_displaying 0C52  
                       _red_displaydrv 0C23  
                                   l20 0C3C  
                                   l30 014C  
                                   l31 014D  
                                   l23 0C43  
                                   l15 0C2C  
                                   l32 014E  
                                   l42 00D3  
                                   l18 0C3A  
                                   l51 0C5C  
                                   l43 00D4  
                                   l35 0155  
                                   l27 013E  
                                   l19 0C3B  
                                   l44 00D5  
                                   l62 016E  
                                   l54 0C85  
                                   l47 00DC  
                                   l39 00C5  
                                   l80 012E  
                                   l73 00F5  
                                   l65 0197  
                                   l90 0CBE  
                                   l58 0C95  
                                   l91 0CD7  
                                   l76 011E  
                                   l85 0D00  
                                   l69 01A7  
                                   l94 0CDE  
                                   l86 0C9F  
                                   l95 0CF7  
                                   l87 0CB7  
                                   l98 0CFE  
               _g_segment_afresh_state 0024  
                                   fsr 0004  
                 ?a_usart_data_analyse 0045  
                                  l101 01EE  
                                  l102 01EA  
                                  l103 01D2  
                                  l112 020C  
                                  l104 01E7  
                                  l113 0221  
                                  l105 01DE  
                                  l114 0218  
                                  l131 0270  
                                  l123 0241  
                                  l212 08E8  
                                  l204 03EE  
                                  l108 01F9  
                                  l213 08CF  
                                  l230 09C0  
                                  l222 0975  
                                  l134 026F  
                                  l126 0240  
                                  l311 0559  
                                  l231 09BF  
                                  l207 08FA  
                                  l143 0287  
                                  l312 0567  
                                  l216 08E0  
                                  l208 08F6  
                                  l136 0298  
                                  l128 0254  
                                  l321 0437  
                                  l313 0564  
                                  l305 0557  
                                  l233 09BD  
                                  l209 08B9  
                                  l153 02AE  
                                  l137 0295  
                                  l330 04B8  
                                  l322 0432  
                                  l306 054C  
                                  l250 0B38  
                                  l226 0A54  
                                  l146 02BF  
                                  l411 0DB7  
                                  l323 0434  
                                  l235 09C9  
                                  l219 08ED  
                                  l171 0935  
                                  l163 02D5  
                                  l147 02BC  
                  _study_to_pulse_flag 00AE  
                                  l420 0E09  
                                  l404 0860  
                                  l228 09AE  
                                  l172 0922  
                                  l156 02E6  
                                  l333 04AE  
                                  l309 0554  
                                  l261 0B23  
                                  l245 0A36  
                                  l157 02E3  
                                  l350 0E55  
                                  l342 002C  
                                  l334 04A6  
                                  l318 043E  
                                  l182 0412  
                                  l415 0DD2  
                                  l351 0E50  
                                  l343 0017  
                                  l335 04A8  
                                  l247 0A78  
                                  l239 09ED  
                                  l183 03DD  
                                  l167 0942  
                                  l408 0DAD  
                                  l336 04AB  
                                  l280 0868  
                                  l264 0B47  
                                  l184 03BE  
                                  l168 090D  
                                  l417 0DF4  
                                  l273 0BD8  
                                  l249 0BF4  
                                  l193 036B  
                                  l185 03B5  
                                  l418 0DF3  
                                  l370 0EFF  
                                  l362 0FF3  
                                  l354 0FF4  
                                  l266 0B53  
                                  l419 0DF0  
                                  l347 0FFE  
                                  l363 0FA7  
                                  l355 0E67  
                                  l291 08A8  
                                  l275 0C0B  
                                  l259 0B07  
                                  l195 0347  
                                  l187 0384  
                                  l179 02EC  
                                  l380 0F5B  
                                  l372 0F08  
                                  l276 0C09  
                                  l268 0B61  
                                  l381 0F63  
                                  l373 0F17  
                                  l365 0F52  
                                  l349 0E49  
                                  l285 088F  
                                  l197 0391  
                                  l390 0FCE  
                                  l294 0515  
                                  l198 038E  
                                  l391 0FB6  
                                  l375 0F20  
                                  l367 0F3A  
                                  l359 0E80  
                                  l279 08A9  
                                  l384 0F8D  
                                  l376 0F30  
                                  l368 0EE4  
                                  l393 0FD9  
                                  l385 0F6D  
                                  l369 0EF0  
                                  l297 0540  
                                  l289 0883  
                                  l386 0F6F  
                                  l298 0539  
                                  l387 0F78  
                                  l299 0538  
                                  l388 0F81  
                                  l398 0FE1  
                             _ledstate 00A4  
                                  u274 01B8  
                                  u275 01B6  
                                  _ISR 000D  
                                  _TFG 0020  
                                  u895 0989  
                             ?a_ioinit 0045  
              _g_segment_afresh_number 0023  
                       _usart_rx_write 0127  
                     _pulse_down_times 0128  
            _every_second_update_delay 0122  
                _pulse_study_time_flag 0125  
                           _wdtcounter 00B0  
          _every_second_update_counter 0121  
             _g_segment_afresh_analyse 041A  
          _g_segment_wink_display_flag 0025  
                                 f4603 004E  
                                 f4613 0047  
                                 f4543 0051  
                                 f4713 004B  
                                 f4633 0048  
                                 f4643 0048  
                                 f4563 0051  
                                 f4663 0049  
                                 f4583 0051  
                                 f4683 0048  
                                 f4693 0045  
             _g_segment_afresh_counter 0022  
            _g_segment_wink_state_flag 0026  
                      _usart_rx_buffer 013B  
                                 u1135 0AB2  
                                 u1405 052A  
                                 u1265 0B87  
                                 u1730 0E46  
                                 u1645 04E1  
                                 u1585 0467  
                     ?a_red_displaying 004E  
                     ?a_red_displaydrv 0055  
                    ?a_seek_down_pulse 0045  
                               _ioinit 0D0B  
        ?a_study_mode_time_calculation 0045  
                 ?a_yel_displaying_end 004D  
                   _gre_displaying_end 0125  
                                 _main 0DAA  
                    ?a_syn_wink_manage 0045  
                                 btemp 0079  
                                 lbdiv 004C  
                                 lbmod 004C  
                             _GREWORDS 05A4  
                                 lwdiv 0082  
                      ?_red_displaying 004C  
                                 lwmul 05BC  
                      ?_red_displaydrv 0053  
                                 start 0035  
                    _communication_err 084F  
                               saved_w 0078  
                             _REDWORDS 0572  
              _lamp_counter_valid_flag 0028  
                 ?a_red_displaying_end 004D  
                       _yel_displaying 0164  
                       _yel_displaydrv 0135  
                       _pulse_to_study 00A5  
               _study_mode_filterAC_DC 08AB  
                             int_entry 0004  
                                l30010 0F3F  
                                l30011 0FA2  
                                l30003 08A4  
                                l30012 0F94  
                                l30004 0896  
                                l30009 0F4D  
                             _YELWORDS 058B  
                         _display_data 00BB  
             _pulse_study_time_counter 012E  
                         ?a_addr_write 004C  
                      _study_time_flag 00AB  
             ?a_study_mode_filterAC_DC 0045  
                        _usart_rx_read 0126  
                             saved_fsr 005A  
                       _gre_displaying 00EB  
                       _gre_displaydrv 00BC  
                    _lamp_chge_counter 0030  
               ?a_g_segment_displaying 004C  
                       _G_Segment_Wink 050C  
                      _lamp_on_counter 003C  
                  _gre_displaying_flag 00A3  
            _displaying_second_counter 00A2  
                     ?a_yel_displaying 004E  
                     ?a_yel_displaydrv 0055  
                    _down_time_display 0224  
                          saved_pclath 005B  
                            _usartinit 0952  
                   _usart_data_analyse 0E35  
                                pclath 000A  
                   _study_chge_counter 00B2  
                          saved_status 0059  
                  _study_or_pulse_mode 00AA  
                    _usart_temp_buffer 0134  
           _pulse_down_time_valid_flag 0124  
                                status 0003  
                      ?_yel_displaying 004C  
                      ?_yel_displaydrv 0053  
                  _yel_displaying_flag 00B1  
                   _communication_flag 00A1  
                          _filterAC_DC 08FC  
              _syn_wink_display_updata 002F  
                              int_func 000D  
             _every_second_update_flag 0123  
                      _address_of_lamp 0120  
                 ?a_gre_displaying_end 0050  
          _g_segment_wink_time_counter 0027  
                     ?a_gre_displaying 004E  
                     ?a_gre_displaydrv 0055  
               _previous_study_counter 00C1  
                _study_lamp_stab_state 00A9  
                     ?a_G_Segment_Wink 0045  
                 _g_segment_displaying 0C9C  
                       _study_to_pulse 00AD  
                  _sametime_on_counter 00A8  
                      _seek_down_pulse 02E8  
                 _lamp_err_state_check 0862  
                        _lamp_off_flag 0029  
                      _lamp_temp_state 002C  
                   _yel_displaying_end 019E  
                _communication_counter 00A0  
                        _lamp_off_time 0033  
               _syn_wink_display_state 002E  
                      ?_gre_displaying 004C  
                      ?_gre_displaydrv 0053  
                     _lamp_off_counter 0036  
                      _syn_wink_manage 01AE  
                           _addr_write 0E1D  
                      _lamp_stab_state 002B  
                            _addr_read 0946  
                         _lamp_on_flag 002A  
                _current_study_counter 00B5  
                  _red_displaying_flag 00A6  
                           int_restore 0030  
                   _no_lamp_on_counter 002D  
                   _red_displaying_end 0C8C  
                           used_btemp0 0001  
                           used_btemp1 0001  
                           used_btemp2 0001  
                           used_btemp3 0001  
                           used_btemp4 0001  
                           used_btemp5 0001  
                           _timer1init 0C14  
                       _ten_mm_counter 00AF  
